{"question": "\nI'm trying to write a code so that if the token exists then it loads the account or else it asks the user for the API token. Below is the code for reference:\nfrom qiskit import IBMQ\ntry:\n    IBMQ.load_account()\nexcept Exception as e:\n    api_key = input(\"Enter IBMQ API Key\")\n    IBMQ.save_account(api_key, overwrite=True)\n    IBMQ.load_account()\n\nHowever, even after using the exception handling, still getting below errors:\nRequestsApiError: '401 Client Error: Unauthorized for url: https://auth.quantum-computing.ibm.com/api/users/loginWithToken. Login failed., Error code: 3446.'\n\nIBMQAccountCredentialsInvalidToken: 'Invalid IBM Quantum Experience token found: \"\" of type <class \\'str\\'>.'\n\nAny work around this to resolve this issue?\n", "answers": ["\nThe way I would do this is slight different:\nfrom qiskit import IBMQ\n\napi_key = None\nfor attempt in range(3):                                                # <- (1)\n    try:                                                                # <- (3)\n        if api_key:\n            IBMQ.save_account(api_key, overwrite=True)\n        else:\n            IBMQ.load_account()\n        break                                                           # <- (4)\n    except Exception:\n        api_key = input(\"Enter IBMQ API Key (attempt %s): \" % attempt)  # <- (2)\n\nThis 3-time-loop (line (1), you can replace it for while True: if you prefer infinite looping over this) sets a variable api_key (line (2)) continuously asking for the key while something goes wrong (line (3)). The things that can go wrong are save_account and load_account. If nothing goes wrong (line (4)), then get out of the loop.\n"], "comments": ["You are not handling the exception for after the token you input is invalid. Enter the valid token and this should work."], "link": "https://quantumcomputing.stackexchange.com//questions/15910/api-error-when-trying-to-access-ibm-quantum-computer-using-ibmq-api-token?r=SearchResults"}