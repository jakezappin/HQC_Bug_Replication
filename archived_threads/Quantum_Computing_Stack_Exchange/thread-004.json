{"question": "\n\n\n\n\n\n\n\nThis question already has an answer here:\n                                \n                            \n\n\n\n\nVary parameter between shots\n\n                                (1 answer)\n                            \n\nClosed 2 years ago.\n\n\n\nI am trying to run a quantum circuit many times, each time using a different random state - a single qubit i.e. |\u03c8\u27e9=a|0\u27e9+b|1\u27e9 with different a and b. Once each qubit has gone through the circuit, I am saving the state vector of the final state, and converting this to spherical coordinates by calculating \u03b8 and \u03d5. I append each \u03b8 and \u03d5 value to a list and then plot them on a histogram (omitted below).\nWhilst this works, for large num_states it is very slow, so I am wondering if there is a way to use the 'shots' feature when executing the circuit, since you can write:\njob = execute(qc, backend, shots=1000)\n\nI tried playing around with this but found after the initial random state was generated, it repeated the circuit with the same state for the number of shots, rather than doing a different state each time. I'd like to use the shots feature as I believe this will be much quicker since OpenMP is built into Qiskit.\nAny ideas on how I might be able to implement a different state each time using shots would be much appreciated:)\nimport numpy as np\nfrom qiskit import(\n    QuantumCircuit,\n    execute,\n    Aer)\n\nfrom math import pi\n\nfrom qiskit.quantum_info import random_statevector\n\n\n#----------------------------------------------------------------------#\nbackend = Aer.get_backend('statevector_simulator')\n\n\ndef simulate_states(num_states):\n    qc = QuantumCircuit(1)\n\n    theta_vals = []\n    phi_vals = []\n    \n    for i in range(num_states):\n        \n        random_state = random_statevector(2).data\n        \n        qc.initialize(random_state, 0)\n        qc.z(0)\n        job = execute(qc, backend)\n        result = job.result()\n        out_state = result.get_statevector()\n    \n        theta, phi, alpha_r, alpha_i, beta_r, beta_i = state_coords(out_state)\n        theta += pi/2\n        \n        theta_vals.append(theta)\n        phi_vals.append(phi)\n        \n    return theta_vals, phi_vals\n\ndef state_coords(statevector):\n    \"\"\"\n    determines the spherical coordinates of a state on the Bloch sphere i.e. calculates \\theta and \\phi.\n    \"\"\"\n    alpha = statevector[0]\n    alpha_r = alpha.real\n    alpha_i = alpha.imag\n\n    beta = statevector[1]\n    beta_r = beta.real\n    beta_i = beta.imag\n\n    theta = np.arcsin(2*((alpha_r*beta_r) - (alpha_i*beta_i)))\n    phi = 2*np.arccos(2*((alpha_r**2)+(beta_r**2))-1)   \n    \n    return theta, phi, alpha_r, alpha_i, beta_r, beta_i\n```\n\n", "answers": ["\nThe initial state in a quantum computer is fixed. It is usually taken to the the state |0\u27e9\u2297n. To vary a single qubit state during the experiment, you must therefore vary the circuit during the experiment, and you can't vary the circuit between each shot. However, if you wish to do what you proposed, you can create a list of circuits and each of them has vary quantum state |\u03c8\u27e9, then append them together to a list and submit it as a single job.\nFor example:\nfrom qiskit.quantum_info import random_state\nfrom qiskit.aqua.components.initial_states import Custom\nfrom qiskit import QuantumCircuit, execute, Aer, IBMQ\nfrom qiskit.tools.monitor import job_monitor\nprovider = IBMQ.load_account()\n\nnum_qubits = 1\nrandom_initial_state = random_state(2**num_qubits)  #create a random state psi\ncircuits = []\nfor i in range(100):\n    circuit = QuantumCircuit(num_qubits,num_qubits)\n    circuit.initialize(random_initial_state, 0)     \n    for j in range(num_qubits):\n        circuit.measure([j],[j])\n    circuits.append(circuit) \n\nqjob = execute(circuits,shots= 1,backend= Aer.get_backend('qasm_simulator'))\njob_monitor(qjob)\nresult = qjob.result()\n\nI believe that on the hardware, you can submit up to 900 circuits per job. So you can have up to 900 different states.\n"], "comments": ["@luciano this is not a duplicate: tge other question asks about varying the circuit while this one asks about varying the state."], "link": "https://quantumcomputing.stackexchange.com//questions/16197/qiskit-how-can-you-use-a-different-state-for-each-shot-in-a-quantum-circuit?r=SearchResults"}