{"question": "\nI would like to find density matrix after the measurement. The toy code:\nimport qiskit\nfrom qiskit.quantum_info import DensityMatrix\n\ncircuit = qiskit.QuantumCircuit(1, 1)\nprint(DensityMatrix.from_instruction(circuit))\ncircuit.measure(0, 0)\nprint(DensityMatrix.from_instruction(circuit))\n\nresults in the following error on the second print:\n\nQiskitError: 'Cannot apply instruction with classical bits: measure'\n\nHow can I make it work? As I understand, being well-defined (and taking classical probabilities into account) after the measurement is exactly the advantage of the density matrix over the state vector.\nI do know how to use save_density_matrix, and it indeed works. However, it only produces empirical results. E.g. when the true entry is 1/2, it might instead print 0.496.\nIt's more or less my first day working with qiskit and hearing about density matrix, so sorry if the question doesn't make sense. Ideally, I want to have the following information: a list of possible state vectors in the current state, with corresponding probabilities. As I understand, the density matrix is the closest alternative.\n", "answers": ["\nAccessing the Statevector |\u03c8\u27e9|\u03c8\u27e9 or the DensityMatrix \u03c1=|\u03c8\u27e9\u27e8\u03c8|\u03c1=|\u03c8\u27e9\u27e8\u03c8| of the quantum state prepared by a given circuit actually makes sense only before measurement, since measuring a qubit (in the usual computational basis) will make its state collapse into either |0\u27e9|0\u27e9 or |1\u27e9|1\u27e9. More in general, if you apply a measurement operation on each qubit of an nn-qubits system you make its state collapse into |\u03c8\u27e9=|bs\u27e9|\u03c8\u27e9=|bs\u27e9, where bsbs is a bit string in {0,1}n{0,1}n. This is why, in Qiskit, trying to access the state of the system after a call to circuit.measure is not even possible and you got that error.\nHowever, what you might want to do is to access the density matrix of a subsystem of your circuit by using the so-called partial trace operation.\nGiven the state \u03c1\u03c1 in the Hilbert space HA\u2297HBHA\u2297HB, its partial trace with respect to the system BB, denoted by \u03c1A\u03c1A, is called the reduced state of \u03c1\u03c1 on system AA and defined by \u03c1A=TrB\u03c1\u03c1A=TrB\u03c1. In general, this density matrix represents a mixed state (can't be written as a statevector) and it corresponds to the state of subsystem BB you would get after a measure on subsystem AA (consistent with outcomes statistics).\nIn Qiskit, to compute the density matrix \u03c1A\u03c1A, you can use the partial_trace(state, qargs) function, where state is your original \u03c1\u03c1 and qargs is a list of qubits indices in the subsytem BB to trace out. Here is a simple example:\nfrom qiskit import QuantumCircuit\nfrom qiskit.quantum_info import DensityMatrix, partial_trace\n\nqc = QuantumCircuit(3)\nqc.h(0)\nqc.cx(0, 1)\nqc.cx(0, 2)\n\nrho = DensityMatrix(qc)\nrho_a = partial_trace(state=rho, qargs=[1, 2])\nprint(rho_a)\n\n"], "comments": ["\"DensityMatrix \u03c1=|\u03c8\u27e9\u27e8\u03c8| of the quantum state prepared by a given circuit actually makes sense only before measurement\": you are talking about pure states. Density matrix can represent mixed states, which, according to the link, is defined after measurement.", "Yes exactly! But measurement taken on a different subsystem than the one whose density matrix you want to get: this is exactly what the partial trace operation performs. However, in your toy code you are trying to access the density matrix on the same qubit you have just measured", "I see, sorry, I'm pretty new, so I didn't understand your answer. I think I got a general idea now, but I don't really understand what exactly going on (e.g. why we need cnot here). Can I ask you please to elaborate on what happens in the code? Also, will it work if I want to find the density matrix after performing a second measurement?", "The code here is just an example to prepare an entangled 3-qubits state. I really suggest you to take a look to the Qiskit Textbook and you will find all your answers with the corresponding code.", "By the way, performing a second measurement on a qubit doesn't make sense because its state would have already collapsed to a classical 0 or 1.", "1) Thanks, I'll take a look. 2) I mean, there are some transformations between the two measurements."], "link": "https://quantumcomputing.stackexchange.com//questions/30360/qiskit-density-matrix-after-measurement"}