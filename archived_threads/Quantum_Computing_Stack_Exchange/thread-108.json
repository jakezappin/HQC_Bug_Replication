{"question": "\nI've been using qiskit for about a year now, and as of late, I've had issues finding an available backend to run my circuit on. Looking into the matter, I reinstalled qiskit to find that most everything had changed quite a bit. Now when I try to run just a basic test circuit program, taken from the tutorial I get this:\n~$ python3 test.py\n\nTraceback (most recent call last):\n  File \"test.py\", line 27, in <module>\n    job = execute(circ, backend)\n  File \"/home/micciche/.local/lib/python3.5/site-packages/qiskit/tools/compiler.py\", line 108, in execute\n    skip_transpiler, seed_mapper, pass_manager, memory)\n  File \"/home/micciche/.local/lib/python3.5/site-packages/qiskit/tools/compiler.py\", line 67, in compile\n    coupling_map=coupling_map, seed=seed, memory=memory)\n  File \"/home/micciche/.local/lib/python3.5/site-packages/qiskit/converters/circuits_to_qobj.py\", line 61, in circuits_to_qobj\n    coupling_map))\n  File \"/home/micciche/.local/lib/python3.5/site-packages/qiskit/converters/circuits_to_qobj.py\", line 92, in _circuit_to_experiment\n    json_circuit = DagUnroller(dag, JsonBackend(dag.basis)).execute()\n  File \"/home/micciche/.local/lib/python3.5/site-packages/qiskit/unroll/_dagunroller.py\", line 38, in execute\n    self._process()\n  File \"/home/micciche/.local/lib/python3.5/site-packages/qiskit/unroll/_dagunroller.py\", line 161, in _process\n    self.backend.new_qreg(name, width)\n  File \"/home/micciche/.local/lib/python3.5/site-packages/qiskit/unroll/_jsonbackend.py\", line 98, in new_qreg\n    assert size >= 0, \"invalid qreg size\"\n  TypeError: unorderable types: QuantumRegister() >= int()\n\nDoes anybody know how to resolve this? Thanks.\nEdit: This is the code I tried to run, which I just copied from a tutorial:\nimport numpy as np\nfrom qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister\nfrom qiskit import execute\n\n# Create a Quantum Register with 3 qubits.\nq = QuantumRegister(3, 'q')\n\n# Create a Quantum Circuit acting on the q register\ncirc = QuantumCircuit(q)\n\n# Add a H gate on qubit 0, putting this qubit in superposition.\ncirc.h(q[0])\n# Add a CX (CNOT) gate on control qubit 0 and target qubit 1, putting\n# the qubits in a Bell state.\ncirc.cx(q[0], q[1])\n# Add a CX (CNOT) gate on control qubit 0 and target qubit 2, putting\n# the qubits in a GHZ state.\ncirc.cx(q[0], q[2])\n\n# Import Aer\nfrom qiskit import BasicAer\n\n# Run the quantum circuit on a statevector simulator backend\nbackend = BasicAer.get_backend('statevector_simulator')\n\n# Create a Quantum Program for execution\njob = execute(circ, backend)\n\nresult = job.result()\n\noutputstate = result.get_statevector(circ, decimals=3)\nprint(outputstate)\n\n", "answers": ["\nThe code you provide works fine for me, so I guess that something is wrong with your installation.\nI recommend running the command\npip uninstall qiskit\n\nand also\npip uninstall qiskit-terra\npip uninstall qiskit-aqua\npip uninstall qiskit-aer\n\nand then reinstalling with\npip install qiskit\n\n"], "comments": ["Can you include the running code?", "To second James' answer, I would recommend if you are still having problems to install Qiskit in a virtual environment via the Conda route on the installation guide. I've seen many issues with colleagues from dependency clashes."], "link": "https://quantumcomputing.stackexchange.com//questions/5159/typeerror-unorderable-types-quantumregister-int?r=SearchResults"}