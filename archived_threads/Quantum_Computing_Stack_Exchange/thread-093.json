{"question": "\nI am looking for an efficient way to create a Hamiltonian in Qiskit.\nFollowing are my desired input and outputs\n\ninput: 'ZZI'\n\n\noutput: Z^Z^I, where Z and I are operators.\n\nHere is how I am doing it right now:\nfrom qiskit.circuit.library import TwoLocal\nfrom qiskit.opflow import X, Y, Z, I   \nfrom qiskit.utils import QuantumInstance\nfrom qiskit import *\nfrom qiskit.algorithms.optimizers import COBYLA\nfrom qiskit.algorithms import VQE\n\nweights = [i for i in range(1,4)]\n\nhamiltonian = weights[0]*(Z^Z^I) + weights[1]*(Z^I^Z) + weights[2]*(I^Z^Z)\n\n\nnum_qubits = hamiltonian.num_qubits\nansatz = TwoLocal(num_qubits, ['ry','rz'], 'cx', 'linear', reps=1, insert_barriers=True)\n\nqi = QuantumInstance(Aer.get_backend('statevector_simulator'))\n    \noptimizer = COBYLA(maxiter=100)\nvqe = VQE(ansatz, optimizer=optimizer, quantum_instance=qi)\nresult = vqe.compute_minimum_eigenvalue(hamiltonian)\n\nIf I have to run the same experiment on a 4 qubit, I need to redo the hamiltonian again. For example it would be:\nhamiltonian = weights[0]*(Z^Z^I^I) + weights[1]*(Z^I^Z^I) + weights[2]*(Z^I^I^Z) + weights[3]*(I^Z^Z^I) + weights[4]*(I^Z^I^Z) + + weights[4]*(I^I^Z^Z)\n\nThis option is not scalable when I have a 15 qubit circuit. I would really appreciate it if anyone can guide me in a way that I can build a scalable hamiltonian.\nI tried the following method and no luck:\nfrom qiskit.quantum_info.operators import Operator, Pauli\nhamiltonian = Operator(Pauli(label='ZZI')) + Operator(Pauli(label='ZIZ')) + Operator(Pauli(label='IZZ'))\n\nAny guidance would be really appreciated!\n", "answers": ["\nYou use PauliSumOp to do (for example) the following:\nfrom qiskit.opflow.primitive_ops import PauliSumOp\npaulis  =  ['IZ', 'XZ', 'YZ', 'ZZ', 'XX']\nweights  =  [1,2,3,4,5]\npauli_op = [([pauli,weight]) for pauli,weight in zip(paulis,weights)]\nhamiltonian = PauliSumOp.from_list([ op for op in pauli_op ])\n\nYou can then pass this hamiltonian object into the VQE instance like you did.\n"], "comments": ["This worked. Thank you very much!"], "link": "https://quantumcomputing.stackexchange.com//questions/21987/qiskit-simpler-way-to-create-a-hamiltonian"}