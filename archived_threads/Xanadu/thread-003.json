{"0": {"author": "tpatel", "date": "1605886807661", "content": "Hello,\nI get the following error when I use amplitude embedding with the normalize parameter set to True on a Qiskit device. I observe this error even when I normalize manually. I do not observe this error when using the default simulator device. How do I solve this issue?\nTraceback (most recent call last):\n  File \"ensembles_ibm_qx.py\", line 117, in <module>\n    p.append(qnode(learners[j], features=X_valid[i]))\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane/interfaces/autograd.py\", line 69, in __call__\n    return self.evaluate(args, kwargs)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/autograd/tracer.py\", line 48, in f_wrapped\n    return f_raw(*args, **kwargs)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane/qnodes/base.py\", line 826, in evaluate\n    ret = self.device.execute(self.circuit, return_native_type=temp)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane/_qubit_device.py\", line 169, in execute\n    self.apply(circuit.operations, rotations=circuit.diagonalizing_gates, **kwargs)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane_qiskit/qiskit_device.py\", line 214, in apply\n    applied_operations = self.apply_operations(operations)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane_qiskit/qiskit_device.py\", line 265, in apply_operations\n    gate = mapped_operation(*par)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/qiskit/extensions/quantum_initializer/initializer.py\", line 57, in __init__\n    raise QiskitError(\"Sum of amplitudes-squared does not equal one.\")\nqiskit.exceptions.QiskitError: 'Sum of amplitudes-squared does not equal one.'\n\nThe following is a section of the code:\ndev1 = qml.device(name='qiskit.ibmq', backend='ibmq_rome',\n\t\t\t\t  ibmqx_token='xxx',\n\t\t\t\t  hub='ibm-q-xxx', group='xxx-uni', project='main', wires=num_wires)\n\ndef one_layer(W):\n\tfor i in range(num_wires):\n\t\tqml.Rot(W[i][0], W[i][1], W[i][2], wires=i)\n\tqml.CNOT(wires=[0, 1])\n\tqml.CNOT(wires=[1, 2])\n\tqml.CNOT(wires=[2, 3])\n\tqml.CNOT(wires=[3, 4])\n\tqml.CNOT(wires=[4, 0])\n\ndef classifier(weights, features=None):\n\tAmplitudeEmbedding(features=features, wires=range(num_wires), normalize=True)\n\tfor W in weights:\n\t\tone_layer(W)\n\treturn qml.expval(qml.PauliZ(0))\n\nQiskit version info is as follows:\nPennyLane-qiskit==0.12.0\nqiskit==0.23.1\nqiskit-aer==0.7.1\nqiskit-aqua==0.8.1\nqiskit-ibmq-provider==0.11.1\nqiskit-ignis==0.5.1\nqiskit-terra==0.16.1\n\nThank you!", "link": "https://discuss.pennylane.ai//t/amplitude-embedding-issue-when-running-on-qiskit-device/690/1"}, "1": {"author": "glassnotes", "date": "1605890010874", "content": "Hi @tpatel,\nWelcome to the community, and thank you for reaching out!\nI\u2019m looking into this right now. So far I haven\u2019t been able to reproduce the error - I\u2019ve tried these two types of devices so far:\n# Locally simulated device\ndev1 = qml.device(name='qiskit.aer', wires=num_wires)\n\n# IBM Q backend\ndev1 = qml.device(name='qiskit.ibmq', backend='ibmq_qasm_simulator', wires=num_wires)\n\nI don\u2019t have access to Rome, but I am currently in the queue for a different hardware backend, and I will update this once that is finished. (Update: the job completed without errors, so please let me some more details about the data.)\nIn the meantime, I was wondering if you could provide a bit more information about the kind of data you\u2019re working with. I tried with a very simple example, where I am using both normalize = True and pad = 0.0 in the AmplitudeEmbedding.\nimport pennylane as qml\nimport numpy as np\n\nnum_wires = 5\n\n# Some random data\nfeatures = np.array([2, 3, 4, 5])\n\ndev1 = qml.device(name='qiskit.aer', wires=num_wires)\n\ndef one_layer(W):\n    for i in range(num_wires):\n        qml.Rot(W[i][0], W[i][1], W[i][2], wires=i)\n        qml.CNOT(wires=[0, 1])\n        qml.CNOT(wires=[1, 2])\n        qml.CNOT(wires=[2, 3])\n        qml.CNOT(wires=[3, 4])\n        qml.CNOT(wires=[4, 0])\n\n@qml.qnode(dev1)\ndef classifier(weights, features=None):\n    qml.templates.AmplitudeEmbedding(features=features, wires=range(num_wires), normalize=True, pad=0.0)\n    for W in weights:\n        one_layer(W)\n    return qml.expval(qml.PauliZ(0))\n\nweights = np.random.uniform(size=(1, num_wires, 3))\n\nclassifier(weights, features=features)\n\nDoes this run successfully on either the simulator or hardware backend you\u2019re working with?", "link": "https://discuss.pennylane.ai//t/amplitude-embedding-issue-when-running-on-qiskit-device/690/2"}, "2": {"author": "tpatel", "date": "1605893003834", "content": "Hi @glassnotes,\nThank you for your help! It was in fact a precision issue with the numpy array. The numpy dataset I am using was stored as float64. But loading it on one of my devices (Python 3.7.4) was converting it into a float32 format. So casting it into float64 solved the issue.\nTo be on the safe side, should I always ensure a 64-bit precision when working with pennylane/pennylane-qiskit?\nThank you!", "link": "https://discuss.pennylane.ai//t/amplitude-embedding-issue-when-running-on-qiskit-device/690/3"}, "3": {"author": "glassnotes", "date": "1605894043696", "content": "Hi @tpatel,\nAwesome, glad you solved it!\nI looked through our logs and it seems that there are some differences in how PennyLane and Qiskit calculate the norm of a statevector, which is likely why upping the precision fixed things (you can read more about the issues here 8 if you\u2019re interested). So probably a good idea to use float64 if you\u2019re working with very dense data vectors that will require normalization.\nCheers!1", "link": "https://discuss.pennylane.ai//t/amplitude-embedding-issue-when-running-on-qiskit-device/690/4"}, "4": {"author": "tpatel", "date": "1605886807661", "content": "Hello,\nI get the following error when I use amplitude embedding with the normalize parameter set to True on a Qiskit device. I observe this error even when I normalize manually. I do not observe this error when using the default simulator device. How do I solve this issue?\nTraceback (most recent call last):\n  File \"ensembles_ibm_qx.py\", line 117, in <module>\n    p.append(qnode(learners[j], features=X_valid[i]))\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane/interfaces/autograd.py\", line 69, in __call__\n    return self.evaluate(args, kwargs)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/autograd/tracer.py\", line 48, in f_wrapped\n    return f_raw(*args, **kwargs)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane/qnodes/base.py\", line 826, in evaluate\n    ret = self.device.execute(self.circuit, return_native_type=temp)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane/_qubit_device.py\", line 169, in execute\n    self.apply(circuit.operations, rotations=circuit.diagonalizing_gates, **kwargs)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane_qiskit/qiskit_device.py\", line 214, in apply\n    applied_operations = self.apply_operations(operations)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/pennylane_qiskit/qiskit_device.py\", line 265, in apply_operations\n    gate = mapped_operation(*par)\n  File \"/opt/miniconda3/lib/python3.8/site-packages/qiskit/extensions/quantum_initializer/initializer.py\", line 57, in __init__\n    raise QiskitError(\"Sum of amplitudes-squared does not equal one.\")\nqiskit.exceptions.QiskitError: 'Sum of amplitudes-squared does not equal one.'\n\nThe following is a section of the code:\ndev1 = qml.device(name='qiskit.ibmq', backend='ibmq_rome',\n\t\t\t\t  ibmqx_token='xxx',\n\t\t\t\t  hub='ibm-q-xxx', group='xxx-uni', project='main', wires=num_wires)\n\ndef one_layer(W):\n\tfor i in range(num_wires):\n\t\tqml.Rot(W[i][0], W[i][1], W[i][2], wires=i)\n\tqml.CNOT(wires=[0, 1])\n\tqml.CNOT(wires=[1, 2])\n\tqml.CNOT(wires=[2, 3])\n\tqml.CNOT(wires=[3, 4])\n\tqml.CNOT(wires=[4, 0])\n\ndef classifier(weights, features=None):\n\tAmplitudeEmbedding(features=features, wires=range(num_wires), normalize=True)\n\tfor W in weights:\n\t\tone_layer(W)\n\treturn qml.expval(qml.PauliZ(0))\n\nQiskit version info is as follows:\nPennyLane-qiskit==0.12.0\nqiskit==0.23.1\nqiskit-aer==0.7.1\nqiskit-aqua==0.8.1\nqiskit-ibmq-provider==0.11.1\nqiskit-ignis==0.5.1\nqiskit-terra==0.16.1\n\nThank you!", "link": "https://discuss.pennylane.ai//t/amplitude-embedding-issue-when-running-on-qiskit-device/690/5"}}