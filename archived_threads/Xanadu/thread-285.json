{"0": {"author": "Guillermo_Valverde", "date": "1683022908716", "content": "Hello.\nI am having some problems creating a keras model with a quantum layer. I obtain the following Warning when I try to train my model:\nWARNING:tensorflow:You are casting an input of type complex128 to an incompatible dtype float32.  This will discard the imaginary part and may not be what you intended.\nMy code is the following one:\nimport pennylane as qml\nimport sklearn.datasets\nfrom qiskit_machine_learning import datasets\nimport qiskit_machine_learning as qiskitml\nfrom sklearn.model_selection import train_test_split\n\nn_qubits = 5\ndev = qml.device(\"default.qubit\", wires=n_qubits)\n\n@qml.qnode(dev)\ndef qnode(inputs, weights):\n    qml.templates.AngleEmbedding(np.pi*inputs, wires=range(n_qubits))\n    qml.templates.StronglyEntanglingLayers(weights, wires=range(n_qubits))\n    \n    return [qml.expval(qml.PauliZ(i)) for i in range(n_qubits)]\n\nshape = qml.StronglyEntanglingLayers.shape(n_layers=1, n_wires=5)\nweight_shapes = {\"weights\": shape}\n\ninputs = np.random.rand(n_qubits).astype(comp_dtype)\nweights = np.random.rand(2, n_qubits, 3).astype(comp_dtype)\n\nX_train, X_test, Y_train, Y_test =train_test_split(x, y,test_size=0.15, random_state=0)\nX = tf.constant(X_train,dtype=comp_dtype)\nY = tf.constant(Y_train,dtype=comp_dtype)\nX_test= tf.constant(X_test,dtype=comp_dtype)\nY_test= tf.constant(Y_test,dtype=comp_dtype)\nprint(qnode(X_train[0],weights))\n\nq_layer = qml.qnn.KerasLayer(qnode, weight_shapes, output_dim=n_qubits, dtype=comp_dtype)\nq_layer.build(2)\n\nq_model = tf.keras.models.Sequential()\nq_model.add(tf.keras.layers.Dense(n_qubits, activation='sigmoid', input_dim=5))\nq_model.add(q_layer)\nq_model.add(tf.keras.layers.Dense(1, activation='softmax'))\n\nq_model.summary()\n\nopt = tf.keras.optimizers.Adam(learning_rate=0.05)\nq_model.compile(loss='huber', optimizer=opt, metrics=[\"accuracy\"])\n\nq_model.fit(X, Y, epochs=8, batch_size=5, verbose=1,  validation_data=(X_test, Y_test))\n\nAnd my versions of tensorflow and pennylane are the following ones:\ntensorflow == Version: 2.12.0\nPennylane == Version: 0.29.1\nThe problem is that this warning appears many times, so if someone can help me solving it or just ignoring it would be perfect.\nThanks in advance.", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/1"}, "1": {"author": "isaacdevlugt", "date": "1683042514914", "content": "Hey @Guillermo_Valverde!\nYour code is incomplete and I cannot run it or replicate your issue; there are some imports and variable definitions missing and I\u2019m getting different errors than your are. That said, if you\u2019re okay with what the warning message is saying to you (i.e., \u201cdiscarding the imaginary part\u201d) and you just want to get rid of the warning message, you can try this:\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\n\nIf you aren\u2019t okay with discarding the imaginary part, then I\u2019ll need you to copy-paste 100% self-contained code so that I can run it .", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/2"}, "2": {"author": "Guillermo_Valverde", "date": "1683048050590", "content": "The following is a simpler code with the same warning. The solution you gave me it didn\u2019t solve the warning problem, here I attach an screenshot.\nMy code\nimport pennylane as qml\nimport tensorflow as tf\nimport sklearn.datasets\nfrom qiskit_machine_learning import datasets\nimport qiskit_machine_learning as qiskitml\nn_qubits = 2\ndev = qml.device(\"default.qubit\", wires=n_qubits)\n\n@qml.qnode(dev)\ndef qnode(inputs, weights):\n    qml.templates.AngleEmbedding(inputs, wires=range(n_qubits))\n    qml.templates.StronglyEntanglingLayers(weights, wires=range(n_qubits))\n    return qml.expval(qml.PauliZ(0)), qml.expval(qml.PauliZ(1))\n\nweight_shapes = {\"weights\": (3, n_qubits, 3)}\n\nqlayer = qml.qnn.KerasLayer(qnode, weight_shapes, output_dim=2)\nclayer1 = tf.keras.layers.Dense(2)\nclayer2 = tf.keras.layers.Dense(2, activation=\"softmax\")\nmodel = tf.keras.models.Sequential([clayer1, qlayer, clayer2])\n\ntrain_feats, train_labels, test_feats, test_labels =qiskitml.datasets.breast_cancer(80, 30, n=2, plot_data=False,one_hot=False)\nX = tf.constant(train_feats)\nY = tf.one_hot(train_labels, depth=2)\nX_test= tf.constant(test_feats)\nY_test= tf.one_hot(test_labels,depth=2)\n\nopt = tf.keras.optimizers.SGD(learning_rate=0.5)\nmodel.compile(opt, loss='mae', metrics=['accuracy'])\n\nimport warnings\nwarnings.filterwarnings('ignore') # To ignore warnings.\nmodel.fit(X, Y, epochs=8, batch_size=5, verbose=1,  validation_data=(X_test, Y_test))\n\nThe warning\n\nimage1244\u00d7331 50.3 KB\n", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/3"}, "3": {"author": "isaacdevlugt", "date": "1683128717846", "content": "Ah! This one was tricky to spot. Interestingly, the demo on turning QNodes into KerasLayers 3 also outputs the same warnings . It\u2019s unclear at this stage whether or not this is a PennyLane issue or a TensorFlow issue. It might be something related to what can happen in PyTorch (see here: Casting real parameter to complex during forward produces warning on backward \u00b7 Issue #68331 \u00b7 pytorch/pytorch \u00b7 GitHub 3).\nTLDR: This sometimes arises with backprop, because a workflow that has float \u2192 complex \u2192 float could accidentally trigger this warning in reverse.\nWhat I suggest to you is to simply suppress the warning messages. I did some digging on best practices here and there\u2019s a package for silencing Tensorflow warnings  : silence-tensorflow \u00b7 PyPI 3\nYou can pip install silence-tensorflow, then just put\nfrom silence_tensorflow import silence_tensorflow\nsilence_tensorflow()\n\nat the top of your code  .", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/4"}, "4": {"author": "kevinkawchak", "date": "1700547644496", "content": "Hello, I get a TensorFlow error in \u2019 Learning to learn with quantum neural networks\u2019 and \u2019 Turning quantum nodes into Keras Layers\u2019, which makes  Is there a version that works better than others?  Silencing partially works.\n\"WARNING:tensorflow:You are casting an input of type complex128 to an incompatible dtype float64.  This will discard the imaginary part and may not be what you intended.\",\n\n'https://github.com/kevinkawchak/Medical-Quantum-Machine-Learning/blob/main/Code/All%20PennyLane%20QML%20Demos/16%20Keras%20Layers%200.18%20Loss%20kkawchak.ipynb 1", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/5"}, "5": {"author": "isaacdevlugt", "date": "1700585315498", "content": "Hey @kevinkawchak, thanks for reporting this! I don\u2019t think we have a work-around at this time. If you\u2019re interested, though, you can try to restructure the code to make it work with Pytorch instead of TensorFlow . Pytorch is a little less fussy!", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/6"}, "6": {"author": "kevinkawchak", "date": "1701025038333", "content": "Happy Holidays. This version of TensorFlow in Colab removes the input warnings for the following demos.\n!pip install tensorflow==2.8.1\n\n'Learning to learn with quantum neural networks | PennyLane Demos 1\n'Turning quantum nodes into Keras Layers | PennyLane Demos 11", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/7"}, "7": {"author": "CatalinaAlbornoz", "date": "1701225339414", "content": "Hi @kevinkawchak, thank you for posting this solution!", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/8"}, "8": {"author": "Guillermo_Valverde", "date": "1683022908716", "content": "Hello.\nI am having some problems creating a keras model with a quantum layer. I obtain the following Warning when I try to train my model:\nWARNING:tensorflow:You are casting an input of type complex128 to an incompatible dtype float32.  This will discard the imaginary part and may not be what you intended.\nMy code is the following one:\nimport pennylane as qml\nimport sklearn.datasets\nfrom qiskit_machine_learning import datasets\nimport qiskit_machine_learning as qiskitml\nfrom sklearn.model_selection import train_test_split\n\nn_qubits = 5\ndev = qml.device(\"default.qubit\", wires=n_qubits)\n\n@qml.qnode(dev)\ndef qnode(inputs, weights):\n    qml.templates.AngleEmbedding(np.pi*inputs, wires=range(n_qubits))\n    qml.templates.StronglyEntanglingLayers(weights, wires=range(n_qubits))\n    \n    return [qml.expval(qml.PauliZ(i)) for i in range(n_qubits)]\n\nshape = qml.StronglyEntanglingLayers.shape(n_layers=1, n_wires=5)\nweight_shapes = {\"weights\": shape}\n\ninputs = np.random.rand(n_qubits).astype(comp_dtype)\nweights = np.random.rand(2, n_qubits, 3).astype(comp_dtype)\n\nX_train, X_test, Y_train, Y_test =train_test_split(x, y,test_size=0.15, random_state=0)\nX = tf.constant(X_train,dtype=comp_dtype)\nY = tf.constant(Y_train,dtype=comp_dtype)\nX_test= tf.constant(X_test,dtype=comp_dtype)\nY_test= tf.constant(Y_test,dtype=comp_dtype)\nprint(qnode(X_train[0],weights))\n\nq_layer = qml.qnn.KerasLayer(qnode, weight_shapes, output_dim=n_qubits, dtype=comp_dtype)\nq_layer.build(2)\n\nq_model = tf.keras.models.Sequential()\nq_model.add(tf.keras.layers.Dense(n_qubits, activation='sigmoid', input_dim=5))\nq_model.add(q_layer)\nq_model.add(tf.keras.layers.Dense(1, activation='softmax'))\n\nq_model.summary()\n\nopt = tf.keras.optimizers.Adam(learning_rate=0.05)\nq_model.compile(loss='huber', optimizer=opt, metrics=[\"accuracy\"])\n\nq_model.fit(X, Y, epochs=8, batch_size=5, verbose=1,  validation_data=(X_test, Y_test))\n\nAnd my versions of tensorflow and pennylane are the following ones:\ntensorflow == Version: 2.12.0\nPennylane == Version: 0.29.1\nThe problem is that this warning appears many times, so if someone can help me solving it or just ignoring it would be perfect.\nThanks in advance.", "link": "https://discuss.pennylane.ai//t/error-creating-a-keras-model-with-a-quantum-circuit-as-a-layer/2911/9"}}