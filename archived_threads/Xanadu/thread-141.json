{"0": {"author": "theodor", "date": "1603463185300", "content": "We\u2019re very excited to announce the release of Strawberry Fields version 0.16.  \nThis release is focused on supporting time domain algorithms via the new sf.TDMProgram class and extending the apps.qchem module with new functions.\n\nTime Domain  \nHighly scalable simulation of Gaussian states is now available with native support for time-domain multiplexing algorithms via the new TDMProgram class.\nThe following is an example for time domain program with 2 concurrent modes:\n\n\nCode example\nimport strawberryfields as sf\nfrom strawberryfields import ops\n\nprog = sf.TDMProgram(N=2)\n\nwith prog.context([1, 2], [3, 4], copies=3) as (p, q):\n    ops.Sgate(0.7, 0) | q[1]\n    ops.BSgate(p[0]) | (q[0], q[1])\n    ops.MeasureHomodyne(p[1]) | q[0]\n\neng = sf.Engine(\"gaussian\")\nresults = eng.run(prog)\n\nprint(results.all_samples)\n\n{0: [array([1.26208025]), array([1.53910032]), array([-1.29648336]),\narray([0.75743215]), array([-0.17850101]), array([-1.44751996])]}\n\n\n\n\nFor more details see the Time-domain photonic circuits 5 demonstration.\n\nVibronic Transition \nThe ability to apply the Doktorov operator on a given state is now available by using the VibronicTransition function from the apps.qchem.dynamics module.\n\n\nCode example\nfrom strawberryfields.apps.qchem.vibronic import VibronicTransition\n\nmodes = 2\np = sf.Program(modes)\n\nwith p.context as q:\n    VibronicTransition(U1, r, U2, alpha) | q\n\n\n\n\nTime evolution   \nThe time evolution operator can be applied on a given state using the TimeEvolution function from the apps.qchem.dynamics module.\n\n\nCode example\nmodes = 2\np = sf.Program(modes)\n\nwith p.context as q:\n    sf.ops.Fock(1) | q[0]\n    sf.ops.Interferometer(Ul.T) | q\n    TimeEvolution(w, t) | q\n    sf.ops.Interferometer(Ul) | q\n\n\n\nThe full release notes are available at Release notes \u2014 Strawberry Fields 0.23.0 documentation 4.\nAs always, this release would not have been possible without all the help from our contributors:\n@jmarrazola , @Tom_Bromley, @theodor, @josh, @sjahangiri, @nathan, Fabian Laudenbach, @Nicolas_Quesada, @antalszava, \u202aIlan Tzitrin.3", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/1"}, "1": {"author": "_risto", "date": "1624294505407", "content": "When I try to upgrade sf via https://strawberryfields.readthedocs.io/en/stable/_static/install.html I get Requirement already satisfied: locket in c:\\users\\risto\\appdata\\local\\programs\\python\\python39\\lib\\site-packages (from partd>=0.3.10->dask[delayed]->thewalrus>=0.15.0->strawberryfields) (0.2.1) - > why does it not upgrade to sf 0.16.?\nI get same response with Shell & Conda.\nAfter \u201cimport strawberryfields as sf\u201d I get \"\nModuleNotFoundError: No module named \u2018strawberryfields\u2019 \"", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/2"}, "2": {"author": "nathan", "date": "1624300811217", "content": "Hi @_risto,\nThis seems like a constraint of how pip works. It usually falls back to the lowest compatible version when resolving dependencies. So when you ask for it install strawberryfields, and it finds a version, then it will just leave it.\nIf you want to force the upgrade, you can type pip install strawberryfields --upgrade. Also, if you want to install a very specific version (that may not be the latest), you can also do pip install strawberryfields==0.18", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/3"}, "3": {"author": "nathan", "date": "1624300959845", "content": "Your observed issue with ModuleNotFoundError could potentially be a distinct problem though. From your message text, it looks like SF is already installed; but since you are getting the error on import, it is possible that you have multiple virtual environments (e.g., conda), and the one that it is installed in is different from the one that you are using when typing import strawberry fields as sf. This is something that is worth you checking carefully, as it\u2019s hard for us to provide debugging help related to your local environments", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/4"}, "4": {"author": "_risto", "date": "1624317125823", "content": "After running:\ndev = qml.device(\u201cstrawberryfields.fock\u201d, wires=1, cutoff_dim=10)\nimport pennylane as qml\ndev = qml.device(\u2018strawberryfields.fock\u2019, wires=2, cutoff_dim=10)\nfrom https://pennylane.ai/qml/demos/quantum_neural_net.html\nI get:\nDeviceError                               Traceback (most recent call last)\n in \n----> 1 dev = qml.device(\u201cstrawberryfields.fock\u201d, wires=1, cutoff_dim=10)\n2 import pennylane as qml\n3\n4 dev = qml.device(\u2018strawberryfields.fock\u2019, wires=2, cutoff_dim=10)\n~\\anaconda3\\lib\\site-packages\\pennylane_init_.py in device(name, *args, **kwargs)\n253         return plugin_device_class(*args, **options)\n254\n\u2013> 255     raise DeviceError(\u201cDevice does not exist. Make sure the required plugin is installed.\u201d)\n256\n257\nDeviceError: Device does not exist. Make sure the required plugin is installed.", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/5"}, "5": {"author": "nathan", "date": "1624372766639", "content": "Hi @_risto,\nHave you installed the Strawberry Fields plugin to PennyLane in the same environment? pip install pennylane-sf", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/6"}, "6": {"author": "_risto", "date": "1624372870514", "content": "Hi @nathan\nYes, I did.", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/7"}, "7": {"author": "nathan", "date": "1624382829796", "content": "Great, than can you please report the about of qml.about() running in the same session as where you received this error message? (remember to import pennylane as qml first )", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/8"}, "8": {"author": "_risto", "date": "1624384411199", "content": "Hi @nathan\nThe issue has been resolved by an answer I got in another thread. Thank you ", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/9"}, "9": {"author": "nathan", "date": "1624391469921", "content": "Glad to hear it! ", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/10"}, "10": {"author": "theodor", "date": "1603463185300", "content": "We\u2019re very excited to announce the release of Strawberry Fields version 0.16.  \nThis release is focused on supporting time domain algorithms via the new sf.TDMProgram class and extending the apps.qchem module with new functions.\n\nTime Domain  \nHighly scalable simulation of Gaussian states is now available with native support for time-domain multiplexing algorithms via the new TDMProgram class.\nThe following is an example for time domain program with 2 concurrent modes:\n\n\nCode example\nimport strawberryfields as sf\nfrom strawberryfields import ops\n\nprog = sf.TDMProgram(N=2)\n\nwith prog.context([1, 2], [3, 4], copies=3) as (p, q):\n    ops.Sgate(0.7, 0) | q[1]\n    ops.BSgate(p[0]) | (q[0], q[1])\n    ops.MeasureHomodyne(p[1]) | q[0]\n\neng = sf.Engine(\"gaussian\")\nresults = eng.run(prog)\n\nprint(results.all_samples)\n\n{0: [array([1.26208025]), array([1.53910032]), array([-1.29648336]),\narray([0.75743215]), array([-0.17850101]), array([-1.44751996])]}\n\n\n\n\nFor more details see the Time-domain photonic circuits 5 demonstration.\n\nVibronic Transition \nThe ability to apply the Doktorov operator on a given state is now available by using the VibronicTransition function from the apps.qchem.dynamics module.\n\n\nCode example\nfrom strawberryfields.apps.qchem.vibronic import VibronicTransition\n\nmodes = 2\np = sf.Program(modes)\n\nwith p.context as q:\n    VibronicTransition(U1, r, U2, alpha) | q\n\n\n\n\nTime evolution   \nThe time evolution operator can be applied on a given state using the TimeEvolution function from the apps.qchem.dynamics module.\n\n\nCode example\nmodes = 2\np = sf.Program(modes)\n\nwith p.context as q:\n    sf.ops.Fock(1) | q[0]\n    sf.ops.Interferometer(Ul.T) | q\n    TimeEvolution(w, t) | q\n    sf.ops.Interferometer(Ul) | q\n\n\n\nThe full release notes are available at Release notes \u2014 Strawberry Fields 0.23.0 documentation 4.\nAs always, this release would not have been possible without all the help from our contributors:\n@jmarrazola , @Tom_Bromley, @theodor, @josh, @sjahangiri, @nathan, Fabian Laudenbach, @Nicolas_Quesada, @antalszava, \u202aIlan Tzitrin.3", "link": "https://discuss.pennylane.ai//t/strawberry-fields-v0-16-0-released/634/11"}}