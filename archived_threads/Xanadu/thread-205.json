{"0": {"author": "wongwsvincent", "date": "1620867421857", "content": "Hello!\nI am using StronglyEntanglingLayers to apply multiple layers of single qubit rotations and CNOT-entanglers. I realized that two CNOT gates are applied in each layer when I have only two wires, but I would like to apply it once only per layer.\nIs there a reason why StronglyEntanglingLayers doesn\u2019t handle scenarios with two wires like BasicEntanglerLayers? Many thanks!\nRelevant pennylane code:\n\n\ngithub.com\n\n\nPennyLaneAI/pennylane/blob/master/pennylane/templates/layers/strongly_entangling.py#L114 1\n\n        for l in range(self.n_layers):\n\n\n            for i in range(len(self.wires)):\n                qml.Rot(\n                    self.parameters[0][l, i, 0],\n                    self.parameters[0][l, i, 1],\n                    self.parameters[0][l, i, 2],\n                    wires=self.wires[i],\n                )\n\n\n            if len(self.wires) > 1:\n                for i in range(len(self.wires)):\n                    act_on = self.wires.subset([i, i + self.ranges[l]], periodic_boundary=True)\n                    self.imprimitive(wires=act_on)\n\n\n    return tape\n\n\n@staticmethod\ndef shape(n_layers, n_wires):\n    r\"\"\"Returns the expected shape of the weights tensor.\n\n\n\n\n\n\n\n\n\nvs\n\n\ngithub.com\n\n\nPennyLaneAI/pennylane/blob/master/pennylane/templates/layers/basic_entangler.py#L156\n\n    # first dimension of the weights tensor determines\n    # the number of layers\n    repeat = qml.math.shape(weights)[0]\n\n\n    with qml.tape.QuantumTape() as tape:\n\n\n        for layer in range(repeat):\n            for i in range(len(self.wires)):\n                self.rotation(weights[layer][i], wires=self.wires[i : i + 1])\n\n\n            if len(self.wires) == 2:\n                qml.CNOT(wires=self.wires)\n\n\n            elif len(self.wires) > 2:\n                for i in range(len(self.wires)):\n                    w = self.wires.subset([i, i + 1], periodic_boundary=True)\n                    qml.CNOT(wires=w)\n\n\n    return tape\n\n\n@staticmethod\n\n\n\n\n\n\n", "link": "https://discuss.pennylane.ai//t/stronglyentanglinglayers-with-two-qubits/1043/1"}, "1": {"author": "Maria_Schuld", "date": "1620915460684", "content": "Hey @wongwsvincent,\nAn excellent question \nThis is more a historical reason, BasicEntanglingLayers was coded up later when the issue of repeating the CNOT when we have 2 wires was not yet apparent to us.\nI am in favour of changing the behaviour of StronglyEntanglingLayers! The best thing to do would be to open an issue 4 where you explain what you would like to happen (also mention that this is already done in the other embedding). We can discuss in the issue how to go about changing it, since it will  change people\u2019s code. Either you or we can then make a PR!", "link": "https://discuss.pennylane.ai//t/stronglyentanglinglayers-with-two-qubits/1043/2"}, "2": {"author": "wongwsvincent", "date": "1620927370882", "content": "Hi @Maria_Schuld,\nThanks for the explanation! I have opened an issue 4 as you suggested.\nThe implementation seems straightforward enough for me to contribute. I am happy to make a PR when there\u2019s no strong objection to the idea ", "link": "https://discuss.pennylane.ai//t/stronglyentanglinglayers-with-two-qubits/1043/3"}, "3": {"author": "Maria_Schuld", "date": "1620971973598", "content": "Wonderful, thanks so much!", "link": "https://discuss.pennylane.ai//t/stronglyentanglinglayers-with-two-qubits/1043/4"}, "4": {"author": "wongwsvincent", "date": "1620867421857", "content": "Hello!\nI am using StronglyEntanglingLayers to apply multiple layers of single qubit rotations and CNOT-entanglers. I realized that two CNOT gates are applied in each layer when I have only two wires, but I would like to apply it once only per layer.\nIs there a reason why StronglyEntanglingLayers doesn\u2019t handle scenarios with two wires like BasicEntanglerLayers? Many thanks!\nRelevant pennylane code:\n\n\ngithub.com\n\n\nPennyLaneAI/pennylane/blob/master/pennylane/templates/layers/strongly_entangling.py#L114 1\n\n        for l in range(self.n_layers):\n\n\n            for i in range(len(self.wires)):\n                qml.Rot(\n                    self.parameters[0][l, i, 0],\n                    self.parameters[0][l, i, 1],\n                    self.parameters[0][l, i, 2],\n                    wires=self.wires[i],\n                )\n\n\n            if len(self.wires) > 1:\n                for i in range(len(self.wires)):\n                    act_on = self.wires.subset([i, i + self.ranges[l]], periodic_boundary=True)\n                    self.imprimitive(wires=act_on)\n\n\n    return tape\n\n\n@staticmethod\ndef shape(n_layers, n_wires):\n    r\"\"\"Returns the expected shape of the weights tensor.\n\n\n\n\n\n\n\n\n\nvs\n\n\ngithub.com\n\n\nPennyLaneAI/pennylane/blob/master/pennylane/templates/layers/basic_entangler.py#L156\n\n    # first dimension of the weights tensor determines\n    # the number of layers\n    repeat = qml.math.shape(weights)[0]\n\n\n    with qml.tape.QuantumTape() as tape:\n\n\n        for layer in range(repeat):\n            for i in range(len(self.wires)):\n                self.rotation(weights[layer][i], wires=self.wires[i : i + 1])\n\n\n            if len(self.wires) == 2:\n                qml.CNOT(wires=self.wires)\n\n\n            elif len(self.wires) > 2:\n                for i in range(len(self.wires)):\n                    w = self.wires.subset([i, i + 1], periodic_boundary=True)\n                    qml.CNOT(wires=w)\n\n\n    return tape\n\n\n@staticmethod\n\n\n\n\n\n\n", "link": "https://discuss.pennylane.ai//t/stronglyentanglinglayers-with-two-qubits/1043/5"}}