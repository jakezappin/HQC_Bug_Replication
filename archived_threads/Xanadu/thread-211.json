{"0": {"author": "ThunderBolt-OS", "date": "1687281794815", "content": "Hello everyone, I would like to know what changes shall I make in this model to make this model eligible for multiclass image classification (for eg 5 image classes).", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/1"}, "1": {"author": "Solomon", "date": "1687290651584", "content": "It appears you didn\u2019t specify a particular model. I\u2019m assuming you\u2019re working on a hybrid model? Typically, if you\u2019re using a classical model that\u2019s already been trained on ImageNet (which comprises 1000 classes), you would modify the final fully-connected layer to correspond to your specific number of classes \u2013 in this case, 5. Here\u2019s an illustration:\nself.classifier = torch.nn.Linear(n_qubits, 5)\n\nHope this helps.2 Replies", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/2"}, "2": {"author": "isaacdevlugt", "date": "1687356006520", "content": "Hey @ThunderBolt-OS! Welcome to the forum \nUsually with machine learning models that have multinomial classification (i.e., the model is asked to be able to classify more than just two different types of objects), the final layer in the network is a softmax layer. A softmax layer is also commonly used for binary classification, but it\u2019s more general than that.\nWith this layer at the end of the network, it allows for you to be able to interpret your network\u2019s output as a probability distribution over the possible types of objects it could classify an input as.\nIt would look like this, for example:\n[0.1, 0.3, 0.4, 0.2]\n\nwhere entry i in the array corresponds to the probability of your network classifying the input as the i^{\\text{th}} type (e.g., entry 1 through 4 would correspond to the probability of a cat  , dog  , panda  , and racoon , respectively).\nHope that helps!1 Reply", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/3"}, "3": {"author": "ThunderBolt-OS", "date": "1687357574444", "content": "Yes, so if I am using ResNet152 as the pretrained network, then I need to change the parameters below from 2 to 5, right?\n        self.post_net = nn.Linear(n_qubits, 2)\n\nwhich would be\n        self.post_net = nn.Linear(n_qubits, 5)\n\nI have tested your suggestion, and it worked well with an accuracy of 87%. However, when I convert it into a .pkl file and use that file in Django to work with APIs, it throws a signature error.", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/4"}, "4": {"author": "ThunderBolt-OS", "date": "1687357632448", "content": "Thank you so much @isaacdevlugt for such an amazing explanation, I have clearly understood the concept.", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/5"}, "5": {"author": "isaacdevlugt", "date": "1687359758730", "content": "I\u2019m not sure exactly what you need to change, as I\u2019m not super familiar with ResNet152 and the dataset you want to apply it to. The output dimension just needs to match the cardinality of the classification set (i.e., the total number of classification types \u2014 4 in the animal example I gave above).\nFor saving/loading your torch models, you can check out this PR that adds better instructions for doing as much in PennyLane: Add documentation and tests for `TorchLayer` saving by eddddddy \u00b7 Pull Request #4149 \u00b7 PennyLaneAI/pennylane \u00b7 GitHub (specifically see pennylane/qnn/torch.py). This will be part of v0.31, which comes out soon!", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/6"}, "6": {"author": "ThunderBolt-OS", "date": "1687281794815", "content": "Hello everyone, I would like to know what changes shall I make in this model to make this model eligible for multiclass image classification (for eg 5 image classes).", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/7"}, "7": {"author": "isaacdevlugt", "date": "1687356006520", "content": "Hey @ThunderBolt-OS! Welcome to the forum \nUsually with machine learning models that have multinomial classification (i.e., the model is asked to be able to classify more than just two different types of objects), the final layer in the network is a softmax layer. A softmax layer is also commonly used for binary classification, but it\u2019s more general than that.\nWith this layer at the end of the network, it allows for you to be able to interpret your network\u2019s output as a probability distribution over the possible types of objects it could classify an input as.\nIt would look like this, for example:\n[0.1, 0.3, 0.4, 0.2]\n\nwhere entry ii in the array corresponds to the probability of your network classifying the input as the i^{\\text{th}}ith type (e.g., entry 1 through 4 would correspond to the probability of a cat  , dog  , panda  , and racoon , respectively).\nHope that helps!1 Reply", "link": "https://discuss.pennylane.ai//t/how-to-make-multiclass-image-classification-using-this-hybrid-model/3080/8"}}