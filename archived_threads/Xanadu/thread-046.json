{"0": {"author": "Viro", "date": "1650980880520", "content": "Hi,\nI am trying to test an algorithm of mine using random set of parameters. Now, I wish to implement this procedure with various noise models, and hence looked into using the Qiskit-pennylane extension to do so. The procedure is embarrasingly parallell where I essentially perform the entire procedure multiple times using various initial parameter values. I have done multiple such simulations already in parallell using the built in pennylane devices such as default.qubit and default.torch. However when switching to the qiskit plugin, I get errors. I am wondering if there are any workarounds to the problem since running these simulations sequentially is significantly slower than doing so in parallell.\nI have attached a very small example that reproduces the issue.\nimport pennylane as qml\nfrom pennylane.qnode import qnode\nfrom pennylane import numpy as np\n\nfrom joblib import Parallel, delayed\n\nparameters = np.array([[1.2,2.4],[1.2,4.5]])\n\ndef circuit(parameters,i):\n    param = parameters[i]\n    qml.RX(param[0],wires = 1)\n    qml.RY(param[1],wires = 0)\n    return qml.sample(op = None,wires = [0,1])\n\nparameters = np.array([[1.4,3.6],[5.6,1.6]])\ndev = qml.device('qiskit.aer', wires=2, shots = 10000)\n\nsamplecircuit = qml.QNode(circuit,dev)\n\nresults = Parallel(n_jobs=2)(delayed(samplecircuit)(parameters,i) for i in range(2))\n\nChanging the device to default.qubit runs the circuit as expected without any issues. The error message that I recieve is the following:\njoblib.externals.loky.process_executor._RemoteTraceback:\n\u201c\u201d\"\nTraceback (most recent call last):\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py\u201d, line 407, in _process_worker\ncall_item = call_queue.get(block=True, timeout=timeout)\nFile \u201c/opt/anaconda3/lib/python3.9/multiprocessing/queues.py\u201d, line 122, in get\nreturn _ForkingPickler.loads(res)\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/qiskit/init.py\u201d, line 89, in getattr\nif not self.aer:\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/qiskit/init.py\u201d, line 89, in getattr\nif not self.aer:\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/qiskit/init.py\u201d, line 89, in getattr\nif not self.aer:\n[Previous line repeated 988 more times]\nRecursionError: maximum recursion depth exceeded\n\u201c\u201d\"\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\nFile \u201c/Users/viroshaanuthayamoorthy/Documents/MastersSimulations/Variational-Circuits-and-Neural-Networks/AdressingSlowTraining.py\u201d, line 23, in \nresults = Parallel(n_jobs=2)(delayed(samplecircuit)(parameters,i) for i in range(2))\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u201d, line 1056, in call\nself.retrieve()\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u201d, line 935, in retrieve\nself._output.extend(job.get(timeout=self.timeout))\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/_parallel_backends.py\u201d, line 542, in wrap_future_result\nreturn future.result(timeout=timeout)\nFile \u201c/opt/anaconda3/lib/python3.9/concurrent/futures/_base.py\u201d, line 446, in result\nreturn self.__get_result()\nFile \u201c/opt/anaconda3/lib/python3.9/concurrent/futures/_base.py\u201d, line 391, in __get_result\nraise self._exception\njoblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.\nAlternatively, are there noise models that simulate errors on quantum hardware that I can use instead of the Qiskit plugin that has similar backend to what the default simulators have? I cannot see any immediate workaround of this issue as I reckon that there can only be a single instance of the \u201cdev\u201d when using qiskit as the backend.", "link": "https://discuss.pennylane.ai//t/parallellization-issues/1862/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1651011950564", "content": "Hi @Viro,\nYou could try using the \u2018default.mixed\u2019 device in our demo on noisy circuits 2 you can learn more about this.\nI also recommend our demo on error mitigation 1 where you can see how to use a fake IBM backend and can use the noise model from that backend.\nI would recommend first running the demos as they are, to make sure that they run well on your machine. Then you can try modifying your code or the demos.\nPlease let us know if this helps solve your problem!", "link": "https://discuss.pennylane.ai//t/parallellization-issues/1862/2"}, "2": {"author": "Viro", "date": "1651044397120", "content": "Yep, I have tried all the demos and they do work. However when I try to parallellize it using joblib I get errors.\nAlternatively, is it possible to create a noisemodel in the default.mixed simulator that is similar to the device-backends from Qiskit?", "link": "https://discuss.pennylane.ai//t/parallellization-issues/1862/3"}, "3": {"author": "CatalinaAlbornoz", "date": "1651090451975", "content": "Hi @Viro,\nI now understand your problem. We have a blog post on how to parallelize qnode execution 12.\nIn this example we use Dask and the PennyLane-Qiskit plugin. However this is based on the fact that all QNodes are simultaneously evaluated with the same parameters. So it\u2019s not exactly what you need.\nAnother option may be to use Jax. The discussion in this forum thread 2 includes some code by mlxd that you may want to try.\nPlease let me know if this helps!", "link": "https://discuss.pennylane.ai//t/parallellization-issues/1862/4"}, "4": {"author": "Viro", "date": "1651134606636", "content": "Hmm, this is not exactly what I am looking for unfortunately. Getting back to the problem of noise instead, say I wanted to use the default.mixed simulator to simulate noise that is realistic. Is it possible to implement noise similar to say ibmq_melbourne using only the kraus operators and calibration data found in ibmq, or is the Qiskit-way of implementing noise fundamentally different from how default.mixed would simulate noise? If no, how could I go about implementing some of the noise-operations that are present in Qiskit Devices using default.mixed?\nThanks in advance", "link": "https://discuss.pennylane.ai//t/parallellization-issues/1862/5"}, "5": {"author": "CatalinaAlbornoz", "date": "1651173879744", "content": "Hi @Viro,\nYou can build your own custom noise channel using the operation QubitChannel  by specifying its Kraus operators.\nHere\u2019s an example of how you can use this:\nimport pennylane as qml\nfrom pennylane import numpy as np\n\ndev = qml.device('default.mixed', wires=1)\n\n@qml.qnode(dev)\ndef bitphaseflip_circuit(p):\n    K0 = np.sqrt(1-p)*np.eye(2)\n    K1 = np.sqrt(p)*np.array([[0,1j],[1j,0]])\n    qml.QubitChannel([K0, K1], wires=0)\n    return qml.expval(qml.PauliZ(0))\n\nIn your case you simply need to replace K0 and K1 for the Kraus operators you get from Qiskit.\nPlease let me know if this helps!", "link": "https://discuss.pennylane.ai//t/parallellization-issues/1862/6"}, "6": {"author": "Viro", "date": "1650980880520", "content": "Hi,\nI am trying to test an algorithm of mine using random set of parameters. Now, I wish to implement this procedure with various noise models, and hence looked into using the Qiskit-pennylane extension to do so. The procedure is embarrasingly parallell where I essentially perform the entire procedure multiple times using various initial parameter values. I have done multiple such simulations already in parallell using the built in pennylane devices such as default.qubit and default.torch. However when switching to the qiskit plugin, I get errors. I am wondering if there are any workarounds to the problem since running these simulations sequentially is significantly slower than doing so in parallell.\nI have attached a very small example that reproduces the issue.\nimport pennylane as qml\nfrom pennylane.qnode import qnode\nfrom pennylane import numpy as np\n\nfrom joblib import Parallel, delayed\n\nparameters = np.array([[1.2,2.4],[1.2,4.5]])\n\ndef circuit(parameters,i):\n    param = parameters[i]\n    qml.RX(param[0],wires = 1)\n    qml.RY(param[1],wires = 0)\n    return qml.sample(op = None,wires = [0,1])\n\nparameters = np.array([[1.4,3.6],[5.6,1.6]])\ndev = qml.device('qiskit.aer', wires=2, shots = 10000)\n\nsamplecircuit = qml.QNode(circuit,dev)\n\nresults = Parallel(n_jobs=2)(delayed(samplecircuit)(parameters,i) for i in range(2))\n\nChanging the device to default.qubit runs the circuit as expected without any issues. The error message that I recieve is the following:\njoblib.externals.loky.process_executor._RemoteTraceback:\n\u201c\u201d\"\nTraceback (most recent call last):\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py\u201d, line 407, in _process_worker\ncall_item = call_queue.get(block=True, timeout=timeout)\nFile \u201c/opt/anaconda3/lib/python3.9/multiprocessing/queues.py\u201d, line 122, in get\nreturn _ForkingPickler.loads(res)\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/qiskit/init.py\u201d, line 89, in getattr\nif not self.aer:\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/qiskit/init.py\u201d, line 89, in getattr\nif not self.aer:\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/qiskit/init.py\u201d, line 89, in getattr\nif not self.aer:\n[Previous line repeated 988 more times]\nRecursionError: maximum recursion depth exceeded\n\u201c\u201d\"\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\nFile \u201c/Users/viroshaanuthayamoorthy/Documents/MastersSimulations/Variational-Circuits-and-Neural-Networks/AdressingSlowTraining.py\u201d, line 23, in \nresults = Parallel(n_jobs=2)(delayed(samplecircuit)(parameters,i) for i in range(2))\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u201d, line 1056, in call\nself.retrieve()\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u201d, line 935, in retrieve\nself._output.extend(job.get(timeout=self.timeout))\nFile \u201c/opt/anaconda3/lib/python3.9/site-packages/joblib/_parallel_backends.py\u201d, line 542, in wrap_future_result\nreturn future.result(timeout=timeout)\nFile \u201c/opt/anaconda3/lib/python3.9/concurrent/futures/_base.py\u201d, line 446, in result\nreturn self.__get_result()\nFile \u201c/opt/anaconda3/lib/python3.9/concurrent/futures/_base.py\u201d, line 391, in __get_result\nraise self._exception\njoblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.\nAlternatively, are there noise models that simulate errors on quantum hardware that I can use instead of the Qiskit plugin that has similar backend to what the default simulators have? I cannot see any immediate workaround of this issue as I reckon that there can only be a single instance of the \u201cdev\u201d when using qiskit as the backend.", "link": "https://discuss.pennylane.ai//t/parallellization-issues/1862/7"}}