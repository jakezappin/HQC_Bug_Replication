{"0": {"author": "Yang", "date": "1676180023760", "content": "Hi, I recently try to employ the device noise model from IBMQ into the variational quantum circuit, but it failed. Here is the toy code.\nimport pennylane as qml\nfrom pennylane.optimize import GradientDescentOptimizer\nfrom pennylane import numpy as np\nimport qiskit\nimport qiskit_aer.noise as noise\n\ndef circuit(param, n_qubit):\n    for j in range(n_qubit):\n        qml.RZ(param[j, 0], wires=j)\n        qml.RY(param[j, 1], wires=j)\n        qml.RZ(param[j, 2], wires=j)\n\n    # CNOT\n    for j in range(0, n_qubit, 2):\n        if j+1 < n_qubit:\n            qml.CNOT(wires=[j, j+1])\n\n    for j in range(1, n_qubit, 2):\n        if j+1 < n_qubit:\n            qml.CNOT(wires=[j, j+1])\n    return qml.expval(qml.PauliZ(n_qubit-1))\n\nif __name__ == '__main__':\n    n_qubit = 4\n    qiskit.IBMQ.load_account()\n    provider = qiskit.IBMQ.providers(group='open')[0]\n    backend = provider.get_backend('ibmq_quito')\n    noise_model = noise.NoiseModel.from_backend(backend)\n    dev = qml.device('qiskit.aer', wires=n_qubit, noise_model=noise_model)\n    qnode = qml.QNode(circuit, dev)\n\n    opt = GradientDescentOptimizer(0.1)\n\n    param = 2*np.pi*np.random.random((n_qubit, 3))\n    param = opt.step(lambda p: qnode(p, n_qubit), param)\n\nThe error information is as follows.\nFile \"/usr/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/xxx/.local/lib/python3.10/site-packages/pennylane_qiskit/qiskit_device.py\", line 467, in batch_execute\n    res = self.statistics(circuit)\n  File \"/home/xxx/.local/lib/python3.10/site-packages/pennylane/_qubit_device.py\", line 738, in statistics\n    if obs.return_type is Expectation:\nAttributeError: 'RZ' object has no attribute 'return_type'\n\nThe version of installed python package is\npython=3.10.6\npennylane=0.26.0\nqiskit=0.39.2\n\nBy the way, I can run the same code several months ago successfully. So I wonder whether there is a new style to implement device noise model in updated pennylane.\nThanks in advance!", "link": "https://discuss.pennylane.ai//t/error-raised-when-introducing-device-noise-from-ibmq-into-the-optimization-of-variationa-quantum-circuit-in-pennylane/2533/1"}, "1": {"author": "christina", "date": "1676298081990", "content": "Hi @Yang ,\nCan you try upgrading your plugin version?\npip install -U pennylane-qiskit\n1", "link": "https://discuss.pennylane.ai//t/error-raised-when-introducing-device-noise-from-ibmq-into-the-optimization-of-variationa-quantum-circuit-in-pennylane/2533/2"}, "2": {"author": "Yang", "date": "1676725162158", "content": "Hi @christina ,\nThank you for the reply. It works by upgrading both the pennylane and pennylane-qiskit.", "link": "https://discuss.pennylane.ai//t/error-raised-when-introducing-device-noise-from-ibmq-into-the-optimization-of-variationa-quantum-circuit-in-pennylane/2533/3"}, "3": {"author": "Yang", "date": "1676180023760", "content": "Hi, I recently try to employ the device noise model from IBMQ into the variational quantum circuit, but it failed. Here is the toy code.\nimport pennylane as qml\nfrom pennylane.optimize import GradientDescentOptimizer\nfrom pennylane import numpy as np\nimport qiskit\nimport qiskit_aer.noise as noise\n\ndef circuit(param, n_qubit):\n    for j in range(n_qubit):\n        qml.RZ(param[j, 0], wires=j)\n        qml.RY(param[j, 1], wires=j)\n        qml.RZ(param[j, 2], wires=j)\n\n    # CNOT\n    for j in range(0, n_qubit, 2):\n        if j+1 < n_qubit:\n            qml.CNOT(wires=[j, j+1])\n\n    for j in range(1, n_qubit, 2):\n        if j+1 < n_qubit:\n            qml.CNOT(wires=[j, j+1])\n    return qml.expval(qml.PauliZ(n_qubit-1))\n\nif __name__ == '__main__':\n    n_qubit = 4\n    qiskit.IBMQ.load_account()\n    provider = qiskit.IBMQ.providers(group='open')[0]\n    backend = provider.get_backend('ibmq_quito')\n    noise_model = noise.NoiseModel.from_backend(backend)\n    dev = qml.device('qiskit.aer', wires=n_qubit, noise_model=noise_model)\n    qnode = qml.QNode(circuit, dev)\n\n    opt = GradientDescentOptimizer(0.1)\n\n    param = 2*np.pi*np.random.random((n_qubit, 3))\n    param = opt.step(lambda p: qnode(p, n_qubit), param)\n\nThe error information is as follows.\nFile \"/usr/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/xxx/.local/lib/python3.10/site-packages/pennylane_qiskit/qiskit_device.py\", line 467, in batch_execute\n    res = self.statistics(circuit)\n  File \"/home/xxx/.local/lib/python3.10/site-packages/pennylane/_qubit_device.py\", line 738, in statistics\n    if obs.return_type is Expectation:\nAttributeError: 'RZ' object has no attribute 'return_type'\n\nThe version of installed python package is\npython=3.10.6\npennylane=0.26.0\nqiskit=0.39.2\n\nBy the way, I can run the same code several months ago successfully. So I wonder whether there is a new style to implement device noise model in updated pennylane.\nThanks in advance!", "link": "https://discuss.pennylane.ai//t/error-raised-when-introducing-device-noise-from-ibmq-into-the-optimization-of-variationa-quantum-circuit-in-pennylane/2533/4"}}