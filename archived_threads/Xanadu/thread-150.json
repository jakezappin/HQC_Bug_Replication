{"0": {"author": "segev", "date": "1663504268209", "content": "I\u2019m interested in making a passive linear interferometer circuitry acting on an initial mode-entangled state, for example: \\frac{1}{\\sqrt{2}}(a_0^{\\dagger}a_2^{\\dagger}+a_1^{\\dagger}a_3^{\\dagger}) in a 4 mode systems [0,4].\nWhat is the best way to create such an initial state? Is there a way to insert it to a circuit without the actual procedure of making it? just define this state as the state of 2 photons in 4 modes and later apply some U on them.\n\n\n Solved by CatalinaAlbornoz in post #8 \n\n\n                Hi @segev, \nI\u2019m not sure why this isn\u2019t working with BaseFockState. But if you change the initial state to the following then it works. \nmodes = 4\nstate = np.zeros([cutoff] * modes, dtype=complex)\nstate[1, 0, 0, 1] = 1\n\nIt\u2019s probably best to keep assigning the state as an array. Let me know if you r\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1663614924060", "content": "Hi @segev!\nWe have the ops.Ket 4 function which allows you to instantiate the Ket for the state. It prepares the state given the Ket vectors in the Fock basis.\nIs this what you were looking for?", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/2"}, "2": {"author": "segev", "date": "1663618354869", "content": "Yes! Thank you @CatalinaAlbornoz!\nDo you have any example of using this in code? I can\u2019t figure out what form of state it expects to get (what are the dimensions of the array and it\u2019s format)", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/3"}, "3": {"author": "CatalinaAlbornoz", "date": "1663709507977", "content": "Hi @segev, you can input an array (with the first dimension same as the cutoff dimension) or a BaseFockState, where you can specify more information.\nFor example you can choose one of the following examples (note that the input state is not the same):\nimport strawberryfields as sf\nimport numpy as np\n\ncutoff = 4\neng = sf.Engine(\"fock\", backend_options={\"cutoff_dim\": cutoff})\nprog = sf.Program(4)\n\nwith prog.context as q:\n    sf.ops.Ket(np.array([1,0,0,1])) | q[0]\n                \nresult = eng.run(prog)\nstate = result.state\nprobs = state.all_fock_probs()\nprint(probs)\n\nOr you can do\ncutoff = 4\neng = sf.Engine(\"fock\", backend_options={\"cutoff_dim\": cutoff})\nstate = sf.backends.BaseFockState(np.array([1,0,0,0]), 4, True, cutoff)\nprog = sf.Program(4)\n\nwith prog.context as q:\n    sf.ops.Ket(state) | q[0]\n                \nresult = eng.run(prog)\nstate = result.state\nprobs = state.all_fock_probs()\nprint(probs)\n\nIf you input an array into sf.ops.Ket, it should be a state vector in the Fock basis. This can be provided as either:\n\na single ket vector, for single mode state preparation\na multimode ket, with one array dimension per mode\n\nIf you choose a BaseFockState state object as the parameter type, then it already has all of the necessary information.\nDoes this solve your question?1", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/4"}, "4": {"author": "segev", "date": "1663764055608", "content": "Thanks @CatalinaAlbornoz it really helped. However, I\u2019m still struggling with the multimode ket. I\u2019ve tried this format of state:\nimport strawberryfields as sf\nimport numpy as np\ncutoff = 2\neng = sf.Engine(\u201cfock\u201d, backend_options={\u201ccutoff_dim\u201d: cutoff})\nprog = sf.Program(4)\nstate = sf.backends.BaseFockState(np.array([[0,1],[1,0],[1,0],[0,1]]), 4, True, cutoff)\nwith prog.context as q:\nsf.ops.Ket(state)  | (q[0],q[1],q[2],q[3])\nresult = eng.run(prog)\nstate = result.state\nprobs = state.all_fock_probs()\nprint(probs)\nBut it errored with:\nValueError: cannot reshape array of size 8 into shape (4,4)\nIsnt this the multimode ket needed for describing the fock state: |1001>?", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/5"}, "5": {"author": "CatalinaAlbornoz", "date": "1663887750161", "content": "Hi @segev!\nIn this case, since you have a pure state, then the state representation in the Fock basis for the state |1001\u232ais just np.array([1,0,0,1]).\nSo you would just write\nstate = sf.backends.BaseFockState(np.array([1,0,0,1]), 4, True, cutoff)\nNice and simple! 1", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/6"}, "6": {"author": "segev", "date": "1664309492801", "content": "Hi @CatalinaAlbornoz, I\u2019ve tried your example and it does seems to work except for the part when I\u2019m trying to print the probabilities of the outcomes:\nimport strawberryfields as sf\nimport numpy as np\ncutoff = 2\neng = sf.Engine(\u201cfock\u201d, backend_options={\u201ccutoff_dim\u201d: cutoff})\nprog = sf.Program(4)\nstate = sf.backends.BaseFockState(np.array([1,0,0,1]), 4, True, cutoff)\nprint(state)\nprint(state.data)\nwith prog.context as q:\nsf.ops.Ket(state)  | (q[0],q[1], q[2], q[3])\nresult = eng.run(prog)\nstate = result.state\nprobs = state.all_fock_probs()\nprint(probs)\nAnd get the error:\nValueError: cannot reshape array of size 4 into shape (4,4)\nWhich seems very weird since Im not doing any action on any mode except making them in the state", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/7"}, "7": {"author": "CatalinaAlbornoz", "date": "1664391295198", "content": "Hi @segev,\nI\u2019m not sure why this isn\u2019t working with BaseFockState. But if you change the initial state to the following then it works.\nmodes = 4\nstate = np.zeros([cutoff] * modes, dtype=complex)\nstate[1, 0, 0, 1] = 1\n\nIt\u2019s probably best to keep assigning the state as an array. Let me know if you run into other problems.Solution1", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/8"}, "8": {"author": "segev", "date": "1663764055608", "content": "Thanks @CatalinaAlbornoz it really helped. However, I\u2019m still struggling with the multimode ket. I\u2019ve tried this format of state:\nimport strawberryfields as sf\nimport numpy as np\ncutoff = 2\neng = sf.Engine(\u201cfock\u201d, backend_options={\u201ccutoff_dim\u201d: cutoff})\nprog = sf.Program(4)\nstate = sf.backends.BaseFockState(np.array([[0,1],[1,0],[1,0],[0,1]]), 4, True, cutoff)\nwith prog.context as q:\nsf.ops.Ket(state)  | (q[0],q[1],q[2],q[3])\nresult = eng.run(prog)\nstate = result.state\nprobs = state.all_fock_probs()\nprint(probs)\nBut it errored with:\nValueError: cannot reshape array of size 8 into shape (4,4)\nIsnt this the multimode ket needed for describing the fock state: |1001>|1001>?", "link": "https://discuss.pennylane.ai//t/create-a-mode-entangled-state/2164/9"}}