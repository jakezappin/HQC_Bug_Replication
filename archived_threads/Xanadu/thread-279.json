{"0": {"author": "Shertin", "date": "1634466046799", "content": "https://strawberryfields.ai/photonics/demos/run_state_learner.html 7\nIn the example above, the depth of corcuits is given:\n# Number of layers\ndepth = 15\n\nI am confused that according to the definition of \u2018depth\u2019, after the circuits structure is defined, the depth will be defined too. So why should I define the depth?\ndef layer(i, q):\n    Rgate(sf_params[i][0]) | q\n    Sgate(sf_params[i][1], sf_params[i][2]) | q\n    Rgate(sf_params[i][3]) | q\n    Dgate(sf_params[i][4], sf_params[i][5]) | q\n    Kgate(sf_params[i][6]) | q\n    return q\n\nAnd in this example I think the depth will be 5 (there are five gates), do I misunderstand the definition of \u2018depth\u2019? I think the gates in red box represents a \u2018layer\u2019.\n\nimage943\u00d7359 43.7 KB\n", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1634575370235", "content": "Hi @Shertin, you\u2019ve actually come across something very interesting. In quantum computing a layer is effectively what you suggest. However in machine learning a layer is different. If you notice in the image you posted,  it says that all of these \u201c5 layers\u201d are actually \u201cLayer L\u201d.\nIt shows that it\u2019s actually the machine learning terminology for depth and layer that is being used.\nIn fact, if you look at the \u201cConstructing the circuit\u201d section you will notice that here we define how a layer looks, and you will then see how we apply each layer to the circuit until we get to the desired depth.\nThis is why we need to define the depth first, because it\u2019s the number of layers we want to apply to our circuit.\nPlease let me know if this helped answer your question!", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/2"}, "2": {"author": "Shertin", "date": "1634734232219", "content": "Hi @CatalinaAlbornoz, thanks a lot for your reply! Now I\u2019m clear more.\nSo in each layer, there are same quantum gates structure with different parameters? Will the neural network work more efficiently with more layers, or it has a medium best value that we have to search? Thanks!", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/3"}, "3": {"author": "CatalinaAlbornoz", "date": "1634743905559", "content": "Exactly @shertin, each layer has the same structure but with different parameters. This doesn\u2019t necessarily have to be the case. You can build neural networks where the structure changes from one layer to the next.\nIn general, the more layers and parameters that you have the better your chances are of finding a good solution. However, having too many layers is costly in computational terms and it can lead to problems such as overparametrization and overfitting.\nThe ideal is to find the least number of layers that still gives you a reasonable solution for your problem.\nPlease let me know if this helps!", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/4"}, "4": {"author": "Shertin", "date": "1635232748650", "content": "Thanks @CatalinaAlbornoz, that helps!\nI still have a question that what is the relationship between output state and the layers? Will each layer output a state and the final output state of the circuit be the one with highest fidelity? As in a experimental circuit, we only need to build one layer (is it right?).", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/5"}, "5": {"author": "CatalinaAlbornoz", "date": "1635256888731", "content": "Hi @Shertin! Good question.\nThe layers are all applied to the same circuit. This means that our circuit will be: initial state + Layer 1 + Layer 2 + \u2026 + Layer N + Measurement\nThe layers can all be the same as in the example above, but they could all be different too.\nThe need to have many layers is to have a lot of parameters. If I have more parameters in a structure that is convenient for my problem, then my circuit can represent more complex functions. This means that my quantum machine learning algorithm can teach my circuit the intrinsic complexities of the problem at hand, and it will be better suited to produce a good output.\nThe output is not being calculated after every layer, only at the end. It\u2019s the ensemble of the circuit that is better. So if you decided to keep all layers with their current parameters and remove the last one, the result probably wouldn\u2019t be the best. You would have to retrain your model.\nPlease let me know if this answers your question!", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/6"}, "6": {"author": "Shertin", "date": "1635305771521", "content": "Thanks a lot @CatalinaAlbornoz, but I am still confused that when I experimentally build a circuit, do I have to build all these layers (with layer times gates)?\nAnother question is if I want to get the process state (like state after D gate), can I feed the optimized parameters (get them after the optimization of the entire circuit) of -R-S-R-D- to a new program and run it? Or does there exist any simple method?\n1 Reply", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/7"}, "7": {"author": "CatalinaAlbornoz", "date": "1635344488974", "content": "Hi @Shertin!\nYes, when you run the circuit on actual hardware you will need to apply each layer one after the other, knowing that each layer contains a certain number of gates. In programmable quantum computing we talk about applying gates instead of building gates so I would recommend you watch this amazing video 6 of how a Xanadu photonic quantum computer works.\nAbout the second question I\u2019m not sure.", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/8"}, "8": {"author": "nathan", "date": "1635354013006", "content": "Hi @Shertin,\nYour guess is correct. You can construct another Strawberry Fields program which omits the gates you don\u2019t want to apply (e.g., the K gate), and any final measurements. Then you can pass in the value of the parameters that you found from an earlier optimization on the complete circuit. You would then run the program and inpect the state vector (ket) or density matrix (dm)\nstate = eng.run(truncated_prog).state\n\n# Extract the statevector\nket = state.ket()\n\n# Extract the density matrix\ndm = state.dm()", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/9"}, "9": {"author": "Shertin", "date": "1634466046799", "content": "https://strawberryfields.ai/photonics/demos/run_state_learner.html 7\nIn the example above, the depth of corcuits is given:\n# Number of layers\ndepth = 15\n\nI am confused that according to the definition of \u2018depth\u2019, after the circuits structure is defined, the depth will be defined too. So why should I define the depth?\ndef layer(i, q):\n    Rgate(sf_params[i][0]) | q\n    Sgate(sf_params[i][1], sf_params[i][2]) | q\n    Rgate(sf_params[i][3]) | q\n    Dgate(sf_params[i][4], sf_params[i][5]) | q\n    Kgate(sf_params[i][6]) | q\n    return q\n\nAnd in this example I think the depth will be 5 (there are five gates), do I misunderstand the definition of \u2018depth\u2019? I think the gates in red box represents a \u2018layer\u2019.\n\nimage943\u00d7359 43.7 KB\n", "link": "https://discuss.pennylane.ai//t/about-the-depth-of-circuits/1422/10"}}