{"0": {"author": "Manu_Chaudhary", "date": "1693106917222", "content": "Hi everyone, I am trying to understand the documentation of qml.kernels.\nI am currently trying to understand what exactly closest_psd_matrix function do what is its exact use? For example, I tried creating a small example reading your documentation:\nimport numpy as np\n\nK = np.array([[7, 3],[3, -1]])\neigen_values = np.linalg.eigvalsh(K)\nimport pennylane as qml\nK_psd = qml.kernels.closest_psd_matrix(K)   # not sure what exactly this line doing?\n\nResult: \ntensor([[7.2, 2.4],\n        [2.4, 0.8]], requires_grad=True)\n\nK_psd = qml.kernels.closest_psd_matrix(K, fix_diagonal=True)\nK_psd\n\nAlso, when I tried running above lines from the documentation, I am getting the error as below:\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nFile ~/anaconda3/envs/pennylane_study/lib/python3.11/site-packages/pennylane/kernels/postprocessing.py:221, in closest_psd_matrix(K, fix_diagonal, solver, **kwargs)\n    220 try:\n--> 221     import cvxpy as cp  # pylint: disable=import-outside-toplevel\n    223     if solver is None:\n\nModuleNotFoundError: No module named 'cvxpy'\n\nThe above exception was the direct cause of the following exception:\n\nImportError                               Traceback (most recent call last)\nCell In[14], line 2\n      1 # However, for quantum kernel matrices, we may want to restore the value 1 on the diagonal\n----> 2 K_psd = qml.kernels.closest_psd_matrix(K, fix_diagonal=True)\n      3 K_psd\n\nFile ~/anaconda3/envs/pennylane_study/lib/python3.11/site-packages/pennylane/kernels/postprocessing.py:226, in closest_psd_matrix(K, fix_diagonal, solver, **kwargs)\n    224         solver = cp.CVXOPT\n    225 except ImportError as e:\n--> 226     raise ImportError(\"CVXPY is required for this post-processing method.\") from e\n    228 X = cp.Variable(K.shape, PSD=True)\n    229 constraint = [cp.diag(X) == 1.0] if fix_diagonal else []\n\nImportError: CVXPY is required for this post-processing method.\n\nThank you.", "link": "https://discuss.pennylane.ai//t/qml-kernels-closest-psd-matrix/3360/1"}, "1": {"author": "Ivana_at_Xanadu", "date": "1693210605442", "content": "Hey @Manu_Chaudhary , there are a couple of different things going on here. \nFirst, if you\u2019re using fix_diagonal=True, you should have cvxpy installed (pip install cvxpy) \u2014 you can see the comments on that in the docs page of qml.kernels.closest_psd_matrix.\nAnd second, finding the closest semi-definite matrix to the kernel matrix is part of the method described in this paper: [2105.02276] Training Quantum Embedding Kernels on Near-Term Quantum Computers\nDepending on how deep you want to dive into this topic, you could instead look at the very short description here, and see if that helps: qml.kernels \u2014 PennyLane 0.31.1 documentation\nI hope that\u2019s already useful to you! ", "link": "https://discuss.pennylane.ai//t/qml-kernels-closest-psd-matrix/3360/2"}, "2": {"author": "Manu_Chaudhary", "date": "1693254406427", "content": "Thank you @Ivana_at_Xanadu for the great help. I will study all the links provided by you thoroughly.", "link": "https://discuss.pennylane.ai//t/qml-kernels-closest-psd-matrix/3360/3"}, "3": {"author": "Manu_Chaudhary", "date": "1693106917222", "content": "Hi everyone, I am trying to understand the documentation of qml.kernels.\nI am currently trying to understand what exactly closest_psd_matrix function do what is its exact use? For example, I tried creating a small example reading your documentation:\nimport numpy as np\n\nK = np.array([[7, 3],[3, -1]])\neigen_values = np.linalg.eigvalsh(K)\nimport pennylane as qml\nK_psd = qml.kernels.closest_psd_matrix(K)   # not sure what exactly this line doing?\n\nResult: \ntensor([[7.2, 2.4],\n        [2.4, 0.8]], requires_grad=True)\n\nK_psd = qml.kernels.closest_psd_matrix(K, fix_diagonal=True)\nK_psd\n\nAlso, when I tried running above lines from the documentation, I am getting the error as below:\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nFile ~/anaconda3/envs/pennylane_study/lib/python3.11/site-packages/pennylane/kernels/postprocessing.py:221, in closest_psd_matrix(K, fix_diagonal, solver, **kwargs)\n    220 try:\n--> 221     import cvxpy as cp  # pylint: disable=import-outside-toplevel\n    223     if solver is None:\n\nModuleNotFoundError: No module named 'cvxpy'\n\nThe above exception was the direct cause of the following exception:\n\nImportError                               Traceback (most recent call last)\nCell In[14], line 2\n      1 # However, for quantum kernel matrices, we may want to restore the value 1 on the diagonal\n----> 2 K_psd = qml.kernels.closest_psd_matrix(K, fix_diagonal=True)\n      3 K_psd\n\nFile ~/anaconda3/envs/pennylane_study/lib/python3.11/site-packages/pennylane/kernels/postprocessing.py:226, in closest_psd_matrix(K, fix_diagonal, solver, **kwargs)\n    224         solver = cp.CVXOPT\n    225 except ImportError as e:\n--> 226     raise ImportError(\"CVXPY is required for this post-processing method.\") from e\n    228 X = cp.Variable(K.shape, PSD=True)\n    229 constraint = [cp.diag(X) == 1.0] if fix_diagonal else []\n\nImportError: CVXPY is required for this post-processing method.\n\nThank you.", "link": "https://discuss.pennylane.ai//t/qml-kernels-closest-psd-matrix/3360/4"}}