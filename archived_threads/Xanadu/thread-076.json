{"0": {"author": "vijpandaturtle", "date": "1578846870625", "content": "Hi,\nI am currently researching on the topic of image processing in quantum computers. I recently did a project using pennylane (variational classifier) to classify biomedical images. However, I worked only with 2 and 4 qubit circuits and am wanting to try with a larger number of qubits. I am having some trouble understanding how I can go about designing a circuit of this size. Can I please get some help ?\nThank you in advance\n\n\n Solved by josh in post #5 \n\n\n                Hi @vijpandaturtle! To help create your variational circuit ansatz for a larger number of qubits, you could take a look at the templates provided by PennyLane: Templates \u2014 PennyLane 0.27.0 documentation \nOne that is quite useful is the StronglyEntanglingLayers. This template creates layers like the \u2026\n              \n", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/1"}, "1": {"author": "kareem_essafty", "date": "1578864155940", "content": "hey,\nmachine learning either classical or quantum depends significantly on your data preparation and how you configure your cost function. because of the gpus and their incredible speed less attention is given to these two points and this is actually what happens here in the quantum realm. by far, the amplitude encoding scheme can encode a single 28*28 image with only 10 qubits and there would be more room for other features and you can you the circuit centric classifier by prof schuld for your problem.\nanother way is to use the universal qubit classifier but it would be the deepest network ever. Or, you can try out this paper 10.\nif you are more precise i think i can help you more \ngood luck", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/2"}, "2": {"author": "vijpandaturtle", "date": "1578920382690", "content": "I figured it out. Thank you for your reply ", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/3"}, "3": {"author": "josh", "date": "1578925681466", "content": "Hi @vijpandaturtle! To help create your variational circuit ansatz for a larger number of qubits, you could take a look at the templates provided by PennyLane: Templates \u2014 PennyLane 0.27.0 documentation 16\nOne that is quite useful is the StronglyEntanglingLayers 3. This template creates layers like the following:\n\nimage2683\u00d71054 216 KB\n\nFor example, for a 10 qubit circuit, with 3 strongly entangling layers:\nimport pennylane as qml\nfrom pennylane.templates.layers import StronglyEntanglingLayers\n\ndev = qml.device('default.qubit', wires=10)\n\n@qml.qnode(dev)\ndef circuit(weights):\n    StronglyEntanglingLayers(weights, wires=list(range(10)))\n    return qml.expval(qml.PauliZ(0))\n\ninit_weights = strong_ent_layers_normal(n_layers=3, n_wires=10)\ncircuit(init_weights)\nSolution", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/4"}, "4": {"author": "vijpandaturtle", "date": "1578986937430", "content": "Thank you so much @josh !", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/5"}, "5": {"author": "vijpandaturtle", "date": "1580010775166", "content": "@josh trying to build this circuit\n@qml.qnode(dev)\ndef circuit(inputs, weights):\n    AngleEmbedding(inputs, list(range(9)))\n    RandomLayers(weights=weights, wires=list(range(9)))\n    return qml.expval(qml.PauliZ(0))\n\ninit_pars = random_layers_uniform(n_layers=3, n_wires=num_qubits, seed=2)\n\nhowever when i run this command to test\nprint(circuit([1,2,3,4,5,6,7,8,9], init_pars))\ni get the following error\n\u201cTypeError: RX: Real scalar parameter expected, got <class \u2018numpy.ndarray\u2019>.\u201d\nwhat am i doing wrong ?", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/6"}, "6": {"author": "josh", "date": "1580094010558", "content": "Hi @vijpandaturtle, the example you posted works for me. I use the following QNode:\nimport pennylane as qml\n\nnum_qubits = 9\ndev = qml.device(\"default.qubit\", wires=num_qubits )\n\n@qml.qnode(dev)\ndef circuit(inputs, weights):\n    qml.templates.AngleEmbedding(inputs, list(range(9)))\n    qml.templatesRandomLayers(weights=weights, wires=list(range(9)))\n    return qml.expval(qml.PauliZ(0))\n\ninit_pars = random_layers_uniform(n_layers=3, n_wires=num_qubits, seed=2)\n\nRunning this circuit,\n>>> print(circuit([1,2,3,4,5,6,7,8,9], init_pars))\n0.54030230586814\n\nCan you post the output of qml.about()?", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/7"}, "7": {"author": "vijpandaturtle", "date": "1580096721232", "content": "@josh I ran qml.about() and realized that i have pennylane 0.5.0 installed. simply running an upgrade fixed my issue. thanks for pointing me in the right direction !1", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/8"}, "8": {"author": "vijpandaturtle", "date": "1578846870625", "content": "Hi,\nI am currently researching on the topic of image processing in quantum computers. I recently did a project using pennylane (variational classifier) to classify biomedical images. However, I worked only with 2 and 4 qubit circuits and am wanting to try with a larger number of qubits. I am having some trouble understanding how I can go about designing a circuit of this size. Can I please get some help ?\nThank you in advance\n\n\n Solved by josh in post #5 \n\n\n                Hi @vijpandaturtle! To help create your variational circuit ansatz for a larger number of qubits, you could take a look at the templates provided by PennyLane: Templates \u2014 PennyLane 0.27.0 documentation \nOne that is quite useful is the StronglyEntanglingLayers. This template creates layers like the \u2026\n              \n", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/9"}, "9": {"author": "josh", "date": "1578925681466", "content": "Hi @vijpandaturtle! To help create your variational circuit ansatz for a larger number of qubits, you could take a look at the templates provided by PennyLane: Templates \u2014 PennyLane 0.27.0 documentation 16\nOne that is quite useful is the StronglyEntanglingLayers 3. This template creates layers like the following:\n\nimage2683\u00d71054 216 KB\n\nFor example, for a 10 qubit circuit, with 3 strongly entangling layers:\nimport pennylane as qml\nfrom pennylane.templates.layers import StronglyEntanglingLayers\n\ndev = qml.device('default.qubit', wires=10)\n\n@qml.qnode(dev)\ndef circuit(weights):\n    StronglyEntanglingLayers(weights, wires=list(range(10)))\n    return qml.expval(qml.PauliZ(0))\n\ninit_weights = strong_ent_layers_normal(n_layers=3, n_wires=10)\ncircuit(init_weights)\nSolution", "link": "https://discuss.pennylane.ai//t/building-larger-quantum-circuits/310/10"}}