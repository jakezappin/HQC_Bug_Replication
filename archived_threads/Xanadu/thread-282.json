{"0": {"author": "Abrar2652", "date": "1652522927002", "content": "I am currently using the codes of the following GitHub repo to benchmark a different imbalanced binary classification dataset:\nhttps://github.com/Gruntrexpewrus/quantum-neural-networks/blob/master/fraud_detection/fraud_detection.py 10\nShould I modify any value in this portion, given that the dataset has 14 independent features and 1 target feature? (Point to note that the following codes were based upon the dataset having a PCA of 29 features, that\u2019s why probably the authors considered 10 PCAs. However, my dataset doesn\u2019t contain any PCA features.)\n# Input neurons\ninput_neurons = 10\n# Widths of hidden layers\nnn_architecture = [10, 10]\n# Output neurons of classical part\noutput_neurons = 14\n\nIf I take input_neurons = 14, what should be the values of nn_architecture and output_neurons?", "link": "https://discuss.pennylane.ai//t/quantum-neural-network-input-and-output-layers/1908/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1652745782836", "content": "Hi @Abrar2652, welcome to the forum!\nIn principle you wouldn\u2019t need to change this section. The values of these three variables can be independent. You could have 14 input neurons and then have smaller hidden layers.\nFrom a practical perspective what you can do is take the original code, make sure it runs, and then modify nn_architecture to make it smaller than the number of input neurons. If this change causes errors down the line then you will probably need to change other things in the code to make it work.\nLet me know if this works for you!1", "link": "https://discuss.pennylane.ai//t/quantum-neural-network-input-and-output-layers/1908/2"}, "2": {"author": "Abrar2652", "date": "1652900899890", "content": "@CatalinaAlbornoz Thank you for your response. I was able to compile the code using the parameters you mentioned. I used [10, 10] hidden layers. However, it takes a lot of time to run a single script for training and testing (like half a day). Is there any possible GPU implementation of this analogous QNN that I might be able to integrate with this code?", "link": "https://discuss.pennylane.ai//t/quantum-neural-network-input-and-output-layers/1908/3"}, "3": {"author": "CatalinaAlbornoz", "date": "1652914458537", "content": "Hi @Abrar2652,\nYou could pip install tensorflow-gpu and use it instead of the normal tensorflow.\nFor increased speed you could also reduce the cutoff or the size of the problem, although this would lower the quality of your results.\nLet me know if any of these options work for you!1", "link": "https://discuss.pennylane.ai//t/quantum-neural-network-input-and-output-layers/1908/4"}, "4": {"author": "sophchoe", "date": "1656701296997", "content": "Alternatively, you can use PennyLane Tensorflow plug-in.\n\n\n\nGitHub\n\n\n\nGitHub - sophchoe/Binary_Classification_Pennylane_Keras: Classical-Quantum... 5\nClassical-Quantum hybrid model for credit card fraud detection - GitHub - sophchoe/Binary_Classification_Pennylane_Keras: Classical-Quantum hybrid model for credit card fraud detection\n\n\n\n\n\n1", "link": "https://discuss.pennylane.ai//t/quantum-neural-network-input-and-output-layers/1908/5"}, "5": {"author": "Abrar2652", "date": "1652522927002", "content": "I am currently using the codes of the following GitHub repo to benchmark a different imbalanced binary classification dataset:\nhttps://github.com/Gruntrexpewrus/quantum-neural-networks/blob/master/fraud_detection/fraud_detection.py 10\nShould I modify any value in this portion, given that the dataset has 14 independent features and 1 target feature? (Point to note that the following codes were based upon the dataset having a PCA of 29 features, that\u2019s why probably the authors considered 10 PCAs. However, my dataset doesn\u2019t contain any PCA features.)\n# Input neurons\ninput_neurons = 10\n# Widths of hidden layers\nnn_architecture = [10, 10]\n# Output neurons of classical part\noutput_neurons = 14\n\nIf I take input_neurons = 14, what should be the values of nn_architecture and output_neurons?", "link": "https://discuss.pennylane.ai//t/quantum-neural-network-input-and-output-layers/1908/6"}, "6": {"author": "sophchoe", "date": "1656701296997", "content": "Alternatively, you can use PennyLane Tensorflow plug-in.\n\n\n\nGitHub\n\n\n\nGitHub - sophchoe/Binary_Classification_Pennylane_Keras: Classical-Quantum... 5\nClassical-Quantum hybrid model for credit card fraud detection - GitHub - sophchoe/Binary_Classification_Pennylane_Keras: Classical-Quantum hybrid model for credit card fraud detection\n\n\n\n\n\n1", "link": "https://discuss.pennylane.ai//t/quantum-neural-network-input-and-output-layers/1908/7"}}