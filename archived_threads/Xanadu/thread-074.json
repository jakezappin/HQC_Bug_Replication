{"0": {"author": "AntonioPolicicchio", "date": "1599726250978", "content": "Hello,\nI am very new to Pennylane and I am following the demo tutorials. Everything works fine at the moment, but I have problems with the PyTorch noisy demo.  I create the device, but whet I try to run the circuit I get the following error.\nAny suggestion to understand and solve the problem?\nMany thanks!\nRegards\nAntonio\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-23-ed065177fbb7> in <module>\n      1 print(phi)\n      2 print(theta)\n----> 3 print(circuit(phi, theta))\n      4 print(cost(phi, theta, 400))\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\interfaces\\torch.py in custom_apply(*args, **kwargs)\n    295         # [keyword_values[k] for k in sorted(keyword_positions, key=keyword_positions.get)]\n    296 \n--> 297         return _TorchQNode.apply(keyword_values, *args)\n    298 \n    299     return custom_apply\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\interfaces\\torch.py in forward(ctx, input_kwargs, *input_)\n    187 \n    188             # evaluate the QNode\n--> 189             res = qnode(*ctx.args, **ctx.kwargs)\n    190 \n    191             if not isinstance(res, np.ndarray):\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\qnodes\\base.py in __call__(self, *args, **kwargs)\n    799         \"\"\"Wrapper for :meth:`BaseQNode.evaluate`.\n    800         \"\"\"\n--> 801         return self.evaluate(args, kwargs)\n    802 \n    803     def evaluate(self, args, kwargs):\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\qnodes\\base.py in evaluate(self, args, kwargs)\n    826         if isinstance(self.device, qml.QubitDevice):\n    827             # TODO: remove this if statement once all devices are ported to the QubitDevice API\n--> 828             ret = self.device.execute(self.circuit, return_native_type=temp)\n    829         else:\n    830             ret = self.device.execute(\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\_qubit_device.py in execute(self, circuit, **kwargs)\n    180 \n    181         # apply all circuit operations\n--> 182         self.apply(circuit.operations, rotations=circuit.diagonalizing_gates, **kwargs)\n    183 \n    184         # generate computational basis samples\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\qvm.py in apply(self, operations, **kwargs)\n    148         # pylint: disable=attribute-defined-outside-init\n    149         if self.parametric_compilation and \"pyqvm\" not in self.qc.name:\n--> 150             self.apply_parametric_program(operations, **kwargs)\n    151         else:\n    152             super().apply(operations, **kwargs)\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\qvm.py in apply_parametric_program(self, operations, **kwargs)\n    179         for i, operation in enumerate(operations):\n    180             # map the operation wires to the physical device qubits\n--> 181             wires = self.remap_wires(operation.wires)\n    182 \n    183             if i > 0 and operation.name in (\"QubitStateVector\", \"BasisState\"):\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\device.py in remap_wires(self, wires)\n    231         \"\"\"\n    232         if hasattr(self, \"wiring\"):\n--> 233             return [int(self.wiring[i]) for i in wires]\n    234 \n    235         return [int(w) for w in wires]\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\device.py in <listcomp>(.0)\n    231         \"\"\"\n    232         if hasattr(self, \"wiring\"):\n--> 233             return [int(self.wiring[i]) for i in wires]\n    234 \n    235         return [int(w) for w in wires]\n\nKeyError: <Wires = [0]>\n", "link": "https://discuss.pennylane.ai//t/problems-with-forest-plugin/558/1"}, "1": {"author": "josh", "date": "1599735633764", "content": "Hi @AntonioPolicicchio!\nThe current release of the Forest plugin no longer works with PennyLane, due to some major changes in PennyLane over the last couple of months. You have two options:\n\nInstall the latest GitHub version of the Forest plugin; this should continue to work with PennyLane:\n\npip install git+https://github.com/rigetti/pennylane-forest.git\n\n\nUse a different device for the tutorial. A good choice would be the Cirq or Qiskit devices which also allow for noisy simulations \u2014 for example, check out our tutorial on optimizing noisy circuits using Cirq 2. A full list of devices available can be found on our website: Plugins and ecosystem.\n", "link": "https://discuss.pennylane.ai//t/problems-with-forest-plugin/558/2"}, "2": {"author": "AntonioPolicicchio", "date": "1599740039655", "content": "Hi @josh\nthanks!\nIndeed now it works with sol. 1 \nCheers\nAntonio", "link": "https://discuss.pennylane.ai//t/problems-with-forest-plugin/558/3"}, "3": {"author": "AntonioPolicicchio", "date": "1599726250978", "content": "Hello,\nI am very new to Pennylane and I am following the demo tutorials. Everything works fine at the moment, but I have problems with the PyTorch noisy demo.  I create the device, but whet I try to run the circuit I get the following error.\nAny suggestion to understand and solve the problem?\nMany thanks!\nRegards\nAntonio\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-23-ed065177fbb7> in <module>\n      1 print(phi)\n      2 print(theta)\n----> 3 print(circuit(phi, theta))\n      4 print(cost(phi, theta, 400))\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\interfaces\\torch.py in custom_apply(*args, **kwargs)\n    295         # [keyword_values[k] for k in sorted(keyword_positions, key=keyword_positions.get)]\n    296 \n--> 297         return _TorchQNode.apply(keyword_values, *args)\n    298 \n    299     return custom_apply\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\interfaces\\torch.py in forward(ctx, input_kwargs, *input_)\n    187 \n    188             # evaluate the QNode\n--> 189             res = qnode(*ctx.args, **ctx.kwargs)\n    190 \n    191             if not isinstance(res, np.ndarray):\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\qnodes\\base.py in __call__(self, *args, **kwargs)\n    799         \"\"\"Wrapper for :meth:`BaseQNode.evaluate`.\n    800         \"\"\"\n--> 801         return self.evaluate(args, kwargs)\n    802 \n    803     def evaluate(self, args, kwargs):\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\qnodes\\base.py in evaluate(self, args, kwargs)\n    826         if isinstance(self.device, qml.QubitDevice):\n    827             # TODO: remove this if statement once all devices are ported to the QubitDevice API\n--> 828             ret = self.device.execute(self.circuit, return_native_type=temp)\n    829         else:\n    830             ret = self.device.execute(\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane\\_qubit_device.py in execute(self, circuit, **kwargs)\n    180 \n    181         # apply all circuit operations\n--> 182         self.apply(circuit.operations, rotations=circuit.diagonalizing_gates, **kwargs)\n    183 \n    184         # generate computational basis samples\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\qvm.py in apply(self, operations, **kwargs)\n    148         # pylint: disable=attribute-defined-outside-init\n    149         if self.parametric_compilation and \"pyqvm\" not in self.qc.name:\n--> 150             self.apply_parametric_program(operations, **kwargs)\n    151         else:\n    152             super().apply(operations, **kwargs)\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\qvm.py in apply_parametric_program(self, operations, **kwargs)\n    179         for i, operation in enumerate(operations):\n    180             # map the operation wires to the physical device qubits\n--> 181             wires = self.remap_wires(operation.wires)\n    182 \n    183             if i > 0 and operation.name in (\"QubitStateVector\", \"BasisState\"):\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\device.py in remap_wires(self, wires)\n    231         \"\"\"\n    232         if hasattr(self, \"wiring\"):\n--> 233             return [int(self.wiring[i]) for i in wires]\n    234 \n    235         return [int(w) for w in wires]\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pennylane_forest\\device.py in <listcomp>(.0)\n    231         \"\"\"\n    232         if hasattr(self, \"wiring\"):\n--> 233             return [int(self.wiring[i]) for i in wires]\n    234 \n    235         return [int(w) for w in wires]\n\nKeyError: <Wires = [0]>\n", "link": "https://discuss.pennylane.ai//t/problems-with-forest-plugin/558/4"}}