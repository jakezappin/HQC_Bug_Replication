{"0": {"author": "imakash", "date": "1681402812828", "content": "Hello, I am trying to implement a quantum circuit that contains controlled CY gates. The circuit contains multiple layers. Following is the code snippet for a single layer.\ndef ansatz_2(n_qubits, y_weight):\n    for wire, y_weight in enumerate(y_weight):\n                qml.ctrl(op=qml.RY(y_weight, wires=wire), control=(wire-1)%n_qubits)\n\nOther details are as follows:\ndev = qml.device(\"default.qubit\", wires=n_qubits)\ninterface = \"torch\"\n\nWhen I run the ansatz on the CPU, it works well. However, on running the same ansatz on GPU, it throws the following error:\n\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0, CPU!\n\nAlso, If I replace the layer with the following code snippet, the operation happens on GPU without any error.\ndef ansatz_2(n_qubits, y_weight):\n    for wire, y_weight in enumerate(y_weight):\n            qml.RY(y_weight, wires=wire)\n\nSo, I assume that I am doing something wrong with qml.ctrl implementation. Any help here would be appreciated.\n\n\n Solved by isaacdevlugt in post #4 \n\n\n                Ah! Was able to replicate the issue. Had to dust off my other laptop with an NVIDIA card . You found a bug! Nice work! I encourage you to make a bug report on our GitHub (click here and it will direct you to the bug report form). \nIndeed, this code replicates the error you see: \nimport pennylane as \u2026\n              \n", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/1"}, "1": {"author": "isaacdevlugt", "date": "1681480851996", "content": "Hey @imakash! I\u2019m missing a lot of your code here, so I can\u2019t say for certain what\u2019s going on. That said, it sounds to me like you\u2019re passing in two torch.tensor objects that are on different devices. Something akin to this:\nimport pennylane as qml\nimport torch\n\ndev = qml.device(\"default.qubit\", wires=2)\n\n@qml.qnode(dev, interface=\"torch\")\ndef circuit(weight_1, weight_2):\n    qml.ctrl(op=qml.RY(weight_1, wires=1), control=0)\n    qml.RX(weight_2, wires=0)\n    return qml.state()\n\nweights_1 = torch.tensor(0.1, device='cpu')\nweights_2 = torch.tensor(0.1, device='cuda') # if I change this to 'cpu' it works\n\nprint(circuit(weights_1, weights_2))\n\nCan you share your full code?", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/2"}, "2": {"author": "imakash", "date": "1681492099790", "content": "Hello @isaacdevlugt\nThank you for your response.\nThe entire code is quite complex and part of an ongoing research project. Therefore, I can\u2019t post it on a public forum. However, are you able to run qml.ctrl operation on GPU?", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/3"}, "3": {"author": "isaacdevlugt", "date": "1681502590914", "content": "Ah! Was able to replicate the issue. Had to dust off my other laptop with an NVIDIA card . You found a bug! Nice work! I encourage you to make a bug report on our GitHub (click here 2 and it will direct you to the bug report form).\nIndeed, this code replicates the error you see:\nimport pennylane as qml\nimport torch\n\ndev = qml.device(\"default.qubit.torch\", wires=2, torch_device='cuda')\n\n@qml.qnode(dev, interface=\"torch\")\ndef circuit(weight_1, weight_2):\n    qml.ctrl(op=qml.RY(weight_1, wires=1), control=0) # when this gate is removed, all is fine\n    qml.RX(weight_2, wires=0)\n    return qml.state()\n\nweights_1 = torch.tensor(0.1, device='cuda')\nweights_2 = torch.tensor(0.1, device='cuda')\n\nprint(circuit(weights_1, weights_2))\n# RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0, cpu!\n\nAs a fix for now, you can use qml.CRY (see here 1) instead of qml.ctrl. This works:\nimport pennylane as qml\nimport torch\n\ndev = qml.device(\"default.qubit.torch\", wires=2, torch_device='cuda')\n\n@qml.qnode(dev, interface=\"torch\", diff_method=\"backprop\")\ndef circuit(weight_1, weight_2):\n    qml.CRY(weight_1, wires=[0, 1])\n    qml.RX(weight_2, wires=0)\n    return qml.state()\n\nweights_1 = torch.tensor(0.1, device='cuda')\nweights_2 = torch.tensor(0.1, device='cuda')\n\nprint(circuit(weights_1, weights_2))\n'''\n tensor([0.9988+0.0000j, 0.0000+0.0000j, 0.0000-0.0500j, 0.0000+0.0000j],\n       device='cuda:0', dtype=torch.complex128)\n'''\nSolution1", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/4"}, "4": {"author": "isaacdevlugt", "date": "1681502737321", "content": "Also worth mentioning here is that lightning.gpu is the best way to utilize a GPU in PennyLane. You can find out more here: Installation \u2014 PennyLane-Lightning-GPU 0.30.0.dev0 documentation\nThat said, if it doesn\u2019t suit your needs, then no worries!", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/5"}, "5": {"author": "isaacdevlugt", "date": "1681508691266", "content": "Our resident CUDA whisperer @mlxd has already made a fix for this: Qml.ctrl operation on GPU - #5 by isaacdevlugt", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/6"}, "6": {"author": "imakash", "date": "1681569560235", "content": "Hey @isaacdevlugt\nThank you very much for your help. I will also submit a bug report as you suggested.1", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/7"}, "7": {"author": "isaacdevlugt", "date": "1681739249571", "content": "Awesome! Looks like this is set to be merged in good time!", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/8"}, "8": {"author": "imakash", "date": "1681402812828", "content": "Hello, I am trying to implement a quantum circuit that contains controlled CY gates. The circuit contains multiple layers. Following is the code snippet for a single layer.\ndef ansatz_2(n_qubits, y_weight):\n    for wire, y_weight in enumerate(y_weight):\n                qml.ctrl(op=qml.RY(y_weight, wires=wire), control=(wire-1)%n_qubits)\n\nOther details are as follows:\ndev = qml.device(\"default.qubit\", wires=n_qubits)\ninterface = \"torch\"\n\nWhen I run the ansatz on the CPU, it works well. However, on running the same ansatz on GPU, it throws the following error:\n\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0, CPU!\n\nAlso, If I replace the layer with the following code snippet, the operation happens on GPU without any error.\ndef ansatz_2(n_qubits, y_weight):\n    for wire, y_weight in enumerate(y_weight):\n            qml.RY(y_weight, wires=wire)\n\nSo, I assume that I am doing something wrong with qml.ctrl implementation. Any help here would be appreciated.\n\n\n Solved by isaacdevlugt in post #4 \n\n\n                Ah! Was able to replicate the issue. Had to dust off my other laptop with an NVIDIA card . You found a bug! Nice work! I encourage you to make a bug report on our GitHub (click here and it will direct you to the bug report form). \nIndeed, this code replicates the error you see: \nimport pennylane as \u2026\n              \n", "link": "https://discuss.pennylane.ai//t/qml-ctrl-operation-on-gpu/2836/9"}}