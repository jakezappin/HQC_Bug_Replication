{"0": {"author": "Muhammad_Kashif", "date": "1622635471152", "content": "Hello,\nI am newbie to pennylane. I was trying to build some basic circuits and struggling in output reading. For example, I build a circuit with two wires and apply a CNOT gate on it. Now, I want to see output for different inouts (00,01,10,11), how can I do that, like in qiskit we can do that by simulators like QASM and get the output states probability.\nSecondly, I am trying to implement something using Measurement-based quantum computation in pennylane, is there any convenient way of doing this?\nThanks for the help.", "link": "https://discuss.pennylane.ai//t/pennylane-output-cnot-gate/1082/1"}, "1": {"author": "josh", "date": "1622637064624", "content": "Hi @Muhammad_Kashif! Welcome \nCould you expand more by what you mean by the following?\n\nusing Measurement-based quantum computation in pennylane\n\nRegarding your main question,\n\nFor example, I build a circuit with two wires and apply a CNOT gate on it. Now, I want to see output for different inouts (00,01,10,11), how can I do that\n\nTo do so, we want to first create a \u2018device\u2019. This is a quantum simulator, or quantum hardware, that we want to run our computation on. In this case, we\u2019ll simply use the built in default.qubit simulator that comes with PennyLane:\ndev = qml.device(\"default.qubit\", wires=2)\n\nNext, we can create our quantum function. This quantum function executes the gates on our device, and returns a measurement statistic. In this case, we will return the probability.\n@qml.qnode(dev)\ndef circuit():\n    qml.Hadamard(wires=0)\n    qml.CNOT(wires=[0, 1])\n    return qml.probs(wires=[0, 1])\n\nWe now execute this quantum function:\n>>> circuit()\ntensor([0.5, 0. , 0. , 0.5], requires_grad=True)\n\nSo we can see that there is a probability of 0.5 of being in the state |00\\rangle and |11\\rangle, and a probability of 0 of being in the state |01\\rangle and |10\\rangle.\nLet me know if that helps!", "link": "https://discuss.pennylane.ai//t/pennylane-output-cnot-gate/1082/2"}, "2": {"author": "Muhammad_Kashif", "date": "1622639721271", "content": "Hi @josh\nThanks for the reply and example on CNOT gate. Just one more thing that if there is any visualization tools available like histogram plot for output state probabilities or bloch sphere representations?? And also to draw the circuit?\nMeasurement based quantum computation is an approach where an algorithm is designed by first preparing a highly entangled cluster state of qubits and then a single qubits measurements in different measurement basis(X,Y-basis among others) implements the algorithm. In qiskit the cluster state can be prepared by applying CNOT gate to neigboring qubits of graph/cluster state, not sure how it is done here in pennylane or more so in strawberry fields (qumodes case)? If you can please elaborate that in both (qubits and qumodes case) along with measurement basis available here as builtin function?\nThanks", "link": "https://discuss.pennylane.ai//t/pennylane-output-cnot-gate/1082/3"}, "3": {"author": "josh", "date": "1622639883433", "content": "Hi @Muhammad_Kashif,\nRegarding your first question, PennyLane does not have built-in visualization functionality at the moment, but this can be done by importing matplotlib and using the bar plot function \nFor circuit drawing, you can do\nqml.draw(circuit)(*circuit_parameters)\n\nSee the qml.draw documentation for more details.\nRegarding your second question, I might tag @Nicolas_Quesada for any thoughts, as I am not an expert when it comes to measurement based QC!", "link": "https://discuss.pennylane.ai//t/pennylane-output-cnot-gate/1082/4"}, "4": {"author": "Muhammad_Kashif", "date": "1622635471152", "content": "Hello,\nI am newbie to pennylane. I was trying to build some basic circuits and struggling in output reading. For example, I build a circuit with two wires and apply a CNOT gate on it. Now, I want to see output for different inouts (00,01,10,11), how can I do that, like in qiskit we can do that by simulators like QASM and get the output states probability.\nSecondly, I am trying to implement something using Measurement-based quantum computation in pennylane, is there any convenient way of doing this?\nThanks for the help.", "link": "https://discuss.pennylane.ai//t/pennylane-output-cnot-gate/1082/5"}, "5": {"author": "josh", "date": "1622637064624", "content": "Hi @Muhammad_Kashif! Welcome \nCould you expand more by what you mean by the following?\n\nusing Measurement-based quantum computation in pennylane\n\nRegarding your main question,\n\nFor example, I build a circuit with two wires and apply a CNOT gate on it. Now, I want to see output for different inouts (00,01,10,11), how can I do that\n\nTo do so, we want to first create a \u2018device\u2019. This is a quantum simulator, or quantum hardware, that we want to run our computation on. In this case, we\u2019ll simply use the built in default.qubit simulator that comes with PennyLane:\ndev = qml.device(\"default.qubit\", wires=2)\n\nNext, we can create our quantum function. This quantum function executes the gates on our device, and returns a measurement statistic. In this case, we will return the probability.\n@qml.qnode(dev)\ndef circuit():\n    qml.Hadamard(wires=0)\n    qml.CNOT(wires=[0, 1])\n    return qml.probs(wires=[0, 1])\n\nWe now execute this quantum function:\n>>> circuit()\ntensor([0.5, 0. , 0. , 0.5], requires_grad=True)\n\nSo we can see that there is a probability of 0.5 of being in the state |00\\rangle|00\u27e9 and |11\\rangle|11\u27e9, and a probability of 0 of being in the state |01\\rangle|01\u27e9 and |10\\rangle|10\u27e9.\nLet me know if that helps!", "link": "https://discuss.pennylane.ai//t/pennylane-output-cnot-gate/1082/6"}}