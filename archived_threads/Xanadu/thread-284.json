{"0": {"author": "mileva2319", "date": "1686570569480", "content": "Hello everyone,\nI am trying to simulate some molecules using the variational quantum eigensolver in Pennylane. I\u2019ve read somewhere that you can get results in reasonable time for situations in which less than about 16 qubits are required. I saw numerous examples of simulations of H2O, LiH or H2 molecules, but say I want to use VQE for a molecule with more complex atoms, CuO for example. When I try to input the molecular geometry, I end up with an error. Is there some way to get around this?", "link": "https://discuss.pennylane.ai//t/simulating-more-complex-molecules-in-pennylane-using-vqe/3040/1"}, "1": {"author": "isaacdevlugt", "date": "1686582269535", "content": "Hey @mileva2319! Welcome to the forum !\n\nbut say I want to use VQE for a molecule with more complex atoms, CuO for example. When I try to input the molecular geometry, I end up with an error.\n\nI can only guess as to what the error is, but maybe it\u2019s something like this:\nimport pennylane as qml\nfrom pennylane import numpy as np\n\nsymbols = [\"Cu\", \"O\"]\ncoords = np.array([[0.0, 3.0, 0.0], [0.0, 0.0, 0.0]])\n\nhamiltonian, qubits = qml.qchem.molecular_hamiltonian(symbols, coords, mult=2)\n\n'''\nValueError: Atoms in {'Cu'} are not supported.\n'''\n\nAs this error suggests, Cu isn\u2019t a supported atom in our differentiable Hartree-Fock solver. However, you can use a different backend \u2014 the OpenFermion-PySCF backend \u2014 that supports atoms like Cu. You simply need to add a special keyword argument to specify as much:\nhamiltonian, qubits = qml.qchem.molecular_hamiltonian(symbols, coords, mult=2, method='pyscf')\nprint(hamiltonian)\n\n'''\n<Hamiltonian: terms=172654, wires=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]>\n'''\n\nYou\u2019ll need to pip install openfermionpyscf to get this to work . Just note that the resulting Hamiltonian is non-differentiable \u2014 you can still perform VQE with it, but it will rely on numerical approaches for computing gradients, which can lead to inaccuracies and instability compared to the more robust differentiable Hartree-Fock solver.\nHere\u2019s an example with a smaller molecule:\nsymbols = [\"H\", \"O\"]\ncoords = np.array([[0.0, 1.0, 0.0], [0.0, 0.0, 0.0]])\n\nhamiltonian, qubits = qml.qchem.molecular_hamiltonian(symbols, coords, charge=-1, method='pyscf')\n\ndev = qml.device(\"default.qubit\", wires=12)\n\n@qml.qnode(dev)\ndef circuit(x):\n    for i in range(12):\n        qml.RX(x[i], wires=i)\n    \n    return qml.expval(hamiltonian)\n\nx = np.random.uniform(0, 2*np.pi, size=(12,))\nprint(circuit(x))\nprint(qml.grad(circuit)(x))\n\n'''\n-54.046642484365606\n[10.84198255 10.38715297  2.15646718  1.49026374  1.7440145  -1.07904077\n  0.58801415 -1.1730143   1.62609713 -1.67494756  0.95318472  0.16550297]\n'''\n\nHope this helps!", "link": "https://discuss.pennylane.ai//t/simulating-more-complex-molecules-in-pennylane-using-vqe/3040/2"}, "2": {"author": "mileva2319", "date": "1686570569480", "content": "Hello everyone,\nI am trying to simulate some molecules using the variational quantum eigensolver in Pennylane. I\u2019ve read somewhere that you can get results in reasonable time for situations in which less than about 16 qubits are required. I saw numerous examples of simulations of H2O, LiH or H2 molecules, but say I want to use VQE for a molecule with more complex atoms, CuO for example. When I try to input the molecular geometry, I end up with an error. Is there some way to get around this?", "link": "https://discuss.pennylane.ai//t/simulating-more-complex-molecules-in-pennylane-using-vqe/3040/3"}}