{"0": {"author": "ameya", "date": "1672861214598", "content": "Hello,\nI attempted to extend the Strawberry Field website\u2019s 1-qumode function approximation (CV-QNN) code to multiple qumodes (more than one). I\u2019m facing an issue with the classical input data encoding part. How to encode classical data for more than one qumode into quantum data.\nPlease let me know in case anyone has already solved the function approximation problem using multiple qumodes.\nCV-QNN with just 1 qumode is not sufficient to approximate a fairly complicated function (in my case, a simple exponential function), no matter how many CV-QNN layers are employed. I obtained the best accuracy of 8E-2 (relative error). Has anyone else had similar problems?\nThanks in advance.", "link": "https://discuss.pennylane.ai//t/multiple-qumode-code-for-function-approximation/2419/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1674242297437", "content": "Hi @ameya,\nWhat function are you referring to?\nMaybe it will be easier for you to use PennyLane together with Strawberry Fields.\nPennyLane\u2019s CVNeuralNetLayers 1 for example allows you to use several Modes. Make sure to read the documentation for this function and install the PennyLane-Strawberry Fields Plugin in order to use it.\nPlease let me know if this is what you were looking for!", "link": "https://discuss.pennylane.ai//t/multiple-qumode-code-for-function-approximation/2419/2"}, "2": {"author": "ameya", "date": "1674248499022", "content": "Hello Catalina,\nThanks for your reply. The link which you provided has function fitting problem in the tutorial section. See the link here Function fitting with a photonic quantum neural network \u2014 PennyLane documentation 4 .This approximates the function using single qumode (wire). In this case, the input data is encoded in the q-state using displacement gate. I wanted to write a code for multiple qumodes, I tried but I do not know how to encode the input data into quantum state using displacement gate. Can you please help me with multiple qumode function fitting problem?\nthanks,\nAmeya", "link": "https://discuss.pennylane.ai//t/multiple-qumode-code-for-function-approximation/2419/3"}, "3": {"author": "CatalinaAlbornoz", "date": "1674838354468", "content": "Hi @ameya,\nIn the tutorial you shared we\u2019re encoding the \u201cX\u201d data, point by point (\u201cx\u201d), into the circuit using a displacement gate. One function that will make your life easier if you\u2019re using several qmodes is using the DisplacementEmbedding template. In the documentation for this template you will find an example with 3 wires, not specifically for function fitting, but it will help you understand how to use the template. Alternatively you could also do the embedding without using the template, by adding another displacement gate for every additional feature you want to add. If you look at the documentation for the Displacement gate 1 you will notice that the first argument is the amplitude for the displacement and the second one is the phase. I recommend that you start by keeping the phase at 0.0 and making the amplitude depend on the value of your feature.\nEg:\nqml.Displacement(x[0], 0.0, wires=0)\nqml.Displacement(x[1], 0.0, wires=1)\n\nIf you\u2019re interested in function fitting but don\u2019t necessarily need to use Continuous Variable, please let me know and I can share some resources using the gate-based model.\nPlease let me know if this helps!", "link": "https://discuss.pennylane.ai//t/multiple-qumode-code-for-function-approximation/2419/4"}, "4": {"author": "ameya", "date": "1674852004968", "content": "Thanks I will go through the documentation, and get back to you in case of any questions.\nAlso, I\u2019m looking for CV based models for function fitting.", "link": "https://discuss.pennylane.ai//t/multiple-qumode-code-for-function-approximation/2419/5"}, "5": {"author": "ameya", "date": "1672861214598", "content": "Hello,\nI attempted to extend the Strawberry Field website\u2019s 1-qumode function approximation (CV-QNN) code to multiple qumodes (more than one). I\u2019m facing an issue with the classical input data encoding part. How to encode classical data for more than one qumode into quantum data.\nPlease let me know in case anyone has already solved the function approximation problem using multiple qumodes.\nCV-QNN with just 1 qumode is not sufficient to approximate a fairly complicated function (in my case, a simple exponential function), no matter how many CV-QNN layers are employed. I obtained the best accuracy of 8E-2 (relative error). Has anyone else had similar problems?\nThanks in advance.", "link": "https://discuss.pennylane.ai//t/multiple-qumode-code-for-function-approximation/2419/6"}}