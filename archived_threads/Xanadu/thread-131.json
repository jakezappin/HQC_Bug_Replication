{"0": {"author": "cnada", "date": "1591258949910", "content": "Hi,\nI was wondering how to apply a quantum circuit for instance on the last dimension of a 3D or 4D tensor. For instance, let\u2019s say I have an input tensor of size (32,32,3) and want to apply a quantum circuit as a KerasLayer (with tensorflow but maybe interesting to also mention the TorchLayer) to get an output of size (32,32,1).\nThanks for your support.\n\n\n Solved by Tom_Bromley in post #2 \n\n\n                Hi @cnada, \nIf I understand your question correctly, you have a QNode that takes 3-dimensional inputs and returns 1-dimensional outputs, and you want to apply this over a tensor of rank greater than 2? \nThis can be done with reshaping: \n(TF version) \nimport pennylane as qml\nimport tensorflow as tf\n\n\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/apply-a-quantum-circuit-on-a-specific-dimension-of-a-tensor/417/1"}, "1": {"author": "Tom_Bromley", "date": "1591274319154", "content": "Hi @cnada,\nIf I understand your question correctly, you have a QNode that takes 3-dimensional inputs and returns 1-dimensional outputs, and you want to apply this over a tensor of rank greater than 2?\nThis can be done with reshaping:\n(TF version)\nimport pennylane as qml\nimport tensorflow as tf\n\ninput_dim = 3\noutput_dim = 1\nother_dim = 32\n\nn_layers = 2\n\ndev = qml.device(\"default.qubit\", wires=input_dim)\n\n@qml.qnode(dev)\ndef qnode(inputs, weights):\n    qml.templates.AngleEmbedding(inputs, wires=range(input_dim))\n    qml.templates.StronglyEntanglingLayers(weights, wires=range(input_dim))\n    return [qml.expval(qml.PauliZ(i)) for i in range(output_dim)]\n    \nweight_shapes = {\"weights\": (n_layers, input_dim, 3)}\n\nqlayer = qml.qnn.KerasLayer(qnode, weight_shapes, output_dim=output_dim)\n\nx = tf.ones((other_dim, other_dim, input_dim))\nx = tf.reshape(x, (other_dim * other_dim, input_dim))\ntf.reshape(qlayer(x), (other_dim, other_dim, output_dim)).shape\n\nYou can also use the Reshape layer in Keras.\n(torch version)\nimport pennylane as qml\nimport torch\n\ninput_dim = 3\noutput_dim = 1\nother_dim = 32\n\nn_layers = 2\n\ndev = qml.device(\"default.qubit\", wires=input_dim)\n\n@qml.qnode(dev)\ndef qnode(inputs, weights):\n    qml.templates.AngleEmbedding(inputs, wires=range(input_dim))\n    qml.templates.StronglyEntanglingLayers(weights, wires=range(input_dim))\n    return [qml.expval(qml.PauliZ(i)) for i in range(output_dim)]\n    \nweight_shapes = {\"weights\": (n_layers, input_dim, 3)}\n\nqlayer = qml.qnn.TorchLayer(qnode, weight_shapes)\n\nx = torch.ones((other_dim, other_dim, input_dim))\nx = torch.reshape(x, (other_dim * other_dim, input_dim))\ntorch.reshape(qlayer(x), (other_dim, other_dim, output_dim)).shape\n\nIn general, if your QNode expects inputs to have a given shape, then the tensor fed into the corresponding KerasLayer or TorchLayer should have shape (batch_size, *shape).Solution", "link": "https://discuss.pennylane.ai//t/apply-a-quantum-circuit-on-a-specific-dimension-of-a-tensor/417/2"}, "2": {"author": "cnada", "date": "1591276651412", "content": "@Tom_Bromley yes. Well actually I meant more say we have an input tensor of shape (None, 32, 32, 3) (think of as a batch of images), and the output will be (None, 32, 32, 1). So basically the qlayer will apply only in the last dimension of the tensor. But from your answer it seems reshaping to (-1,3) is the only way. I thought maybe there was another way.", "link": "https://discuss.pennylane.ai//t/apply-a-quantum-circuit-on-a-specific-dimension-of-a-tensor/417/3"}, "3": {"author": "cnada", "date": "1591258949910", "content": "Hi,\nI was wondering how to apply a quantum circuit for instance on the last dimension of a 3D or 4D tensor. For instance, let\u2019s say I have an input tensor of size (32,32,3) and want to apply a quantum circuit as a KerasLayer (with tensorflow but maybe interesting to also mention the TorchLayer) to get an output of size (32,32,1).\nThanks for your support.\n\n\n Solved by Tom_Bromley in post #2 \n\n\n                Hi @cnada, \nIf I understand your question correctly, you have a QNode that takes 3-dimensional inputs and returns 1-dimensional outputs, and you want to apply this over a tensor of rank greater than 2? \nThis can be done with reshaping: \n(TF version) \nimport pennylane as qml\nimport tensorflow as tf\n\n\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/apply-a-quantum-circuit-on-a-specific-dimension-of-a-tensor/417/4"}}