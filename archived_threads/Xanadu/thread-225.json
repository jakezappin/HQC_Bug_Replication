{"0": {"author": "kabirkhanna85", "date": "1618817720840", "content": "I am running a variation of the max-cut problem using QAOA. For N=6 and p=1 layer, Pennylane\u2019s local simulator gets the job done in under 10 minutes(~300 steps). Here\u2019s the device definition:\n    dev = qml.device(\"default.qubit\", wires=n_wires, analytic=True, shots=1)\nOn the other hand, when I use the Braket local simulator, each step takes about a minute or so. Here\u2019s my device definition:\ndev = qml.device(\"braket.local.qubit\", wires=n_wires, shots=1)\nWhat\u2019s are the plausible reasons for this mismatch? It is a local simulator and so the only mismatch seems to be on braket\u2019s simulator backend which cannot be helped. But is there anything else that comes to mind?", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/1"}, "1": {"author": "Ant_Hayes", "date": "1618853227393", "content": "Hi @kabirkhanna85, thanks for sharing your results!\nThis behaviour is to be expected as there is an inherent performance cost associated with interfacing pennylane with external devices. We are continuously working to minimise this! For now, default.qubit is well optimised so is a strong choice! A notable exception to this rule is qulacs.simulator 3 device which is generally very fast!\nIf you are interested in performing QAOA on remote devices and are finding it takes too long to run the full algorithm, a useful hybrid solution would be to train your parameters on default.qubit, save them and load them for circuit evaluation on a plugin device.\nLet us know if you have any more questions!", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/2"}, "2": {"author": "kabirkhanna85", "date": "1618897957662", "content": "Thanks for the hybrid approach. I shall try it out.\nHowever, I did try the qulacs.simulator and it is not nearly as fast as default.qubit on my algorithm but it is definitely faster than braket.local.qubit. Is there anything wrong on my end because you state otherwise?", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/3"}, "3": {"author": "Ant_Hayes", "date": "1618912854169", "content": "Hi @kabirkhanna85, thanks for the update!\nThinking about it, I have had a similar experience recently when I swapped out a qualcs.simulator device for a default.qubit device and found the optimisation step of QAOA  was faster on a default.qubit. So I don\u2019t think this is an issue with your local code but is an interesting result which we will look into further and we can share the details with you.\nIt may simply be a consequence of our recent effort to speed up default behaviour in pennylane.", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/4"}, "4": {"author": "Ant_Hayes", "date": "1618947797356", "content": "Hi @kabirkhanna85, we have investigated this further and found that the apparent difference in speed is due to the default diff_method associated with the qml.ExpvalCost() function.\nWhen calling this on a default.qubit the default diff_method='backprop', whereas on qulacs.simulator the default is diff_method='parameter-shift' which is much slower than the former.\nHope this has shed some light on the situation. Let us know if you have any more questions!1 Reply", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/5"}, "5": {"author": "josh", "date": "1618983263149", "content": "For more details on the available differentiation methods, where they can be used, and how they differ, check out the gradients page in our documentation: https://pennylane.readthedocs.io/en/stable/introduction/interfaces.html 31 Reply", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/6"}, "6": {"author": "kabirkhanna85", "date": "1618994518719", "content": "You are right. This is possibly why there\u2019s such a difference. Thank you for looking into it! ", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/7"}, "7": {"author": "kabirkhanna85", "date": "1618994557315", "content": "Thank you for the reference @josh! ", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/8"}, "8": {"author": "Ant_Hayes", "date": "1618999925419", "content": "Glad we could help, let us know if you have any more questions!", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/9"}, "9": {"author": "kabirkhanna85", "date": "1620791879246", "content": "Hey, another quick issue. For some reason, Amazon\u2019s SV1 simulator takes 5-10 minutes for 5 steps in a basic 1 layer QAOA from Pennylane\u2019s beginner demo. Do you think it might be because of the queuing system for tasks on simulators? Or is it generally almost instant and there might be something else that is wrong? Please let me know what you think.", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/10"}, "10": {"author": "Maria_Schuld", "date": "1620806430591", "content": "Hey @kabirkhanna85,\nIn these early days of quantum machine learning and quantum computing, remote simulation pipelines are still very slow.\nBasically, PennyLane creates circuits needed to compute the gradient of an optimisation step, sends them in a batch to the Amazon Braket server, where they get queued, simulated in parallel, the results stored in a bucket, retrieved, and sent back to your computer. The overhead of this pipeline is still large.\nHaving said that, the power of the SV1 means that the simulation itself is very fast. In other words, you will find that the runtime hardly depends on the number of qubits (until you reach very large numbers of around 30). So there is a point where the remote simulation will beat your local one!\nThe good news is that speeding up this pipeline is one of the top priorities for the PennyLane dev team at the moment, and we hope to improve things a lot - so watch the space ", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/11"}, "11": {"author": "kabirkhanna85", "date": "1618817720840", "content": "I am running a variation of the max-cut problem using QAOA. For N=6 and p=1 layer, Pennylane\u2019s local simulator gets the job done in under 10 minutes(~300 steps). Here\u2019s the device definition:\n    dev = qml.device(\"default.qubit\", wires=n_wires, analytic=True, shots=1)\nOn the other hand, when I use the Braket local simulator, each step takes about a minute or so. Here\u2019s my device definition:\ndev = qml.device(\"braket.local.qubit\", wires=n_wires, shots=1)\nWhat\u2019s are the plausible reasons for this mismatch? It is a local simulator and so the only mismatch seems to be on braket\u2019s simulator backend which cannot be helped. But is there anything else that comes to mind?", "link": "https://discuss.pennylane.ai//t/regarding-amazons-local-simulator-run-time/978/12"}}