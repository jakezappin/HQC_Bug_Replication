{"0": {"author": "ofir.arzi", "date": "1645358413444", "content": "Is it possible to initialize two qubits using AmplitudeEmbedding, but doing so for each qubit individually?\nSomething like this -\ndev = qml.device(\"default.qubit\", wires=[1, 2])\n\n@qml.qnode(dev)\ndef SWAP_test(A, B):\n    qml.AmplitudeEmbedding([A[0],A[1]], wires=[1], normalize=True)\n    qml.AmplitudeEmbedding([B[0], B[1]], wires=[2], normalize=True)\n    return qml.probs(wires=[1])\n", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-for-two-individual-qubits/1678/1"}, "1": {"author": "josh", "date": "1645441383912", "content": "Hi @ofir.arzi!\nThis is a current restriction with PennyLane, in that only a single, initial state preparation routine can be used.\nHowever, you can use the qml.transforms.merge_amplitude_embedding transform to merge multiple amplitude embeddings in your quantum function, as long as they act on different wires:\ndev = qml.device('default.qubit', wires=4)\n\n@qml.qnode(dev)\n@qml.transforms.merge_amplitude_embedding\ndef qfunc():\n    qml.CNOT(wires=[0, 1])\n    qml.AmplitudeEmbedding([0, 1], wires=2)\n    qml.AmplitudeEmbedding([0, 1], wires=3)\n    return qml.probs(wires=[0, 1, 2, 3])\n\nUsing the transformation we can join the different amplitude embeddings into a single one:\n>>> print(qml.draw(qfunc)())\n  0: \u2500\u2500\u256dC\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256d\u2524 Probs\n  1: \u2500\u2500\u2570X\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u251c\u2524 Probs\n  2: \u2500\u2500\u256dAmplitudeEmbedding(M0)\u2500\u2500\u251c\u2524 Probs\n  3: \u2500\u2500\u2570AmplitudeEmbedding(M0)\u2500\u2500\u2570\u2524 Probs\n  M0 = [0.+0.j 0.+0.j 0.+0.j 1.+0.j]\n", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-for-two-individual-qubits/1678/2"}, "2": {"author": "ofir.arzi", "date": "1645358413444", "content": "Is it possible to initialize two qubits using AmplitudeEmbedding, but doing so for each qubit individually?\nSomething like this -\ndev = qml.device(\"default.qubit\", wires=[1, 2])\n\n@qml.qnode(dev)\ndef SWAP_test(A, B):\n    qml.AmplitudeEmbedding([A[0],A[1]], wires=[1], normalize=True)\n    qml.AmplitudeEmbedding([B[0], B[1]], wires=[2], normalize=True)\n    return qml.probs(wires=[1])\n", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-for-two-individual-qubits/1678/3"}}