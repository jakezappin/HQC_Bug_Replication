{"0": {"author": "imakash", "date": "1690999815676", "content": "Hello, I am experimenting with Pennylane-Qiskit plugin and tried to run a simple quantum circuit on ibmq_qasm_simulator. Following is the code I used.\nimport pennylane as qml\nfrom pennylane import numpy as np\nimport time as time\nimport torch\nimport torch.nn as nn\n\ndev = qml.device(\"default.qubit\", wires=1)\n@qml.qnode(dev, interface = 'torch')\ndef simple_qubit_circuit(theta, inputs):\n    qml.RX(inputs, wires=0)\n    qml.RY(theta, wires=0)\n    return qml.expval(qml.PauliZ(0))\nclass QNet(nn.Module):\n    def __init__(self):\n        super().__init__()\n        shapes = {\n            \"theta\": (1,)\n        }\n        self.q = qml.qnn.TorchLayer(simple_qubit_circuit, shapes)\n    \n    def forward(self, input_value):\n        return self.q(input_value)\n\nx_train = np.array([0.2, 0.1, 0.2, 0.14, 0.11, 0.41, 0.55, 0.3, 0.31, 0.6])\nx_train = torch.tensor(x_train).reshape(10,1)\n\nmodel = QNet()\nt1 = time.time()\nout = model(x_train)\nprint(\"time taken for batch operations: {} seconds\".format(time.time()-t1))\n\n\nI created a random tensor of size 10 and passed it as an input to the quantum model. I understand that the all the samples in the batch were executed sequentially as total 10 jobs were created. However, what surprised me is the time taken to complete the execution of each job. Following is the output I got.\ntime taken for batch operations:  59.5023033618927 seconds\n\nAs there are total 10 samples in the batch, time taken/job is around about 6 seconds. However, when I checked the details of the job submitted to \u2019 ibmq_qasm_simulator\u2019, the \u2018Total completion time\u2019 is 230 ms/job on an average which is way less compared to actual time taken. I am not sure if I am doing something wrong or this behavior is normal.\nOutput of qml.about().\nqml.about()\nName: PennyLane\nVersion: 0.28.0\nSummary: PennyLane is a Python quantum machine learning library by Xanadu Inc.\nHome-page: https://github.com/XanaduAI/pennylane\nAuthor: \nAuthor-email: \nLicense: Apache License 2.0\nLocation: c:\\users\\aksi01\\miniconda3\\envs\\qns\\lib\\site-packages\nRequires: appdirs, autograd, autoray, cachetools, networkx, numpy, pennylane-lightning, requests, retworkx, scipy, semantic-version, toml\nRequired-by: PennyLane-Lightning, PennyLane-qiskit\nPlatform info:           Windows-10-10.0.19045-SP0\nPython version:          3.8.15\nNumpy version:           1.22.3\nScipy version:           1.7.3\nInstalled devices:\n- default.gaussian (PennyLane-0.28.0)\n- default.mixed (PennyLane-0.28.0)\n- default.qubit (PennyLane-0.28.0)\n- default.qubit.autograd (PennyLane-0.28.0)\n- default.qubit.jax (PennyLane-0.28.0)\n- default.qubit.tf (PennyLane-0.28.0)\n- default.qubit.torch (PennyLane-0.28.0)\n- default.qutrit (PennyLane-0.28.0)\n- null.qubit (PennyLane-0.28.0)\n- lightning.qubit (PennyLane-Lightning-0.28.1)\n- qiskit.aer (PennyLane-qiskit-0.29.0)\n- qiskit.basicaer (PennyLane-qiskit-0.29.0)\n- qiskit.ibmq (PennyLane-qiskit-0.29.0)\n- qiskit.ibmq.circuit_runner (PennyLane-qiskit-0.29.0)\n- qiskit.ibmq.sampler (PennyLane-qiskit-0.29.0)\n", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/1"}, "1": {"author": "ludmilaaasb", "date": "1691008593414", "content": "Hello @imakash !\nAs I mentioned in this post reply, I would suggest first updating your PennyLane installed version.\nI also did some minor modifications to the code you shared:\nimport pennylane as qml\nfrom pennylane import numpy as np\nimport time as time\nimport torch\nimport torch.nn as nn\n\ndev = qml.device(\"default.qubit\", wires=1)\n@qml.qnode(dev, interface = 'torch')\ndef simple_qubit_circuit(inputs, theta):\n    qml.RX(inputs, wires=0)\n    qml.RY(theta, wires=0)\n    return qml.expval(qml.PauliZ(0))\nclass QNet(nn.Module):\n    def __init__(self):\n        super().__init__()\n        shapes = {\n            \"theta\": ()\n        }\n        self.q = qml.qnn.TorchLayer(simple_qubit_circuit, shapes)\n    \n    def forward(self, input_value):\n        return self.q(input_value)\n\nx_train = np.array([0.2, 0.1, 0.2, 0.14, 0.11, 0.41, 0.55, 0.3, 0.31, 0.6])\nx_train = torch.tensor(x_train)\n\nmodel = QNet()\nt1 = time.time()\nout = model(x_train)\nprint(\"time taken for batch operations: {} seconds\".format(time.time()-t1))\n\nand I got:\ntime taken for batch operations: 0.005563020706176758 seconds\n\nThe time seems reasonable to me.\nDoes it help? ", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/2"}, "2": {"author": "imakash", "date": "1691065567812", "content": "Hello @ludmilaaasb\nBut, can you change the device to the following and check if you the time is reasonable?\ndev = qml.device(\"qiskit.ibmq\", wires=1, backend='ibmq_qasm_simulator', shots=1000)\n2 Replies", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/3"}, "3": {"author": "ludmilaaasb", "date": "1691078663127", "content": "I am afraid I can\u2019t. \nNote that ibmq_qasm_simulator is a cloud-based simulator. Unfortunately, to use the qiskit.ibmq I need an IBM Q experience account, which I don\u2019t have.  \nBut if you facing some issues with it, I strongly recommend first taking a look at the documentation here 2 and here 1.\nI hope that can help! ", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/4"}, "4": {"author": "kevinkawchak", "date": "1691081217448", "content": "Hello @imakash, I ran this device with ludmilaaasb\u2019s code and got: 4.01 seconds.\nThe issue appears to be with differences between Pennylane and Qiskit simulator settings.\nPennylane defaults to \u201canalytical results\u201d if no shots are entered: qml.devices.default_qubit.DefaultQubit \u2014 PennyLane 0.31.1 documentation\nPerhaps lower the number of ibmq_qasm_simulator shots, or try simulator_statevector.1", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/5"}, "5": {"author": "Tom_Bromley", "date": "1691529156890", "content": "Hi @imakash! I\u2019m curious what your use-case is for the remote simulator? Are you intending to switch to a hardware device?", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/6"}, "6": {"author": "imakash", "date": "1691530075561", "content": "Yes, that\u2019s right. I wanted to evaluate the performance of my circuit on ibmq-qasm-simulator before trying it out on a real device.", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/7"}, "7": {"author": "CatalinaAlbornoz", "date": "1691621213673", "content": "Hi @imakash, this is indeed a good approach.\nMaybe you can use the device tracker 2 to get more insights on the time spent in the queue and other parts of the job. Here\u2019s an example code on how to use it. Please note that I haven\u2019t tested this with the latest Qiskit version so please let me know if you run into any errors.\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Import your favourite libraries\n\nimport pennylane as qml\nimport datetime as dt\n\n# Define the backend that you will run on\nb = \"ibmq_qasm_simulator\"\n#b = \"ibmq_lima\"\n\n# Create your device\ndev = qml.device(\n    \"qiskit.ibmq\",\n    wires=2,\n    backend=b,\n    shots = 1,\n    #ibmqx_token=\"add_your_token_here\"\n)\n\n# Activate the device resource tracker\ndev.tracker.active = True\n\n# Create your qnode\n@qml.qnode(dev)\ndef circuit():\n    qml.Hadamard(wires=0)\n    return qml.expval(qml.PauliZ(0))\n\n# Run your circuit\ncircuit()\n\n# Retrieve your current job\njob = dev._current_job\n\n# Print the summary of job time per step\nprint('Summary: \\n',dev.tracker.history)\n\n# Print the time details for each step in running the job\nprint('Details: \\n',job.time_per_step())\n2", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/8"}, "8": {"author": "imakash", "date": "1690999815676", "content": "Hello, I am experimenting with Pennylane-Qiskit plugin and tried to run a simple quantum circuit on ibmq_qasm_simulator. Following is the code I used.\nimport pennylane as qml\nfrom pennylane import numpy as np\nimport time as time\nimport torch\nimport torch.nn as nn\n\ndev = qml.device(\"default.qubit\", wires=1)\n@qml.qnode(dev, interface = 'torch')\ndef simple_qubit_circuit(theta, inputs):\n    qml.RX(inputs, wires=0)\n    qml.RY(theta, wires=0)\n    return qml.expval(qml.PauliZ(0))\nclass QNet(nn.Module):\n    def __init__(self):\n        super().__init__()\n        shapes = {\n            \"theta\": (1,)\n        }\n        self.q = qml.qnn.TorchLayer(simple_qubit_circuit, shapes)\n    \n    def forward(self, input_value):\n        return self.q(input_value)\n\nx_train = np.array([0.2, 0.1, 0.2, 0.14, 0.11, 0.41, 0.55, 0.3, 0.31, 0.6])\nx_train = torch.tensor(x_train).reshape(10,1)\n\nmodel = QNet()\nt1 = time.time()\nout = model(x_train)\nprint(\"time taken for batch operations: {} seconds\".format(time.time()-t1))\n\n\nI created a random tensor of size 10 and passed it as an input to the quantum model. I understand that the all the samples in the batch were executed sequentially as total 10 jobs were created. However, what surprised me is the time taken to complete the execution of each job. Following is the output I got.\ntime taken for batch operations:  59.5023033618927 seconds\n\nAs there are total 10 samples in the batch, time taken/job is around about 6 seconds. However, when I checked the details of the job submitted to \u2019 ibmq_qasm_simulator\u2019, the \u2018Total completion time\u2019 is 230 ms/job on an average which is way less compared to actual time taken. I am not sure if I am doing something wrong or this behavior is normal.\nOutput of qml.about().\nqml.about()\nName: PennyLane\nVersion: 0.28.0\nSummary: PennyLane is a Python quantum machine learning library by Xanadu Inc.\nHome-page: https://github.com/XanaduAI/pennylane\nAuthor: \nAuthor-email: \nLicense: Apache License 2.0\nLocation: c:\\users\\aksi01\\miniconda3\\envs\\qns\\lib\\site-packages\nRequires: appdirs, autograd, autoray, cachetools, networkx, numpy, pennylane-lightning, requests, retworkx, scipy, semantic-version, toml\nRequired-by: PennyLane-Lightning, PennyLane-qiskit\nPlatform info:           Windows-10-10.0.19045-SP0\nPython version:          3.8.15\nNumpy version:           1.22.3\nScipy version:           1.7.3\nInstalled devices:\n- default.gaussian (PennyLane-0.28.0)\n- default.mixed (PennyLane-0.28.0)\n- default.qubit (PennyLane-0.28.0)\n- default.qubit.autograd (PennyLane-0.28.0)\n- default.qubit.jax (PennyLane-0.28.0)\n- default.qubit.tf (PennyLane-0.28.0)\n- default.qubit.torch (PennyLane-0.28.0)\n- default.qutrit (PennyLane-0.28.0)\n- null.qubit (PennyLane-0.28.0)\n- lightning.qubit (PennyLane-Lightning-0.28.1)\n- qiskit.aer (PennyLane-qiskit-0.29.0)\n- qiskit.basicaer (PennyLane-qiskit-0.29.0)\n- qiskit.ibmq (PennyLane-qiskit-0.29.0)\n- qiskit.ibmq.circuit_runner (PennyLane-qiskit-0.29.0)\n- qiskit.ibmq.sampler (PennyLane-qiskit-0.29.0)\n", "link": "https://discuss.pennylane.ai//t/circuit-simulation-on-ibmq-qasm-simulator-taking-a-lot-of-time/3271/9"}}