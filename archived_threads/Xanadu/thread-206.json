{"0": {"author": "quantopia", "date": "1624901742032", "content": "Hi xandau team!\nI have been following the basic tutorial and was struggling to plug in to TensorFlow. Please kindly provide feedback on my code\n\nCODE\ndev1 = qml.device(\u201cdefault.qubit.tf\u201d, wires=1)\n@qml.qnode(dev1, interface=\u201ctf\u201d)\ndef circuit(params):\nqml.RX(params[0], wires=0)\nqml.RY(params[1], wires=0)\nreturn qml.expval(qml.PauliZ(0))\ndef cost(params):\nreturn np.sqrt(np.abs(circuit(params) - 1))\nparams = [0.54, 0.12]\ndcost = qml.grad(params)\nAlso here are the links\n\n\npennylane.ai\n\n\n\nBasic tutorial: qubit rotation \u2014 PennyLane 1\nTo see how PennyLane allows the easy construction and optimization of quantum functions, let's consider the 'hello world' of QML: qubit rotation.\n\n\n\n\n\nhttps://pennylane.readthedocs.io/en/stable/introduction/interfaces.html 4\n\n\n Solved by Togan in post #7 \n\n\n                Hi @quantopia! It looks like there are NumPy functions being used in your cost (np.sqrt & np.abs). To ensure the output remains differentiable, all functions used within the cost function on differentiable tensors must be done in TensorFlow. \nYou may try the following: \ndev1 = qml.device(\"default.qu\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/1"}, "1": {"author": "Togan", "date": "1624918287614", "content": "Hello @quantopia! Thank you for using the Discussion Forum.\nCould you please provide the error that you encountered? It will be easier to debug and provide assistance this way.\nPS. Please make sure to install TensorFlow >=2.0 pip install tensorflow>=2.0, if you haven\u2019t already ", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/2"}, "2": {"author": "quantopia", "date": "1624965962029", "content": "Hi Togan, I did not see an error but dcost is not what I expected. When I print dcost it shows:\n<pennylane._grad.grad at 0x7fa8c0b69710>\nI\u2019d like to calculate the gradient of the cost function so shouldn\u2019t this be a number?\nPS thanks yes I have installed tensorflow.", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/3"}, "3": {"author": "Togan", "date": "1625098923610", "content": "Hi @quantopia!\nAs described in the first tutorial you sent,\n\nThe function grad() itself returns a function, representing the derivative of the QNode with respect to the argument specified in argnum. In this case, the function circuit takes one argument (params), so we specify argnum=0. Because the argument has two elements, the returned gradient is two-dimensional. We can then evaluate this gradient function at any point in the parameter space.\n\nHence, to get the gradient, you need to implement the following:\ndev1 = qml.device(\"default.qubit.tf\", wires=1)\n\n@qml.qnode(dev1)\ndef circuit(params):\n    qml.RX(params[0], wires=0)\n    qml.RY(params[1], wires=0)\n    return qml.expval(qml.PauliZ(0))\n\ndcircuit = qml.grad(circuit, argnum=0)\nprint(dcircuit([0.54, 0.12]))\n\nAs for calculating the gradients using TensorFlow, the TensorFlow-interfacing QNode acts like any other TensorFlow function, where the standard method used to calculate gradients in eager mode with TensorFlow can be used.\nTherefore, you can implement the following:\ndev1 = qml.device(\"default.qubit.tf\", wires=1)\n\n@qml.qnode(dev1, interface=\"tf\")\ndef circuit(params):\n    qml.RX(params[0], wires=0)\n    qml.RY(params[1], wires=0)\n    return qml.expval(qml.PauliZ(0))\n\nparams = tf.Variable([0.54, 0.12])\n\nwith tf.GradientTape() as tape:\n    # Use the circuit to calculate the loss value\n    loss = circuit(params)\n\nparams_grad = tape.gradient(loss, params)\n\nprint(params_grad)\n\nwhere you can directly define the cost as the output of the QNode or circuit.\nThe same goes for the optimization step, both the Pennylane built-in and TensorFlow interfaces have their own optimizers and way of implementation, you can find more on the TensorFlow interface here.", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/4"}, "4": {"author": "quantopia", "date": "1625230082538", "content": "Thanks Togan the code you shared helps. But I cannot get it to work with the cost function:\ndev1 = qml.device(\"default.qubit.tf\", wires=1)\n\n@qml.qnode(dev1, interface=\"tf\")\ndef circuit(params):\n    qml.RX(params[0], wires=0)\n    qml.RY(params[1], wires=0)\n    return qml.expval(qml.PauliZ(0))\n\nparams = tf.Variable([0.54, 0.12])\n\ndef cost(params):\n    return np.sqrt(np.abs(circuit(params) - 1))\n\nwith tf.GradientTape() as tape:\n    # Use the circuit to calculate the loss value\n    loss = cost(params)\n\nparams_grad = tape.gradient(loss, params)\n\nprint(params_grad)\n\ngives\nAttributeError: \u2018numpy.float64\u2019 object has no attribute \u2018_id\u2019\nOnce I can get this working Ill be able to train my model.", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/5"}, "5": {"author": "Togan", "date": "1625324133568", "content": "Hi @quantopia! It looks like there are NumPy functions being used in your cost (np.sqrt & np.abs). To ensure the output remains differentiable, all functions used within the cost function on differentiable tensors must be done in TensorFlow.\nYou may try the following:\ndev1 = qml.device(\"default.qubit.tf\", wires=1)\n\n@qml.qnode(dev1, interface=\"tf\")\ndef circuit(params):\n    qml.RX(params[0], wires=0)\n    qml.RY(params[1], wires=0)\n    return qml.expval(qml.PauliZ(0))\n\nparams = tf.Variable([0.54, 0.12])\n\n\ndef cost(params):\n    return tf.math.sqrt(tf.math.abs(circuit(params) - 1))\n\nwith tf.GradientTape() as tape:\n    # Use the circuit to calculate the loss value\n    loss = cost(params)\n\nparams_grad = tape.gradient(loss, params)\n\nprint(params_grad)\n\nPlease let us know if the error continuous Solution", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/6"}, "6": {"author": "quantopia", "date": "1625494991478", "content": "Thanks Togan this has helped me a lot. I\u2019m looking forward to using more Penny Lane!1", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/7"}, "7": {"author": "josh", "date": "1625564838422", "content": "@quantopia glad you have solved the issue! If you have any more questions, don\u2019t hesitate to create a new forum post.", "link": "https://discuss.pennylane.ai//t/basic-rotation-tensorflow/1165/8"}}