{"0": {"author": "quantumcoffeemonster", "date": "1657993337069", "content": "Salve,\nI am having a real difficulty breaking this apart. There is a lot pressed together.\nCould someone help me to change this to a script that runs inference on an individual image? Rather than this subplot and grid thing?\ndef visualize_model(model, num_images=6, fig_name=\"Predictions\"):\n    images_so_far = 0\n    _fig = plt.figure(fig_name)\n    model.eval()\n    with torch.no_grad():\n        for _i, (inputs, labels) in enumerate(dataloaders[\"validation\"]):\n            inputs = inputs.to(device)\n            labels = labels.to(device)\n            outputs = model(inputs)\n            _, preds = torch.max(outputs, 1)\n            for j in range(inputs.size()[0]):\n                images_so_far += 1\n                ax = plt.subplot(num_images // 2, 2, images_so_far)\n                ax.axis(\"off\")\n                ax.set_title(\"[{}]\".format(class_names[preds[j]]))\n                imshow(inputs.cpu().data[j])\n                if images_so_far == num_images:\n                    return\n\nJust simple single image inference or loop over folder?\nMerci!", "link": "https://discuss.pennylane.ai//t/quantumtransfer-example-inferece/2035/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1658188406214", "content": "Hi @quantumcoffeemonster, welcome to the forum!\nIn the code you can change the subplot line to ax = plt.subplot(1, 1, images_so_far), and you can execute this function with visualize_model(model_hybrid, num_images=1). This way you will get a single image being printed. Is this what you were looking for?", "link": "https://discuss.pennylane.ai//t/quantumtransfer-example-inferece/2035/2"}, "2": {"author": "quantumcoffeemonster", "date": "1657993337069", "content": "Salve,\nI am having a real difficulty breaking this apart. There is a lot pressed together.\nCould someone help me to change this to a script that runs inference on an individual image? Rather than this subplot and grid thing?\ndef visualize_model(model, num_images=6, fig_name=\"Predictions\"):\n    images_so_far = 0\n    _fig = plt.figure(fig_name)\n    model.eval()\n    with torch.no_grad():\n        for _i, (inputs, labels) in enumerate(dataloaders[\"validation\"]):\n            inputs = inputs.to(device)\n            labels = labels.to(device)\n            outputs = model(inputs)\n            _, preds = torch.max(outputs, 1)\n            for j in range(inputs.size()[0]):\n                images_so_far += 1\n                ax = plt.subplot(num_images // 2, 2, images_so_far)\n                ax.axis(\"off\")\n                ax.set_title(\"[{}]\".format(class_names[preds[j]]))\n                imshow(inputs.cpu().data[j])\n                if images_so_far == num_images:\n                    return\n\nJust simple single image inference or loop over folder?\nMerci!", "link": "https://discuss.pennylane.ai//t/quantumtransfer-example-inferece/2035/3"}}