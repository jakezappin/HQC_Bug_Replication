{"0": {"author": "Miguel_Cacador_Peixo", "date": "1647718264977", "content": "I was following your tutorial 1 about variation classifiers and testing different optimizers. I was wondering if it\u2019s possible to optimize the weights of my VQC  accordingly to a loss function using QNGOptimizer.\nI\u2019m asking this because I\u2019m doing a hyperparameter optimization on high-energy physics data, and I felt that not every optimizer can optimize a loss function per se. Right now, I\u2019m just considering the Adam Optimizer. Is there a quantum-specific optimizer with such capabilities?\nThank you so much in advance!  \nHere\u2019s my code 1.\n(which is the same as the tutorial, but replaced the NesterovMomentumOptimizer by QNGOptimizer, and obviously got an error ).\nPlease note you need to download the parity.txt 1  file.", "link": "https://discuss.pennylane.ai//t/how-to-optimize-weights-accordingly-to-a-loss-function-using-qngoptimizer/1738/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1647899362076", "content": "Hi @Miguel_Cacador_Peixo!\nWe do have several optimizers that are specific to quantum optimization, such as the  QNGOptimizer 1,  LieAlgebraOptimizer 1,  RotosolveOptimizer 1,  RotoselectOptimizer 1, and  ShotAdaptiveOptimizer .\nNote that with the QNGOptimizer you have some limitations as explained in the note in the QNGOptimizer docs 1. If you want to use this optimizer I would suggest trying out realizing the objective function for the optimizer as an ExpvalCost object.\nSome of the other optimizers also have some limitations so be sure to read the docs for them if you want to use them. You will find several examples there which may be helpful too.\nPlease let me know if this helps or if your problem persists!", "link": "https://discuss.pennylane.ai//t/how-to-optimize-weights-accordingly-to-a-loss-function-using-qngoptimizer/1738/2"}, "2": {"author": "Miguel_Cacador_Peixo", "date": "1647974265693", "content": "On the QNGOptimizer for example, I don\u2019t really understand how one can update the VQC weights by comparing the output of the circuit with the label of the data.\nOn the documentation 1, no data is used to update the parameters of the network\u2026 Can you please send a simple code snippet using the QNG Optimizer and a simple dataset for binary classification?", "link": "https://discuss.pennylane.ai//t/how-to-optimize-weights-accordingly-to-a-loss-function-using-qngoptimizer/1738/3"}, "3": {"author": "CatalinaAlbornoz", "date": "1647995626861", "content": "Hi @Miguel_Cacador_Peixo, I now see what you mean. It\u2019s definitely not trivial. I\u2019ll try to figure it out and get back to you.1", "link": "https://discuss.pennylane.ai//t/how-to-optimize-weights-accordingly-to-a-loss-function-using-qngoptimizer/1738/4"}, "4": {"author": "Miguel_Cacador_Peixo", "date": "1647718264977", "content": "I was following your tutorial 1 about variation classifiers and testing different optimizers. I was wondering if it\u2019s possible to optimize the weights of my VQC  accordingly to a loss function using QNGOptimizer.\nI\u2019m asking this because I\u2019m doing a hyperparameter optimization on high-energy physics data, and I felt that not every optimizer can optimize a loss function per se. Right now, I\u2019m just considering the Adam Optimizer. Is there a quantum-specific optimizer with such capabilities?\nThank you so much in advance!  \nHere\u2019s my code 1.\n(which is the same as the tutorial, but replaced the NesterovMomentumOptimizer by QNGOptimizer, and obviously got an error ).\nPlease note you need to download the parity.txt 1  file.", "link": "https://discuss.pennylane.ai//t/how-to-optimize-weights-accordingly-to-a-loss-function-using-qngoptimizer/1738/5"}}