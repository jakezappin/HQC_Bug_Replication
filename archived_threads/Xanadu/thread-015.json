{"0": {"author": "avinash_ch", "date": "1571132638104", "content": "Hello,\nI get an error for the program below.\nPlease correct if my attempt is wrong.\nThank you in advance.\nProgram\nimport pennylane as qml\nfrom pennylane import numpy as np\nfrom pennylane.templates.embeddings import AmplitudeEmbedding\ndev = qml.device(\u2018default.qubit\u2019, wires=2)\nv = np.array([0.29, 0.62, 0.36])\nAmplitudeEmbedding(v, wires=[0,1], pad=True, normalize=True)\namp = np.real(dev._state)\nprint(\"Amplitude vector: \", np.real(dev._state))\nError\nFile \u201c/usr/local/lib/python3.6/dist-packages/PennyLane-0.6.0.dev0-py3.6.egg/pennylane/operation.py\u201d, line 334, in init\nif set(wires) != set(range(QNode._current_context.num_wires)):\nAttributeError: \u2018NoneType\u2019 object has no attribute \u2018num_wires\u2019\n\n\n Solved by josh in post #5 \n\n\n                Hi @avinash_ch, \nThis is because the AmplitudeEncoding function accepts non-differentiable data (the state you want to embed). In PennyLane, differentiable parameters are always passed by postional arguments, while non-differentiable parameters are passed via keyword arguments. \nSo changing the QNod\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-error-help/243/1"}, "1": {"author": "nathan", "date": "1571154066685", "content": "Hi @avinash_ch,\nAs a quantum operation, AmplitudeEmbedding should appear inside of a qnode function, e.g.,\n@qml.qnode(dev)\ndef circuit(params):\n    AmplitudeEmbedding(params, ...)\n    return qml.expval.PauliZ(0)\n1 Reply", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-error-help/243/2"}, "2": {"author": "avinash_ch", "date": "1571158392170", "content": "Thank you @nathan.  I will try that.", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-error-help/243/3"}, "3": {"author": "avinash_ch", "date": "1571332916793", "content": "Hi @nathan\u2026\nIs there still a mistake in my attempt?  Please help.\nThank you.\nProgram\nimport pennylane as qml\nfrom pennylane import numpy as np\nfrom pennylane.templates.embeddings import AmplitudeEmbedding\n\ndev = qml.device('default.qubit', wires=2)\n\n@qml.qnode(dev)\ndef testAmp(v):\n    AmplitudeEmbedding(v, wires=[0,1], pad=True, normalize=True)\n    return qml.expval.PauliZ(0)\n\nv = np.array([0.4, 0.5, 0.3])\n\nexp_val = testAmp(v)\n\nprint(exp_val)\n\n**Error**\n\n  File \"/usr/local/lib/python3.6/dist-packages/PennyLane-0.6.0.dev0-py3.6.egg/pennylane/templates/embeddings.py\", line 141, in AmplitudeEmbedding\n    if normalize and np.linalg.norm(features, 2) != 1:\n\n  File \"/home/avinash/.local/lib/python3.6/site-packages/numpy/linalg/linalg.py\", line 2450, in norm\n    sqnorm = dot(x, x)\n\nTypeError: unsupported operand type(s) for +: 'Variable' and 'Variable'", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-error-help/243/4"}, "4": {"author": "josh", "date": "1571341432817", "content": "Hi @avinash_ch,\nThis is because the AmplitudeEncoding function accepts non-differentiable data (the state you want to embed). In PennyLane, differentiable parameters are always passed by postional arguments, while non-differentiable parameters are passed via keyword arguments.\nSo changing the QNode to pass a keyword argument to AmplitudeEncoding works:\nimport pennylane as qml \nfrom pennylane import numpy as np \nfrom pennylane.templates.embeddings import AmplitudeEmbedding \n\ndev = qml.device('default.qubit', wires=2) \n\n@qml.qnode(dev) \ndef testAmp(data=None): \n    AmplitudeEmbedding(data, wires=[0,1], pad=True, normalize=True) \n    return qml.expval(qml.PauliZ(0)) \n  \nv = np.array([0.4, 0.5, 0.3]) \n\nexp_val = testAmp(data=v) \n\nThis then produces the expected output:\n>>> print(exp_val)\n0.6399999999999999\nSolution", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-error-help/243/5"}, "5": {"author": "avinash_ch", "date": "1571342755640", "content": "Thank you @josh for your quick response.", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-error-help/243/6"}, "6": {"author": "avinash_ch", "date": "1571132638104", "content": "Hello,\nI get an error for the program below.\nPlease correct if my attempt is wrong.\nThank you in advance.\nProgram\nimport pennylane as qml\nfrom pennylane import numpy as np\nfrom pennylane.templates.embeddings import AmplitudeEmbedding\ndev = qml.device(\u2018default.qubit\u2019, wires=2)\nv = np.array([0.29, 0.62, 0.36])\nAmplitudeEmbedding(v, wires=[0,1], pad=True, normalize=True)\namp = np.real(dev._state)\nprint(\"Amplitude vector: \", np.real(dev._state))\nError\nFile \u201c/usr/local/lib/python3.6/dist-packages/PennyLane-0.6.0.dev0-py3.6.egg/pennylane/operation.py\u201d, line 334, in init\nif set(wires) != set(range(QNode._current_context.num_wires)):\nAttributeError: \u2018NoneType\u2019 object has no attribute \u2018num_wires\u2019\n\n\n Solved by josh in post #5 \n\n\n                Hi @avinash_ch, \nThis is because the AmplitudeEncoding function accepts non-differentiable data (the state you want to embed). In PennyLane, differentiable parameters are always passed by postional arguments, while non-differentiable parameters are passed via keyword arguments. \nSo changing the QNod\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/amplitudeembedding-error-help/243/7"}}