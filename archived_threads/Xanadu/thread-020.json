{"0": {"author": "Pei-Kun", "date": "1640583023212", "content": "Two quantum circuits containing parametric gates. The probabilities of the states in circuit 1 were  measured. After some operations (due to I need nonlinear effects for machine learning ), the data was sent to circuit 2. Define the cost function, the results shown that only the parameters in circuit 2 were adjusted. The parameters in circuit 1 were belong to Autograd, however, the values were unchanged. I believe that the parameters in circuit 1 are differentiable. Is it possible to adjust the parameters in circuits and 1 and 2 simultaneously?\nThe following was simplified example:\nimport pennylane as qml\nfrom pennylane import numpy as np\ndev1=qml.device(\u201cdefault.qubit\u201d,wires=1)\ndev2=qml.device(\u201cdefault.qubit\u201d,wires=1)\nphi1=1.0\nphi2=1.0\nparams=np.array([phi1,phi2],requires_grad=True)\n@qml.qnode(dev1)\ndef circ1(params):\nqml.RY(params[0],wires=0)\npro=qml.probs(wires=[0])\nreturn pro\n@qml.qnode(dev2)\ndef circ2(inp,params):\nstate=Pro_State_Con(inp)\nqml.QubitStateVector(state,wires=range(1))\nqml.RY(params[1],wires=0)\npro=qml.probs(wires=[0])\nreturn pro\ndef Pro_State_Con(pro):\nstate=\nfor i in range (len(pro)):\nstate.append(qml.math.toarray(np.sqrt(pro[i])))\nreturn state\ndef cost(params):\nglobal pro,pro2\npro=circ1(params)\npro2=circ2(pro,params)\nprint(pro2[0])\nreturn pro2[0]\nopt=qml.GradientDescentOptimizer(stepsize=0.3)\nfor i in range(10):\nprint(params)\nparams=opt.step(cost,params)\nprint(params)\n\n\n Solved by Pei-Kun in post #2 \n\n\n                I tested the following script, and appeared the error message \u201cState preparation operation QubitStateVector must occur prior to any quantum operations.\u201d \nMean that the input of circuit 2 can not be from the output of circuit 1 or any quantum operations in Pennylane. \nIs there any solution? \nimport p\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/training-parameters-in-two-quantum-circuits/1582/1"}, "1": {"author": "Pei-Kun", "date": "1640829068599", "content": "I tested the following script, and appeared the error message \u201cState preparation operation QubitStateVector must occur prior to any quantum operations.\u201d\nMean that the input of circuit 2 can not be from the output of circuit 1 or any quantum operations in Pennylane.\nIs there any solution?\nimport pennylane as qml\nfrom pennylane import numpy as np\ndev=qml.device(\u201cdefault.qubit\u201d,wires=1)\n@qml.qnode(dev)\ndef circ():\nqml.RY(0,wires=0)\nqml.QubitStateVector([0,1],wires=0)\nqml.RY(0,wires=0)\npro=qml.probs(wires=[0])\nreturn pro\nprint(circ())Solution", "link": "https://discuss.pennylane.ai//t/training-parameters-in-two-quantum-circuits/1582/2"}, "2": {"author": "Pei-Kun", "date": "1640854971713", "content": "The parameters in circuits 1 and 2 can be trained simultaneously in following script. However, what I want is to minimize the output of circuit 2, not the output of circuit 1 plus circuit 2.\nimport pennylane as qml\nfrom pennylane import numpy as np\ndev1=qml.device(\u201cdefault.qubit\u201d,wires=1)\ndev2=qml.device(\u201cdefault.qubit\u201d,wires=1)\nphi1=1.0\nphi2=1.0\nparams=np.array([phi1,phi2],requires_grad=True)\n@qml.qnode(dev1)\ndef circ1(params):\nqml.RY(params[0],wires=0)\npro=qml.probs(wires=[0])\nreturn pro\n@qml.qnode(dev2)\ndef circ2(params):\nqml.templates.MottonenStatePreparation(state,wires=[0])\nqml.RY(params[1],wires=0)\npro=qml.probs(wires=[0])\nreturn pro\ndef Pro_State_Con(pro):\nstate=\nfor i in range (len(pro)):\nstate.append(qml.math.toarray(np.sqrt(pro[i])))\nreturn state\ndef cost(params):\nglobal state\npro=circ1(params)\nstate=Pro_State_Con(pro)\npro2=circ2(params)\nprint(pro[0],pro2[0],pro[0]+pro2[0])\nreturn pro[1]+pro2[0]\nopt=qml.GradientDescentOptimizer(stepsize=0.3)\nfor i in range(10):\nparams=opt.step(cost,params)\nprint(params)", "link": "https://discuss.pennylane.ai//t/training-parameters-in-two-quantum-circuits/1582/3"}, "3": {"author": "Pei-Kun", "date": "1640881525775", "content": "I think that the problem is solved. Measure the probability of circuit 1, do some calculations, and input to the circuit 2. The parameters in circuits 1 and 2 can be  trained simultaneously using Pennylane (see the appendix). The key point is \u201cAutograd ArrayBox\u201d.\n1_qubit.py (887 Bytes)", "link": "https://discuss.pennylane.ai//t/training-parameters-in-two-quantum-circuits/1582/4"}, "4": {"author": "CatalinaAlbornoz", "date": "1641492400787", "content": "Hi @Pei-Kun, welcome to the forum!\nI\u2019m sorry we took long to answer, we were out on holidays.\nI\u2019m glad you could solve your problem.\nThe reason why you were getting the error \u201cState preparation operation QubitStateVector must occur prior to any quantum operations\u201d is because in your \u201ccirc\u201d circuit you were first performing a Y rotation qml.RY(0,wires=0) and then you were preparing a state using qml.QubitStateVector([0,1],wires=0). If you want to prepare a state using QubitStateVector it needs to be the first thing you do in your circuit.\nPlease let me know if you still have any unresolved questions!", "link": "https://discuss.pennylane.ai//t/training-parameters-in-two-quantum-circuits/1582/5"}, "5": {"author": "Pei-Kun", "date": "1640583023212", "content": "Two quantum circuits containing parametric gates. The probabilities of the states in circuit 1 were  measured. After some operations (due to I need nonlinear effects for machine learning ), the data was sent to circuit 2. Define the cost function, the results shown that only the parameters in circuit 2 were adjusted. The parameters in circuit 1 were belong to Autograd, however, the values were unchanged. I believe that the parameters in circuit 1 are differentiable. Is it possible to adjust the parameters in circuits and 1 and 2 simultaneously?\nThe following was simplified example:\nimport pennylane as qml\nfrom pennylane import numpy as np\ndev1=qml.device(\u201cdefault.qubit\u201d,wires=1)\ndev2=qml.device(\u201cdefault.qubit\u201d,wires=1)\nphi1=1.0\nphi2=1.0\nparams=np.array([phi1,phi2],requires_grad=True)\n@qml.qnode(dev1)\ndef circ1(params):\nqml.RY(params[0],wires=0)\npro=qml.probs(wires=[0])\nreturn pro\n@qml.qnode(dev2)\ndef circ2(inp,params):\nstate=Pro_State_Con(inp)\nqml.QubitStateVector(state,wires=range(1))\nqml.RY(params[1],wires=0)\npro=qml.probs(wires=[0])\nreturn pro\ndef Pro_State_Con(pro):\nstate=\nfor i in range (len(pro)):\nstate.append(qml.math.toarray(np.sqrt(pro[i])))\nreturn state\ndef cost(params):\nglobal pro,pro2\npro=circ1(params)\npro2=circ2(pro,params)\nprint(pro2[0])\nreturn pro2[0]\nopt=qml.GradientDescentOptimizer(stepsize=0.3)\nfor i in range(10):\nprint(params)\nparams=opt.step(cost,params)\nprint(params)\n\n\n Solved by Pei-Kun in post #2 \n\n\n                I tested the following script, and appeared the error message \u201cState preparation operation QubitStateVector must occur prior to any quantum operations.\u201d \nMean that the input of circuit 2 can not be from the output of circuit 1 or any quantum operations in Pennylane. \nIs there any solution? \nimport p\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/training-parameters-in-two-quantum-circuits/1582/6"}}