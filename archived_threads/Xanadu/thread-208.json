{"0": {"author": "contepablod", "date": "1693771554995", "content": "Hi! Pennylane new release 0.32 doesn\u2019t support GPU? With the last version I have no problems.\ndev_train = qml.device(\"lightning.gpu\", wires=WIRES + 1, shots=SHOTS)\n\n\nIf you want help with diagnosing an error, please put the full error message below:\nImportError                               Traceback (most recent call last)\nCell In[41], line 1\n----> 1 dev_train = qml.device(\"lightning.gpu\", wires=WIRES + 1, shots=SHOTS)\n\nFile ~/.local/lib/python3.10/site-packages/pennylane/__init__.py:336, in device(name, *args, **kwargs)\n    333 options.update(kwargs)\n    335 # loads the device class\n--> 336 plugin_device_class = plugin_devices[name].load()\n    338 if Version(version()) not in SimpleSpec(plugin_device_class.pennylane_requires):\n    339     raise DeviceError(\n    340         f\"The {name} plugin requires PennyLane versions {plugin_device_class.pennylane_requires}, \"\n    341         f\"however PennyLane version {__version__} is installed.\"\n    342     )\n\nFile /usr/lib/python3/dist-packages/pkg_resources/__init__.py:2465, in EntryPoint.load(self, require, *args, **kwargs)\n   2463 if require:\n   2464     self.require(*args, **kwargs)\n-> 2465 return self.resolve()\n\nFile /usr/lib/python3/dist-packages/pkg_resources/__init__.py:2471, in EntryPoint.resolve(self)\n   2467 def resolve(self):\n   2468     \"\"\"\n   2469     Resolve the entry point from its module and attrs.\n   2470     \"\"\"\n-> 2471     module = __import__(self.module_name, fromlist=['__name__'], level=0)\n   2472     try:\n   2473         return functools.reduce(getattr, self.attrs, module)\n\nFile ~/.local/lib/python3.10/site-packages/pennylane_lightning_gpu/__init__.py:17\n     14 \"\"\"Top level PennyLane-Lightning-GPU module.\"\"\"\n     16 from ._version import __version__\n---> 17 from .lightning_gpu import LightningGPU\n\nFile ~/.local/lib/python3.10/site-packages/pennylane_lightning_gpu/lightning_gpu.py:38\n     24 import concurrent.futures\n     26 from pennylane import (\n     27     math,\n     28     QubitDevice,\n   (...)\n     36     QubitStateVector,\n     37 )\n---> 38 from pennylane_lightning import LightningQubit\n     39 from pennylane.operation import Tensor, Operation\n     40 from pennylane.ops.op_math import Adjoint\n\nImportError: cannot import name 'LightningQubit' from 'pennylane_lightning' (unknown location)\n\nAnd, finally, make sure to include the versions of your packages. Specifically, show us the output of qml.about().\nPennylane INFO\nName: PennyLane\nVersion: 0.32.0\nSummary: PennyLane is a Python quantum machine learning library by Xanadu Inc.\nHome-page: GitHub - PennyLaneAI/pennylane: PennyLane is a cross-platform Python library for differentiable programming of quantum computers. Train a quantum computer the same way as a neural network.\nAuthor:\nAuthor-email:\nLicense: Apache License 2.0\nLocation: /home/contepablod/.local/lib/python3.10/site-packages\nRequires: appdirs, autograd, autoray, cachetools, networkx, numpy, pennylane-lightning, requests, rustworkx, scipy, semantic-version, toml, typing-extensions\nRequired-by: PennyLane-Lightning, PennyLane-Lightning-GPU, PennyLane-qiskit\nPlatform info:           Linux-5.15.90.1-microsoft-standard-WSL2-x86_64-with-glibc2.35\nPython version:          3.10.12\nNumpy version:           1.23.5\nScipy version:           1.10.0\nInstalled devices:\n\nlightning.qubit (PennyLane-Lightning-0.32.0)\ndefault.gaussian (PennyLane-0.32.0)\ndefault.mixed (PennyLane-0.32.0)\ndefault.qubit (PennyLane-0.32.0)\ndefault.qubit.autograd (PennyLane-0.32.0)\ndefault.qubit.jax (PennyLane-0.32.0)\ndefault.qubit.tf (PennyLane-0.32.0)\ndefault.qubit.torch (PennyLane-0.32.0)\ndefault.qutrit (PennyLane-0.32.0)\nnull.qubit (PennyLane-0.32.0)\nqiskit.aer (PennyLane-qiskit-0.30.1)\nqiskit.basicaer (PennyLane-qiskit-0.30.1)\nqiskit.ibmq (PennyLane-qiskit-0.30.1)\nqiskit.ibmq.circuit_runner (PennyLane-qiskit-0.30.1)\nqiskit.ibmq.sampler (PennyLane-qiskit-0.30.1)\nlightning.gpu (PennyLane-Lightning-GPU-0.30.0)\n", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/1"}, "1": {"author": "kevinkawchak", "date": "1693798958362", "content": "Hello @contepablod, lightning.gpu requires the NVIDIA cuQuantum SDK.\nReference:\nhttps://docs.pennylane.ai/projects/lightning-gpu/en/latest/devices.html 8", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/2"}, "2": {"author": "contepablod", "date": "1693837435957", "content": "Thanks @kevinkawchak. Trying installing the drivers!", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/3"}, "3": {"author": "contepablod", "date": "1693841692194", "content": "Hi @kevinkawchak, Ihave installed the requirements, but the problems remains the same:\nNVIDIA INFO\nMon Sep  4 12:29:52 2023\n\u00b1--------------------------------------------------------------------------------------+\n| NVIDIA-SMI 535.104.05             Driver Version: 537.13       CUDA Version: 12.2     |\n|-----------------------------------------\u00b1---------------------\u00b1---------------------+\n| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |\n|                                         |                      |               MIG M. |\n|=========================================+======================+======================|\n|   0  NVIDIA GeForce GTX 1650 Ti     On  | 00000000:01:00.0  On |                  N/A |\n| N/A   48C    P8               4W /  50W |    932MiB /  4096MiB |     15%      Default |\n|                                         |                      |                  N/A |\n\u00b1----------------------------------------\u00b1---------------------\u00b1---------------------+\n\u00b1--------------------------------------------------------------------------------------+\n| Processes:                                                                            |\n|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |\n|        ID   ID                                                             Usage      |\n|=======================================================================================|\n|    0   N/A  N/A       333      G   /Xwayland                                 N/A      |\n\u00b1--------------------------------------------------------------------------------------+\nCUDA INFO\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2023 NVIDIA Corporation\nBuilt on Tue_Aug_15_22:02:13_PDT_2023\nCuda compilation tools, release 12.2, V12.2.140\nBuild cuda_12.2.r12.2/compiler.33191640_0", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/4"}, "4": {"author": "mlxd", "date": "1693842632724", "content": "Hi @contepablod\nIt looks like your version of pennylane is 0.32 but lightning.gpu is 0.30.\nIf you upgrade lightning.gpu with pip install pennylane-lightning-gpu --upgrade I suspect this will fix your problem. The latest version of lightning.qubit has some architectural changes that require all packages to be at the same version. Feel free to try the above and let me know if it succeeds.", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/5"}, "5": {"author": "contepablod", "date": "1693842874715", "content": "Thanks @mlxd! Actually that changed the error so i am moving on \n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\nFile ~/.local/lib/python3.10/site-packages/pennylane_lightning_gpu/lightning_gpu.py:52\n     51 try:\n---> 52     from .lightning_gpu_qubit_ops import (\n     53         LightningGPU_C128,\n     54         LightningGPU_C64,\n     55         AdjointJacobianGPU_C128,\n     56         AdjointJacobianGPU_C64,\n     57         device_reset,\n     58         is_gpu_supported,\n     59         get_gpu_arch,\n     60         DevPool,\n     61         DevTag,\n     62         NamedObsGPU_C64,\n     63         NamedObsGPU_C128,\n     64         TensorProdObsGPU_C64,\n     65         TensorProdObsGPU_C128,\n     66         HamiltonianGPU_C64,\n     67         HamiltonianGPU_C128,\n     68         SparseHamiltonianGPU_C64,\n     69         SparseHamiltonianGPU_C128,\n     70         OpsStructGPU_C128,\n     71         OpsStructGPU_C64,\n     72         PLException,\n     73     )\n     75     try:\n\nImportError: libcudart.so.11.0: cannot open shared object file: No such file or directory\n\nDuring handling of the above exception, another exception occurred:\n\nNameError                                 Traceback (most recent call last)\nCell In[51], line 1\n----> 1 dev_train = qml.device(\"lightning.gpu\", wires=WIRES + 1, shots=SHOTS)\n\nFile ~/.local/lib/python3.10/site-packages/pennylane/__init__.py:336, in device(name, *args, **kwargs)\n    333 options.update(kwargs)\n    335 # loads the device class\n--> 336 plugin_device_class = plugin_devices[name].load()\n    338 if Version(version()) not in SimpleSpec(plugin_device_class.pennylane_requires):\n    339     raise DeviceError(\n    340         f\"The {name} plugin requires PennyLane versions {plugin_device_class.pennylane_requires}, \"\n    341         f\"however PennyLane version {__version__} is installed.\"\n    342     )\n\nFile /usr/lib/python3/dist-packages/pkg_resources/__init__.py:2465, in EntryPoint.load(self, require, *args, **kwargs)\n   2463 if require:\n   2464     self.require(*args, **kwargs)\n-> 2465 return self.resolve()\n\nFile /usr/lib/python3/dist-packages/pkg_resources/__init__.py:2471, in EntryPoint.resolve(self)\n   2467 def resolve(self):\n   2468     \"\"\"\n   2469     Resolve the entry point from its module and attrs.\n   2470     \"\"\"\n-> 2471     module = __import__(self.module_name, fromlist=['__name__'], level=0)\n   2472     try:\n   2473         return functools.reduce(getattr, self.attrs, module)\n\nFile ~/.local/lib/python3.10/site-packages/pennylane_lightning_gpu/__init__.py:17\n     14 \"\"\"Top level PennyLane-Lightning-GPU module.\"\"\"\n     16 from ._version import __version__\n---> 17 from .lightning_gpu import LightningGPU\n\nFile ~/.local/lib/python3.10/site-packages/pennylane_lightning_gpu/lightning_gpu.py:111\n    108         raise ValueError(f\"CUDA device is an unsupported version: {get_gpu_arch()}\")\n    110     CPP_BINARY_AVAILABLE = True\n--> 111 except (ModuleNotFoundError, ImportError, ValueError, PLException) as e:\n    112     warn(str(e), UserWarning)\n    113     CPP_BINARY_AVAILABLE = False\n\nNameError: name 'PLException' is not defined\n\nSeems that Penny does not support CUDA12+?", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/6"}, "6": {"author": "mlxd", "date": "1693843625931", "content": "Glad to help.\nYes, this is correct \u2014 currently lightning.gpu supports CUDA 11.5+ only. We plan to migrate to CUDA 12 in the coming months, but for now we require a CUDA 11 runtime library, CUDA 11 cublas library, and a CUDA 11 version of cuQuantum\u2019s custatevec library. You may be able to pip install these, assuming you have a recent driver installed:\npython3 -m venv pyenv\nsource ./pyenv/bin/activate\npython -m pip install pennylane pennylane-lightning-gpu nvidia-cuda-runtime-cu11 nvidia-cublas-cu11 custatevec-cu11\n\nOnce installed, you may be able to ensure the required libraries are loaded and usable via:\nexport LD_LIBRARY_PATH=/path/to/pyenv/lib/python3.10/site-packages/nvidia/cublas/lib:/path/to/pyenv/lib/python3.10/site-packages/nvidia/cuda_runtime/lib:$LD_LIBRARY_PATH\nldd /path/to/pyenv/lib/python3.10/site-packages/pennylane_lightning_gpu/lightning_gpu_qubit_ops.cpython-310-x86_64-linux-gnu.so\npython myscript.py\n\nwhich can verify if the libraries satisfy the dependencies of lightning.gpus compiled module, and runs your script. Though, this may not work in practice, and may require a full installation of CUDA 11 to function correctly, but I suggested the above as a quicker path to verify if you wish.\nFeel free to let us know if we can be any further help.1", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/7"}, "7": {"author": "contepablod", "date": "1693843748154", "content": "Thanks, i will try to downgrade to CUDA 11+ and let you know!", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/8"}, "8": {"author": "contepablod", "date": "1693885109814", "content": "@mlxd thanks! it worked with CUDA 11.8.\nMaybe you can help me with these. I wan to draw a circuit and the pennylane drawer shows an error of size\nqml.draw_mpl(circuit_train, style=\"pennylane\")(image.flatten(), initial_weights\nplt.show()\nError:\nValueError                                Traceback (most recent call last)\nCell In[66], line 1\n----> 1 qml.draw_mpl(circuit_train, style=\"pennylane\")(image.flatten(), initial_weights)\n      2 plt.show()\n\nFile ~/.local/lib/python3.10/site-packages/pennylane/drawer/draw.py:548, in _draw_mpl_qnode..wrapper(*args, **kwargs_qnode)\n    544     qnode.expansion_strategy = original_expansion_strategy\n    546 _wire_order = wire_order or getattr(qnode.device, \"wires\", None)\n--> 548 return tape_mpl(\n    549     qnode.qtape,\n    550     wire_order=_wire_order,\n    551     show_all_wires=show_all_wires,\n    552     decimals=decimals,\n    553     style=style,\n    554     **kwargs,\n    555 )\n\nFile ~/.local/lib/python3.10/site-packages/pennylane/drawer/tape_mpl.py:391, in tape_mpl(tape, wire_order, show_all_wires, decimals, style, **kwargs)\n    389     _set_style(style)\n    390 try:\n--> 391     return _tape_mpl(\n    392         tape, wire_order=wire_order, show_all_wires=show_all_wires, decimals=decimals, **kwargs\n    393     )\n    394 finally:\n    395     if update_style:\n    396         # we don't want to mess with how it modifies whether the interface is interactive\n    397         # but we want to restore everything else\n\nFile ~/.local/lib/python3.10/site-packages/pennylane/drawer/tape_mpl.py:181, in _tape_mpl(tape, wire_order, show_all_wires, decimals, **kwargs)\n    174             if control_wires:\n    175                 drawer.ctrl(\n    176                     layer,\n    177                     control_wires,\n    178                     wires_target=target_wires,\n    179                     control_values=control_values,\n    180                 )\n--> 181             drawer.box_gate(\n    182                 layer,\n    183                 target_wires,\n    184                 op.label(decimals=decimals),\n    185                 box_options={\n    186                     \"zorder\": 4\n    187                 },  # make sure box and text above control wires if controlled\n    188                 text_options={\"zorder\": 5},\n    189                 active_wire_notches=active_wire_notches,\n    190             )\n    192 # store wires we've already drawn on\n    193 # max one measurement symbol per wire\n    194 measured_wires = Wires([])\n\nFile ~/.local/lib/python3.10/site-packages/pennylane/drawer/mpldrawer.py:477, in MPLDrawer.box_gate(self, layer, wires, text, box_options, text_options, **kwargs)\n    474 # factor of 2 makes it look nicer\n    475 max_height = box_height - 2 * margin + 2 * self._pad\n--> 477 w, h = self._text_dims(text_obj)\n    479 # rotate the text\n    480 if (box_min != box_max) and (w > max_width) and (w > h):\n\nFile ~/.local/lib/python3.10/site-packages/pennylane/drawer/mpldrawer.py:539, in MPLDrawer._text_dims(self, text_obj)\n    522 def _text_dims(self, text_obj):\n    523     \"\"\"Get width and height of text object in data coordinates.\n    524 \n    525     See `this tutorial `_\n   (...)\n    537         height (float): the height of the text in data coordinates\n    538     \"\"\"\n--> 539     renderer = self._fig.canvas.get_renderer()\n    541     # https://matplotlib.org/stable/api/_as_gen/matplotlib.artist.Artist.get_window_extent.html\n    542     # Quote: \"Be careful when using this function, the results will not update if the artist\n    543     # window extent of the artist changes. \"\n    544     # But I haven't encountered any issues yet and don't see a better solution\n    545     bbox = text_obj.get_window_extent(renderer)\n\nFile ~/.local/lib/python3.10/site-packages/matplotlib/_api/deprecation.py:384, in delete_parameter..wrapper(*inner_args, **inner_kwargs)\n    379 @functools.wraps(func)\n    380 def wrapper(*inner_args, **inner_kwargs):\n    381     if len(inner_args) <= name_idx and name not in inner_kwargs:\n    382         # Early return in the simple, non-deprecated case (much faster than\n    383         # calling bind()).\n--> 384         return func(*inner_args, **inner_kwargs)\n    385     arguments = signature.bind(*inner_args, **inner_kwargs).arguments\n    386     if is_varargs and arguments.get(name):\n\nFile ~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py:411, in FigureCanvasAgg.get_renderer(self, cleared)\n    409 reuse_renderer = (self._lastKey == key)\n    410 if not reuse_renderer:\n--> 411     self.renderer = RendererAgg(w, h, self.figure.dpi)\n    412     self._lastKey = key\n    413 elif cleared:\n\nFile ~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py:84, in RendererAgg.__init__(self, width, height, dpi)\n     82 self.width = width\n     83 self.height = height\n---> 84 self._renderer = _RendererAgg(int(width), int(height), dpi)\n     85 self._filter_renderers = []\n     87 self._update_methods()\n\nValueError: Image size of 205700x1800 pixels is too large. It must be less than 2^16 in each direction.\n\nAny insights how to render it? image.flatten has shape (1024,) and weights (1,10). Numbers of wires 16", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/9"}, "9": {"author": "CatalinaAlbornoz", "date": "1693945888902", "content": "Hi @contepablod, you can use qml.draw() 1, which is not as nice as the mpl drawer but it won\u2019t show the size error that you\u2019re seeing.\nYou can use it with print(qml.draw(circuit)(params)) where params are the parameters that your circuit takes (initial_weights I guess in your case).\nI hope this works for what you need!\nBy the way, we have a new PennyLane survey 1. Let us know your thoughts about PennyLane in order to keep bringing you amazing features .", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/10"}, "10": {"author": "contepablod", "date": "1693957785568", "content": "Thnaks @CatalinaAlbornoz. I\u2019ll try that. Btw, I would be awesome to have that pennylane style for this amount of qubits. Another question if you can help me, do it have to do a measure to reset a qubit state using the new feature?", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/11"}, "11": {"author": "CatalinaAlbornoz", "date": "1694140575161", "content": "Hi @contepablod ,\nI agree with you on part number one! Unfortunately for such large circuits I think it would still look very bad but maybe you can do a workaround by creating a custom gate or something similar that can reduce the size of the printed circuit.\nRegarding your second question, you do indeed need to measure in order to reset qubits at the moment. You can learn how to do this here 1. I\u2019d love to learn more about your need to reset without measuring. What is your use case?", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/12"}, "12": {"author": "contepablod", "date": "1694183603855", "content": "@CatalinaAlbornoz i am using swap gates to reset qubits, so i need to add extra-ones, so i want to reduce the numbers only by resetting the existing ones\n@qml.qnode(test_dev)\ndef circuit_test(features):\n    # Amplitude Embedding\n    qml.AmplitudeEmbedding(\n        features=features, wires=range(0, NUM_LAT + NUM_TRASH), normalize=True\n    )\n    # Unitary Operation (U)\n    qml.BasicEntanglerLayers(\n        weights=optimal_result, wires=range(0, NUM_LAT + NUM_TRASH), rotation=qml.RY\n    )\n    # Reset trash space qubits to the |0> state\n    for i in range(NUM_LAT, NUM_LAT + NUM_TRASH):\n        qml.SWAP(wires=[i, NUM_TRASH + i])\n    # Inversed BEL (Udagger)\n    qml.CNOT(wires=[NUM_LAT + NUM_TRASH - 1, 0])\n    for i in range(NUM_LAT + NUM_TRASH - 1, 0, -1):\n        qml.CNOT(wires=[i - 1, i])\n    for i in range(0, NUM_LAT + NUM_TRASH):\n        qml.RY(-optimal_result[0][i], wires=i)\n    return qml.density_matrix(wires=range(0, int((NUM_LAT + NUM_TRASH) / 2)))\n", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/13"}, "13": {"author": "CatalinaAlbornoz", "date": "1694464653220", "content": "Hi @contepablod,\nI don\u2019t really understand why you would want to reset some of your qubits here, but the way measurement and reset works at the moment (as mentioned in our latest blog post) you do indeed need extra qubits. We are looking into ways of improving this in the future so definitely stay tuned for this.\nFrom your code I noticed that you may benefit from using qml.adjoint for simplicity in the last part of your circuit. You can try it out and let me know how it goes!", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/14"}, "14": {"author": "contepablod", "date": "1694476577811", "content": "@CatalinaAlbornoz it\u2019s an autoencoder, so I am trying to reset those qubits (trash space) because i dont need them when i extract the statevector at the end. you may check this qiskit (sorry jaja) tutotrial: The Quantum Autoencoder \u2014 Qiskit Machine Learning 0.6.1 documentation 1\nI am trying to replicate the same in penny.", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/15"}, "15": {"author": "CatalinaAlbornoz", "date": "1694563946220", "content": "Ah I now see what you want to do @contepablod!\n@sophchoe made a continuous-variable quantum-classical auto-encoder using PennyLane and the PennyLane-SF plugin a while ago. You can see her work here 1. The code in this repo uses a very old version of PennyLane but maybe it can inspire you to create an autoencoder that works fully on PennyLane with the latest version (v0.32) and with the gate-based model instead of the CV model.\nAt the moment our reset functionality (as explained here) uses qml.defer_measurements under the hood, so you do need extra qubits unfortunately. However, we\u2019re exploring how to support qubit reuse without consuming additional qubits so this may come in future PennyLane releases.\nIf you\u2019re ok with using a few extra qubits I would recommend using qml.measure() in order to reset your qubits. I know that you don\u2019t specifically need the output of this measurement, but this is a good way to reset them. In the example below qubit 1 is being reset to the |0\\rangle state.\nm = qml.measure(1, reset=True) \n\nPlease let me know if you have any questions about this.\nI hope this helps!", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/16"}, "16": {"author": "CatalinaAlbornoz", "date": "1694563946220", "content": "Ah I now see what you want to do @contepablod!\n@sophchoe made a continuous-variable quantum-classical auto-encoder using PennyLane and the PennyLane-SF plugin a while ago. You can see her work here 1. The code in this repo uses a very old version of PennyLane but maybe it can inspire you to create an autoencoder that works fully on PennyLane with the latest version (v0.32) and with the gate-based model instead of the CV model.\nAt the moment our reset functionality (as explained here) uses qml.defer_measurements under the hood, so you do need extra qubits unfortunately. However, we\u2019re exploring how to support qubit reuse without consuming additional qubits so this may come in future PennyLane releases.\nIf you\u2019re ok with using a few extra qubits I would recommend using qml.measure() in order to reset your qubits. I know that you don\u2019t specifically need the output of this measurement, but this is a good way to reset them. In the example below qubit 1 is being reset to the |0\\rangle|0\u27e9 state.\nm = qml.measure(1, reset=True) \n\nPlease let me know if you have any questions about this.\nI hope this helps!", "link": "https://discuss.pennylane.ai//t/lightning-gpu-support/3387/17"}}