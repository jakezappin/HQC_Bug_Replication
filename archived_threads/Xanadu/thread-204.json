{"0": {"author": "qhc", "date": "1620628701808", "content": "in the quantum-classical hybird neural network, to avoid time consuming, I can not give the qubit a great value.\nwhen I put 3 observables on one wire and put measurement process on, I get some error as below:\n031449\u00d728 2.7 KB\n\nit says Only observables that are qubit-wise commuting Pauli words can be returned on the same wire.\nwhen I take the middle observable as qml.Identity, same error happens.\nare there some proper qubit-wise commuting observables in pennylane?\nor some other methods broaden the output dimension beyond nqubits?", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/1"}, "1": {"author": "Maria_Schuld", "date": "1620652526098", "content": "Hey @qhc and welcome to the forum!\nHmm, could you post a fully running code example that reproduces your error? And do you have the latest PL version installed?\nFor example, running this code with PL 0.15.1 works with no problems:\nimport pennylane as qml\n\ndev = qml.device(\"default.qubit\", wires=4)\n\n@qml.qnode(dev)\ndef circuit():\n    qml.Hadamard(wires=0)\n    return qml.expval(qml.Identity(0)), qml.expval(qml.Identity(0))\n\nprint(circuit()) # [1., 1.]\n", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/2"}, "2": {"author": "qhc", "date": "1620698307599", "content": "thanks for your reply, my PL version is 0.15.1, my code:\nimport numpy as np\nimport pennylane as qml\nfrom pennylane.devices.default_qubit_tf import DefaultQubitTF\n\ndev2 = DefaultQubitTF(wires=8)\n@qml.qnode(dev2, diff_method='backprop', interface='tf')\ndef circuit(inputs, enc_1):\n    for i in range(8):\n        qml.Hadamard(wires=i)\n    # ====================================================\n    # ======================== enc_1 =====================\n    for i in range(8):\n        qml.RZ(enc_1[i]*inputs[i], wires=(i))\n        # qml.RY(enc_1[2*i+1]*inputs[2*i+1], wires=(2*i+1))\n    # ====================================================\n    # ======================== output =====================\n    output = []\n    for ind in range(8):\n        output.append(qml.expval(qml.PauliX(ind)))\n        output.append(qml.expval(qml.Identity(ind)))\n        output.append(qml.expval(qml.PauliZ(ind)))\n    return output\n\ninputs = np.float64(np.random.randn(24))\nenc_1 = np.float64(np.random.randn(8))\nprint(circuit(inputs=inputs, enc_1=enc_1))\n\noutput: QuantumFunctionError: Only observables that are qubit-wise commuting Pauli words can be returned on the same wire", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/3"}, "3": {"author": "Maria_Schuld", "date": "1620734982745", "content": "Thanks for the details!\nThe error message actually says it all here: PennyLane allows for multiple measurements on the same wire in a simulation as long as the observables are Pauli words (i.e. Pauli operators, identities or tensor products thereof) and commute. Your measurements are unfortunately non-commuting.\nOne reason for this restriction is that internally, PL decomposes measurements into a pre-measurement circuit and a simple measurement. But if two measurements don\u2019t commute, their pre-measurement circuits are not the same. However, this may be up for a refactor.\nIf you would like to champion the idea that PL allows non-commuting measurements on the same wires on simulators, you could open an issue 2 with your feature request - the more users need something, the more likely it gets implemented soon ", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/4"}, "4": {"author": "qhc", "date": "1620736516625", "content": "does there exist some commuting Pauli words observables in PL?", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/5"}, "5": {"author": "sjahangiri", "date": "1620764981779", "content": "Hi @qhc.  If I understand your question correctly, yes PennyLane supports multiple measurements of such commuting observables performed on the same wire.  For instance, the error in your code can be fixed by removing one of the PauliX or PauliZ measurements while keeping the Identity one such as:\nfor ind in range(8):\n    output.append(qml.expval(qml.PauliX(ind)))\n    output.append(qml.expval(qml.Identity(ind)))\nreturn output\n\nPennyLane also supports measurements of tensor product of observables as explained here 8. Please let us know if you have any other question.", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/6"}, "6": {"author": "qhc", "date": "1620790130379", "content": "thanks, you all help me a lot\n", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/7"}, "7": {"author": "qhc", "date": "1620628701808", "content": "in the quantum-classical hybird neural network, to avoid time consuming, I can not give the qubit a great value.\nwhen I put 3 observables on one wire and put measurement process on, I get some error as below:\n031449\u00d728 2.7 KB\n\nit says Only observables that are qubit-wise commuting Pauli words can be returned on the same wire.\nwhen I take the middle observable as qml.Identity, same error happens.\nare there some proper qubit-wise commuting observables in pennylane?\nor some other methods broaden the output dimension beyond nqubits?", "link": "https://discuss.pennylane.ai//t/one-wire-with-multi-observables/1032/8"}}