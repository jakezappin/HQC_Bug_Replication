{"0": {"author": "Henry", "date": "1650205236744", "content": "Hi, I\u2019m a beginner in Pennylane and I\u2019m reading the documentation. In Numpy interface 5, I try to run the code below,\ndev = qml.device('default.qubit', wires=5)\n\n@qml.qnode(dev)\ndef circuit(data, weights):\n    qml.AmplitudeEmbedding(data, wires=[0, 1, 2], normalize=True)\n    qml.RX(weights[0], wires=0)\n    qml.RY(weights[1], wires=1)\n    qml.RZ(weights[2], wires=2)\n    qml.CNOT(wires=[0, 1])\n    qml.CNOT(wires=[0, 2])\n    return qml.expval(qml.PauliZ(0))\n\nrng = np.random.default_rng(seed=42)  # make the results reproducable\ndata = rng.random([2 ** 3], requires_grad=True)\nweights = np.array([0.1, 0.2, 0.3], requires_grad=False)\n\nprint(qml.grad(circuit)(data, weights=weights))\n\nbut get a TypeError:\nTypeError: must be real number, not ArrayBox\n\nI find that if I just change the wires in qml.device to 3, which is the number of wires used in qml.AmplitudeEmbedding, then the code works with a UserWarning:\n[ 0.38170533  0.21644929  0.42344963  0.34393308 -0.04337338 -0.44932293 -0.35054294 -0.36202196]\nComplexWarning: Casting complex values to real discards the imaginary part\nreturn A.astype(dtype, order, casting, subok, copy)\n\nIt seems like the question is related to the qml.AmplitudeEmbedding function, but in qml.AmplitudeEmbedding\u2019s documentation it is said that\n\nAt the moment, the features argument is not differentiable when using the template, and gradients with respect to the features cannot be computed by PennyLane.\n\n\nDue to non-trivial classical processing to construct the state preparation circuit, the features argument is in general not differentiable.\n\nSo what\u2019s the output above? I\u2019m confused about them.\nI was wondering if there\u2019s something wrong with the code in \u201cNumpy interface\u201d documentation, or if there\u2019s something I ignored. Could it be possible to explain these questions?\nThanks in advance for your help!\nBest regards,\nHenry\n\n\n Solved by CatalinaAlbornoz in post #2 \n\n\n                Hi @Henry, thank you for asking this question. This seems to be a bug with the default.qubit device because if you try with lightning.qubit it works well with 5 wires. \nRegarding the differentiability, the docs say that the features argument is \u201cin general\u201d not differentiable, but there does seem to\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1650298459531", "content": "Hi @Henry, thank you for asking this question. This seems to be a bug with the default.qubit device because if you try with lightning.qubit it works well with 5 wires.\nRegarding the differentiability, the docs say that the features argument is \u201cin general\u201d not differentiable, but there does seem to be a gradient every time so I\u2019ll get back to you on this one.Solution", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/2"}, "2": {"author": "Henry", "date": "1650461750295", "content": "Hi @CatalinaAlbornoz, thank you very much for your reply! That\u2019s almost enough for me to know it seems to be a bug, and I\u2019ll try to avoid the situation in the future.\nHowever, I feel so sorry to say that when I use lightning.qubit or import pennylane_lightning it raises an ImportError \nImportError: DLL load failed while importing lightning_qubit_ops: The specified module could not be found.\n\nI just follow the installation manual to install the latest modules\u2026it seems that I might be the first one to meet this error. I would be very grateful if you could provide any suggestions.\nAnyway, thanks again for your kind help!", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/3"}, "3": {"author": "CatalinaAlbornoz", "date": "1650541021389", "content": "Hi @Henry,\nlightning.qubit already comes installed with the latest versions of PennyLane. My suggestion would be to create a new virtual environment on your terminal using Python 3.7 or higher: conda create --name <your_env_name> python=3.10\nThe only imports you should need are import pennylane as qml and\nfrom pennylane import numpy as np\nIf you\u2019re using an M1 mac this will not work. You will need to set up an x86 environment, which you can do by following the instructions here 1.\nAnother option is to go to pennylane.xanadu.ai 1 and set up an account for our cloud, where you will be able to run your circuits without having to install anything in your computer. This is still in beta, so please let us know if you have any feedback on the platform in case you decide to use it.\nPlease let me know if you manage to solve this issue!", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/4"}, "4": {"author": "Henry", "date": "1651482287097", "content": "Hi, @CatalinaAlbornoz,\nsorry to reply so late. It still raises the ImportError about lightning.qubit on my desktop computer, but it works well with 5 wires when using lightning.qubit on my laptop. It\u2019s a little strange, as both of them are Win10 and I installed pennylane in the same way. Luckily, this doesn\u2019t affect my work too much, and I\u2019ll try to solve the problem later.\nThanks so much for your kind help!", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/5"}, "5": {"author": "CatalinaAlbornoz", "date": "1651507058382", "content": "Hi @Henry,\nI\u2019m glad it\u2019s working on your laptop. The only explanation I can find for it not working on your desktop computer is that something in the virtual environment is causing problems. You can try creating a new virtual environment and install only pennylane and jupyter. You can then see if it works or if not you can use import pennylane as qml;qml.about() and you can see if there\u2019s something different from the environment you have on your laptop.\nI hope this is useful in making it work on your desktop computer!", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/6"}, "6": {"author": "CHU_WENHAO", "date": "1654480880968", "content": "Hi @CatalinaAlbornoz,\nI encountered the same problem when I tried to use lightning.qubit, it raised the same ImportError as:\nImportError: DLL load failed while importing lightning_qubit_ops: The specified module could not be found.\n\nHere is my pennylane version:\nPlatform info:           Windows-10-10.0.19041-SP0\nPython version:          3.10.0\nNumpy version:           1.21.5\nScipy version:           1.7.3\nInstalled devices:\n\ndefault.gaussian (PennyLane-0.22.1)\ndefault.mixed (PennyLane-0.22.1)\ndefault.qubit (PennyLane-0.22.1)\ndefault.qubit.autograd (PennyLane-0.22.1)\ndefault.qubit.jax (PennyLane-0.22.1)\ndefault.qubit.tf (PennyLane-0.22.1)\ndefault.qubit.torch (PennyLane-0.22.1)\nlightning.qubit (PennyLane-Lightning-0.22.0)\n\nThank you in advance for any possible help!\nBestRegards,\nWenhao2 Replies", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/7"}, "7": {"author": "CY_Park", "date": "1654528953787", "content": "Hi @CHU_WENHAO,\ncould you update the PennyLane  to 0.23?  pip install PennyLane==0.23 will do this.", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/8"}, "8": {"author": "CatalinaAlbornoz", "date": "1654560313688", "content": "@CHU_WENHAO and @CY_Park\nRunning python -m pip install PennyLane==0.23.1 would be even better ", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/9"}, "9": {"author": "malcomjarr", "date": "1684252302043", "content": "\n\n\n CHU_WENHAO:\n\nImportError: DLL load failed while importing lightning_qubit_ops: The specified module could not be found.\n\n\n\nThe error indicates that certain \u201cdependencies\u201d required for the desired libraries were missing. This is a frequently encountered issue during the installation of Python packages, particularly on Windows. Prior to utilizing any library, it is advisable to verify if it necessitates additional libraries within the Python ecosystem.\nThe solution is to provide the interpreter with the python  path to your module/library. The simplest solution is to append that path to your sys.path list. In your notebook, first try:\nimport sys\nsys.path.append('my/path/to/module/folder')\n\nThis is not a persistent modification to the sys.path, as your environment is reset when you log out, causing any variables you may have set to be lost.\nA more effective (and enduring) approach to resolve this issue is by configuring your PYTHONPATH, which enables the interpreter to search for Python packages/modules in additional directories.\nfrom BASH type: export PYTHONPATH=/path/to/new/folder:/another/path/...../ \n\n#each path must be separated by a colon\n", "link": "https://discuss.pennylane.ai//t/question-about-documentations-of-numpy-interface/1838/10"}}