{"0": {"author": "Pride-Huang", "date": "1686559429562", "content": "Hello! If applicable, put your complete code example down below. Make sure that your code:\n\nis 100% self-contained \u2014 someone can copy-paste exactly what is here and run it to\nreproduce the behaviour you are observing\nincludes comments\n\n@qml.qnode(dev, diff_method=\"backprop\")\ndef circuit(weights, gammas, x):\n    global num_qubits\n    FRQI(x, num_qubits, gammas)\n\n    for W in weights:\n        layer(W)\n\n    density = qml.density_matrix(wires=[0,1])\n\n    return density\n\nIf you want help with diagnosing an error, please put the full error message below:\nTypeError: Grad only applies to real scalar-output functions. Try jacobian, elementwise_grad or holomorphic_grad.\n\nAnd, finally, make sure to include the versions of your packages. Specifically, show us the output of qml.about().", "link": "https://discuss.pennylane.ai//t/how-can-i-use-density-as-output-and-build-my-qnn-model/3038/1"}, "1": {"author": "isaacdevlugt", "date": "1686585685126", "content": "Hey @Pride-Huang! Welcome to the forum !\nSince I don\u2019t have access to your layer and FRQI quantum functions, here\u2019s a minimal example that reproduces the error you get:\nimport pennylane as qml\nfrom pennylane import numpy as np\n\ndev = qml.device(\"default.qubit\", wires=2)\n\n@qml.qnode(dev, diff_method=\"backprop\")\ndef circuit(x):\n    qml.RX(x, 0)\n    qml.Hadamard(0)\n\n    return qml.density_matrix(wires=[0, 1])\n\nx = np.array(0.1, requires_grad=True)\nqml.grad(circuit)(x)\n\n'''\nTypeError: Grad only applies to real scalar-output functions. Try jacobian, elementwise_grad or holomorphic_grad.\n'''\n\nAs the error suggests, the grad function only applies to QNodes that return a scalar (e.g., qml.expval(qml.PauliZ(0))). Here, you\u2019re returning tensor. To differentiate this circuit, you can use jacobian, noting that we only support differentiation of states when they\u2019re separated into their real and imaginary parts:\ndev = qml.device(\"default.qubit\", wires=2)\n\n@qml.qnode(dev)\ndef circuit(x):\n    qml.RX(x, 0)\n    qml.Hadamard(1)\n    return qml.density_matrix(wires=[0, 1])\n\ndef realcircuit(x):\n    return qml.math.real(circuit(x))\n\nx = np.array(0.1, requires_grad=True)\nprint(qml.jacobian(realcircuit)(x))\n\ndef complexcircuit(x):\n    return qml.math.imag(circuit(x))\n\nprint(qml.jacobian(complexcircuit)(x))\n\nHope this helps!", "link": "https://discuss.pennylane.ai//t/how-can-i-use-density-as-output-and-build-my-qnn-model/3038/2"}, "2": {"author": "Pride-Huang", "date": "1686587034226", "content": "Thanks for your reply. I have know how to compute the Jacobian matrix now. However, how can.I.use it to update my parameters. Are there any optimizer? I will appreciate for your reply.", "link": "https://discuss.pennylane.ai//t/how-can-i-use-density-as-output-and-build-my-qnn-model/3038/3"}, "3": {"author": "isaacdevlugt", "date": "1686695262902", "content": "No optimizers come to mind that do that \u2026 The Jacobian is a tensor object \u2014 an update rule that directly uses a Jacobian isn\u2019t entirely obvious to me. Do you have a specific application in mind? Maybe a gradient-based method is best here?", "link": "https://discuss.pennylane.ai//t/how-can-i-use-density-as-output-and-build-my-qnn-model/3038/4"}, "4": {"author": "Pride-Huang", "date": "1686559429562", "content": "Hello! If applicable, put your complete code example down below. Make sure that your code:\n\nis 100% self-contained \u2014 someone can copy-paste exactly what is here and run it to\nreproduce the behaviour you are observing\nincludes comments\n\n@qml.qnode(dev, diff_method=\"backprop\")\ndef circuit(weights, gammas, x):\n    global num_qubits\n    FRQI(x, num_qubits, gammas)\n\n    for W in weights:\n        layer(W)\n\n    density = qml.density_matrix(wires=[0,1])\n\n    return density\n\nIf you want help with diagnosing an error, please put the full error message below:\nTypeError: Grad only applies to real scalar-output functions. Try jacobian, elementwise_grad or holomorphic_grad.\n\nAnd, finally, make sure to include the versions of your packages. Specifically, show us the output of qml.about().", "link": "https://discuss.pennylane.ai//t/how-can-i-use-density-as-output-and-build-my-qnn-model/3038/5"}}