{"0": {"author": "Pranav_Chandarana", "date": "1676896024032", "content": "Hello! I have been trying to find the expectation value ofH_p = (n0 + n1 - 5)**2 using strawberryfields. The expansion gives H_p = n0**2 + 2*n0*n1 - 10*n0 + n1**2 - 10*n1 + 25. and to calculate its expectation value with a given state, I created this function.\ndef expval2():\n    n02 = state.mean_photon(0)[1] + state.mean_photon(0)[0]**2\n    n0n1 = 2*state.number_expectation([0, 1])[0]\n    n0z = -10*state.mean_photon(0)[0]\n    n12 = state.mean_photon(1)[1] + state.mean_photon(1)[0]**2\n    n1z = -10*state.mean_photon(1)[0]\n    return n02 + n0n1 + n0z + n12 + n1z + 25\n\nwhere each of the variables shows respectively the expectation value of each term of the expansion.\nCan anyone please verify if this is the correct way? And is there any better way to calculate the expectation values of any operators in Strawberryfields ( like qml.expval(H))?\nAny help is much appreciated. Thanks!\n\n\n Solved by nathan in post #3 \n\n\n                Hi @Pranav_chandarana! \nYes, this looks like the correct expression . A perfectly suitable way to achieve this. \nStrawberry Fields does not have the same level of support for measuring arbitrary Hamiltonians as PennyLane does (much harder to compute arbitrary expvals in photonics picture). \nIf you h\u2026\n              \n", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/1"}, "1": {"author": "CatalinaAlbornoz", "date": "1677273681332", "content": "Hi @Pranav_Chandarana, thank you for your question! We\u2019re taking a look at it and should be back soon with an answer.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/2"}, "2": {"author": "nathan", "date": "1677277051164", "content": "Hi @Pranav_chandarana!\nYes, this looks like the correct expression . A perfectly suitable way to achieve this.\nStrawberry Fields does not have the same level of support for measuring arbitrary Hamiltonians as PennyLane does (much harder to compute arbitrary expvals in photonics picture).\nIf you had a Hamiltonian that was a linear combination of number operators, you could use poly_quad_expectation, but your Hamiltonian a quadratic polynomial of number operators, so the way you\u2019ve taken would be the recommended way.Solution2", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/3"}, "3": {"author": "Pranav_Chandarana", "date": "1677491947429", "content": "Thanks, @nathan! An extended question. I was playing around with QAOA to minimize this cost function using a Photonic setup. The circuit is as follows:\n\nScreenshot 2023-02-27 at 10.53.121094\u00d7548 64.6 KB\n\nWhere U_C is the Hamiltonian term and U_B is a mixer term. The cost function this the expectation value as defined above.\n\nScreenshot 2023-02-27 at 10.55.102018\u00d71046 251 KB\n\nBut this optimization is not working as it should. Any intuition why this is the case? I know this question is difficult to answer by looking at the code. Any help will be appreciated.\nThe optimization energies look like the following:\n\nScreenshot 2023-02-27 at 10.58.01782\u00d71706 79.6 KB\n\nP.S. Ignore the \u201cprobability\u201d.1", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/4"}, "4": {"author": "CatalinaAlbornoz", "date": "1677620301706", "content": "Hi @Pranav_Chandarana, is there a particular reason why you decided to use tapes? These were originally designed as a developer feature so I\u2019m curious about your use of it.\nAlso, if you can copy-paste your code I can try to run it to see if I can replicate your problem.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/5"}, "5": {"author": "Pranav_Chandarana", "date": "1677659255403", "content": "Hello! @CatalinaAlbornoz. I use tapes just to find gradients in a TensorFlow setup (I wanted to use Adam optimizer). We can also use scipy optimizers if needed.\nAs the code is a little long, it is much easy to make a google collab so I have done it.\nHere is the link 5\nThe energies might not be the same but as we are finding the minimum of the H_p, we should get 0 ( as QAOA should land into any values of n_0 and n_1 that sum to 5. )\nI have used p^2 as a mixer and made some changes in the code so that it is easy. Hence, it might now replicate exactly but the question is:\nWhy the optimization does not converge to 0 if the \u201cexpval2()\u201d is a correct function?", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/6"}, "6": {"author": "CatalinaAlbornoz", "date": "1678122801703", "content": "Hi @Pranav_Chandarana,\nThank you for sharing your code. I can replicate your results. I\u2019m not sure where the issue is though. We\u2019ll take a look into this.1", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/7"}, "7": {"author": "Pranav_Chandarana", "date": "1678963543304", "content": "Hello. Any updates on this?", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/8"}, "8": {"author": "CatalinaAlbornoz", "date": "1679097122863", "content": "Hi @Pranav_Chandarana,\nI\u2019m very sorry for the delay in our response. There are several things that can be happening here:\n1 - With your current cutoff you\u2019re not being able to represent 100% of your state, probably due to the fact that you have non-gaussian gates such as Kerr gates. You can check this by using tf.norm(state.ket()) and noticing that the norm isn\u2019t 1. You can try increasing the cutoff, although this is going to take more simulation time and is probably not going to completely solve your problem.\n2 - There are no guarantees that the algorithm that you\u2019re using will get you to the global minimum. You could be, for instance, arriving at a local minimum. You can reduce your chances of getting stuck in a local minimum by trying different initializations of your hyperparameters or introducing some randomness.\n3 - It is possible that your implementation of QAOA doesn\u2019t actually solve the problem. You can check this paper on A Quantum Approximate Optimization Algorithm for continuous problems, and this implementation 1 of that paper by Jack Ceroni. You will notice that this CV version of QAOA looks very different from the discrete one. Again, there are no guarantees that this will solve your problem but it\u2019s a route worth exploring.\nI hope this can help you understand and resolve your problem. Please let us know if you have any further questions  .1", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/9"}, "9": {"author": "Pranav_Chandarana", "date": "1679304440365", "content": "Hello @CatalinaAlbornoz. Thanks for the detailed explanation. I agree with all the points. In the meantime, I wrote another similar code (not the same) that solves the problem. In this case, instead of finding the expectation value of H_p, I find the mean photon number of modes n_0 and n_1 at each step and put the values in the function (n_0 + n_1 - 5)^2. This way, I was able to solve the problem. But, I don\u2019t know if this is the right way or not.\nEssentially, a variational quantum algorithm needs to have an output from which we can decode the solution. This seems to be true in this case since we can find optimal circuit evolution for which the mean photon number information will give the solution.\nThe problem however is that since the mean photon number is essentially <n_i>, the function that QAOA evaluates at each iteration is not exactly <H_p>. Since  <(n_0 + n_1 - 5)^2> \\neq (<n_0> + <n_1> - 5)^2>   in general. The code can be found here. 2 If you see the last cell, the sum of the mean photon number does equal 5 so we solved the problem.\nThe question here is: Is this algorithm correct physics-wise? If the answer is no, then why? The algorithm is not QAOA anymore but it can be seen as a variational algorithm that can be used to solve the problem. (since all the information that we need is n_0 and n_1 should sum to 5.)\nMany thanks for the help.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/10"}, "10": {"author": "CatalinaAlbornoz", "date": "1679605770744", "content": "Hi @Pranav_Chandarana, I\u2019m glad that you managed to find a solution!\nI cannot guarantee the physical correctness of this but it does seem to follow the approach detailed in the Continuous-QAOA implementation 3 that I shared before.\nHere the author also uses this version of QAOA (which looks very different from the discrete one) for a parabolic function with a shift: f(x) = (x \u2212 a)^2\nI hope this helps. Hopefully some other members of the community can validate this too! 1", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/11"}, "11": {"author": "Pranav_Chandarana", "date": "1679651692720", "content": "Many thanks for the input!!", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/12"}, "12": {"author": "jmarrazola", "date": "1679667698623", "content": "Hi @Pranav_Chandarana,\nI don\u2019t see any issues with the approach you are following. Seems to me like you want to ensure that the sum of the mean photon numbers in both modes is equal to 5, so it\u2019s perfectly fine to use (\\langle n_0\\rangle) + \\langle n_1\\rangle - 5)^2 as the cost function.\nThe mistake would be in the other direction \u2013 minimizing  \\langle (n_0 + n_1 -5)^2 \\rangle may not give you a circuit where the sum of mean photon numbers is equal to 5, precisely for the reasons you are outlining.\nHope that helps!2", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/13"}, "13": {"author": "Pranav_Chandarana", "date": "1679669833731", "content": "Hello @jmarrazola, Thanks for the input. My goal is to extract the solution from the parameterized unitary.\nI wanted to clarify that I am just doing QAOA with number states. So end goal was to get state any one of the possible ground states of the H_p with high probability. Seems like that\u2019s hard to do. So instead of extracting the solution from the end state (usual QAOA), This cost function will extract information from the mean photon number (because for instance, <n_0>,<n_1>= 0,5 will not mean that state  |0,5> has high success probability in general). I guess this algorithm can be \u201csold\u201d as a VQA since the goal of any VQA is to successfully encode and decode the problem with a parameterized unitary, which seems to be the case here.\nThis will work for \u201cclassical\u201d Hamiltonians (def: the solutions are pure number states (analog to classical Hamiltonians in qubits where its bitstrings)). If we go for a quantum Hamiltonian, this cost function might not work (since there will be no information from the correlations).\nSorry for drilling with the details. Could you please confirm if this is true? I can discuss more but I\u2019ve already taken much of everyone\u2019s time. If I take more, I will include everyone as co-authors in this project. \nThanks again!", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/14"}, "14": {"author": "jmarrazola", "date": "1680017186730", "content": "So if your goal is to find the ground state of the Hamiltonian H = (n_0 + n_1 - 5)^2, then it seems to me like your original approach to define its expectation value by expanding the operator is correct.\nWhy did you think your code was not working? Note that the state that minimizes the expectation value of this Hamiltonian may not be one for which \\langle n_0\\rangle + \\langle n_1\\rangle = 5.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/15"}, "15": {"author": "Pranav_Chandarana", "date": "1680023292071", "content": "My goal is to design a VQA to find optimal solutions for H.\nIn QAOA, the solution information is encoded in the GS of H. But if I do <n_0> + <n_1>=5, the information of the solution will be encoded in the  <n_0> and <n_1> instead of the state. So I don\u2019t need to find the optimal state anymore. So, finding optimal mean photons numbers can be used as an alternative cost function instead of an expectation value to retrieve the solution in a VQA.\nRegarding the working part, by working, I mean, it is not reaching the ground state by using full expectation value as a cost function.\nSummary:\nThere are two algorithms 1) QAOA and 2) let\u2019s call it CAOA ( random name where we minimize the <n_0> + <n_1> values as a cost function. ).\nIn both algorithms, the circuit ansatz is the same. The only difference is in the cost function that we minimize.\nIn QAOA, the solution information will be encoded in the GS of the H. So we minimize the expected value of H.\nOn the other hand, in CAOA, the solution information will not be encoded in the GS but it can be retrieved by minimizing the mean photon numbers of the modes.\nQAOA is not reaching the GS, but by using CAOA, we can solve the problem.  Just wanted to clarify if I am doing everything right or not in the case of CAOA. In the sense that algorithm-wise there is not any problem.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/16"}, "16": {"author": "isaacdevlugt", "date": "1680532439345", "content": "Hey @Pranav_Chandarana! Just want to check in and see if there are any more concerns or questions here. Is your code working as expected?", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/17"}, "17": {"author": "Pranav_Chandarana", "date": "1680533236291", "content": "Hello @isaacdevlugt. More or less yes. I think I can ask (if I have something) in a separate discussion topic if you want to close this discussion. Thanks!1", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/18"}, "18": {"author": "isaacdevlugt", "date": "1680536219174", "content": "Awesome! Glad we could help!", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/19"}, "19": {"author": "Pranav_Chandarana", "date": "1677659255403", "content": "Hello! @CatalinaAlbornoz. I use tapes just to find gradients in a TensorFlow setup (I wanted to use Adam optimizer). We can also use scipy optimizers if needed.\nAs the code is a little long, it is much easy to make a google collab so I have done it.\nHere is the link 5\nThe energies might not be the same but as we are finding the minimum of the H_pHp, we should get 0 ( as QAOA should land into any values of n_0n0 and n_1n1 that sum to 5. )\nI have used p^2p2 as a mixer and made some changes in the code so that it is easy. Hence, it might now replicate exactly but the question is:\nWhy the optimization does not converge to 0 if the \u201cexpval2()\u201d is a correct function?", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/20"}, "20": {"author": "Pranav_Chandarana", "date": "1679304440365", "content": "Hello @CatalinaAlbornoz. Thanks for the detailed explanation. I agree with all the points. In the meantime, I wrote another similar code (not the same) that solves the problem. In this case, instead of finding the expectation value of H_pHp, I find the mean photon number of modes n_0n0 and n_1n1 at each step and put the values in the function (n_0 + n_1 - 5)^2(n0+n1\u22125)2. This way, I was able to solve the problem. But, I don\u2019t know if this is the right way or not.\nEssentially, a variational quantum algorithm needs to have an output from which we can decode the solution. This seems to be true in this case since we can find optimal circuit evolution for which the mean photon number information will give the solution.\nThe problem however is that since the mean photon number is essentially <n_i><ni>, the function that QAOA evaluates at each iteration is not exactly <H_p><Hp>. Since  <(n_0 + n_1 - 5)^2> \\neq (<n_0> + <n_1> - 5)^2>  <(n0+n1\u22125)2>\u2260(<n0>+<n1>\u22125)2> in general. The code can be found here. 2 If you see the last cell, the sum of the mean photon number does equal 5 so we solved the problem.\nThe question here is: Is this algorithm correct physics-wise? If the answer is no, then why? The algorithm is not QAOA anymore but it can be seen as a variational algorithm that can be used to solve the problem. (since all the information that we need is n_0n0 and n_1n1 should sum to 5.)\nMany thanks for the help.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/21"}, "21": {"author": "jmarrazola", "date": "1679667698623", "content": "Hi @Pranav_Chandarana,\nI don\u2019t see any issues with the approach you are following. Seems to me like you want to ensure that the sum of the mean photon numbers in both modes is equal to 5, so it\u2019s perfectly fine to use (\\langle n_0\\rangle) + \\langle n_1\\rangle - 5)^2(\u27e8n0\u27e9)+\u27e8n1\u27e9\u22125)2 as the cost function.\nThe mistake would be in the other direction \u2013 minimizing  \\langle (n_0 + n_1 -5)^2 \\rangle\u27e8(n0+n1\u22125)2\u27e9 may not give you a circuit where the sum of mean photon numbers is equal to 5, precisely for the reasons you are outlining.\nHope that helps!2", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/22"}, "22": {"author": "Pranav_Chandarana", "date": "1679669833731", "content": "Hello @jmarrazola, Thanks for the input. My goal is to extract the solution from the parameterized unitary.\nI wanted to clarify that I am just doing QAOA with number states. So end goal was to get state any one of the possible ground states of the H_pHp with high probability. Seems like that\u2019s hard to do. So instead of extracting the solution from the end state (usual QAOA), This cost function will extract information from the mean photon number (because for instance, <n_0>,<n_1><n0>,<n1>= 0,5 will not mean that state  |0,5> has high success probability in general). I guess this algorithm can be \u201csold\u201d as a VQA since the goal of any VQA is to successfully encode and decode the problem with a parameterized unitary, which seems to be the case here.\nThis will work for \u201cclassical\u201d Hamiltonians (def: the solutions are pure number states (analog to classical Hamiltonians in qubits where its bitstrings)). If we go for a quantum Hamiltonian, this cost function might not work (since there will be no information from the correlations).\nSorry for drilling with the details. Could you please confirm if this is true? I can discuss more but I\u2019ve already taken much of everyone\u2019s time. If I take more, I will include everyone as co-authors in this project. \nThanks again!", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/23"}, "23": {"author": "jmarrazola", "date": "1680017186730", "content": "So if your goal is to find the ground state of the Hamiltonian H = (n_0 + n_1 - 5)^2H=(n0+n1\u22125)2, then it seems to me like your original approach to define its expectation value by expanding the operator is correct.\nWhy did you think your code was not working? Note that the state that minimizes the expectation value of this Hamiltonian may not be one for which \\langle n_0\\rangle + \\langle n_1\\rangle = 5\u27e8n0\u27e9+\u27e8n1\u27e9=5.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/24"}, "24": {"author": "Pranav_Chandarana", "date": "1680023292071", "content": "My goal is to design a VQA to find optimal solutions for HH.\nIn QAOA, the solution information is encoded in the GS of HH. But if I do <n_0> + <n_1>=5<n0>+<n1>=5, the information of the solution will be encoded in the  <n_0><n0> and <n_1><n1> instead of the state. So I don\u2019t need to find the optimal state anymore. So, finding optimal mean photons numbers can be used as an alternative cost function instead of an expectation value to retrieve the solution in a VQA.\nRegarding the working part, by working, I mean, it is not reaching the ground state by using full expectation value as a cost function.\nSummary:\nThere are two algorithms 1) QAOA and 2) let\u2019s call it CAOA ( random name where we minimize the <n_0> + <n_1><n0>+<n1> values as a cost function. ).\nIn both algorithms, the circuit ansatz is the same. The only difference is in the cost function that we minimize.\nIn QAOA, the solution information will be encoded in the GS of the HH. So we minimize the expected value of HH.\nOn the other hand, in CAOA, the solution information will not be encoded in the GS but it can be retrieved by minimizing the mean photon numbers of the modes.\nQAOA is not reaching the GS, but by using CAOA, we can solve the problem.  Just wanted to clarify if I am doing everything right or not in the case of CAOA. In the sense that algorithm-wise there is not any problem.", "link": "https://discuss.pennylane.ai//t/calculating-expectation-values-in-strawberryfields/2590/25"}}