{"question": "\nI am getting Type error of invalid parameter in base sampler module. From what I know sampler is constructor and doesn't take any parameter values, on the qisit.org tutorial of svm they have even said it gets constructed by default.\nhere is my code :\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\nfrom qiskit import Aer\nfrom qiskit.circuit.library import ZZFeatureMap\nfrom qiskit_machine_learning.kernels import FidelityQuantumKernel\nfrom qiskit.algorithms.state_fidelities import ComputeUncompute\nfrom qiskit.primitives import Sampler\nfrom qiskit.utils import QuantumInstance\nfrom qiskit_machine_learning.algorithms import QSVC\n\ndata=pd.read_csv('train.csv')\nX = data.loc[1:1000,[\"marital\",\"balance\",\"loan\"]].values\nY = data.iloc[:1000,-1].values\nfor i in range(0,1000):\n    if Y[i]=='yes':\n       Y[i]='1'\n    else:\n        Y[i]='0'\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y)\ndata_feature_map = ZZFeatureMap(feature_dimension=3, reps=2,entanglement='linear' )\nsampler = Sampler()\nfidelity = ComputeUncompute(sampler=sampler)\ndata_kernel = FidelityQuantumKernel(feature_map=data_feature_map,fidelity=fidelity)\nqsvc = QSVC(quantum_kernel=data_kernel)\nqsvc.fit(x_train, y_train)\nqsvc_score = QSVC.score(x_test, y_test)\n\n\n\nprint(f\"Callable kernel classification test score: {qsvc_score}\")\n\nand here is my error :\n      File \"C:\\Users\\Dell\\Desktop\\SEM Project\\qsvm.py\", line 30, in <module>\n    qsvc.fit(x_train, y_train)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\sklearn\\svm\\_base.py\", line 251, in fit\n    fit(X, y, sample_weight, solver_type, kernel, random_seed=seed)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\sklearn\\svm\\_base.py\", line 314, in _dense_fit\n    X = self._compute_kernel(X)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\sklearn\\svm\\_base.py\", line 512, in _compute_kernel\n    kernel = self.kernel(X, self.__Xfit)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\qiskit_machine_learning\\kernels\\fidelity_quantum_kernel.py\", line 121, in evaluate\n    kernel_matrix = self._get_symmetric_kernel_matrix(\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\qiskit_machine_learning\\kernels\\fidelity_quantum_kernel.py\", line 212, in _get_symmetric_kernel_matrix       \n    kernel_entries = self._get_kernel_entries(left_parameters, right_parameters)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\qiskit_machine_learning\\kernels\\fidelity_quantum_kernel.py\", line 234, in _get_kernel_entries\n    kernel_entries = np.real(job.result().fidelities)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\qiskit\\primitives\\primitive_job.py\", line 50, in result\n    return self._future.result()\n  File \"C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python310\\lib\\concurrent\\futures\\_base.py\", line 439, in result\n    return self.__get_result()\n  File \"C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python310\\lib\\concurrent\\futures\\_base.py\", line 391, in __get_result\n    raise self._exception\n  File \"C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python310\\lib\\concurrent\\futures\\thread.py\", line 58, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\qiskit\\algorithms\\state_fidelities\\compute_uncompute.py\", line 141, in _run\n    job = self._sampler.run(circuits=circuits, parameter_values=values, **opts.__dict__)\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\qiskit\\primitives\\base\\base_sampler.py\", line 172, in run\n    parameter_values = self._validate_parameter_values(\n  File \"C:\\Users\\Dell\\Desktop\\SEM Project\\venv\\lib\\site-packages\\qiskit\\primitives\\base\\base_primitive.py\", line 108, in _validate_parameter_values\n    raise TypeError(\"Invalid parameter values, expected Sequence[Sequence[float]].\")\nTypeError: Invalid parameter values, expected Sequence[Sequence[float]].\n\n", "answers": [], "comments": ["What qiskit modules are you using and what are versions? You can get with from qiskit import __qiskit_version__, please add them to your question :)", "I'd double check that you have numpy array as x_train and y_train and the data inside them are only numerical. Looks like you have some non-numerical data.", "@Anton Dekusar yeah that was the case. Thanks for helping out"], "link": "https://quantumcomputing.stackexchange.com//questions/29230/error-in-implementing-quantum-svm?r=SearchResults"}