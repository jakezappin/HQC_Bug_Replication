{"question": "\nI have written the following program in jupyter:\nfrom qiskit import *\nfrom qiskit import plot_histogram, matplotlib\n\ncircuit = QuantumCircuit(16,16) #Making a circuit with 16 qubits\nqr = QuantumRegister(16)\ncr = ClassicalRegister(16)\nfor i in range(16):\n    circuit.h(i)\n    circuit.measure(i,i)\n\nsimulator = Aer.get_backend('qasm_simulator')\nresult = execute(circuit, backend = simulator, shots = 200).result()\ncounts = result.get_counts()\nprint(counts)\n\nand the output is of the form :\n{'0111001100011110': 1, '0101000101101001': 1, '1100010111000100': 1, \n'0111111110101110': 1,..., '0110110010010110': 1}\n\nIs there any way that what I get as an output is the measurement only (e.g. '0111001100011110')  without getting the times the measurement has appeared (: 1)?\n", "answers": ["\nYou can take only the keys of the returned dictionary:\nmeasurements = set(counts.keys())\nprint(measurements)\n\nIf you want only one random key, you can just take the first one in the set:\nrandom_key = next(iter(a))\n\nor store all the keys in a list and take a random one from here:\nfrom random import randint\nmeasurements_list = list(measurements)\nrandom_key = measurement_list[randint(0, len(measurement_list)-1)]\n\n"], "comments": ["A bit of a side note: circuit.h(qr); circuit.measure(qr, cr) is equivalent to that for-loop.", "Thank you. That is exactly what I needed!"], "link": "https://quantumcomputing.stackexchange.com//questions/20978/return-only-the-measurements-of-a-circuit/20980?r=SearchResults#20980"}