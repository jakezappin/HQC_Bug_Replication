{"question": "\nI am trying to play with NoiseModel of qiskit, and I noticed that error on id gate is not giving any error results, while error on the measurement (or other gates) does give an error:\ndef get_noise_model(p_err):\n    error_gate1 = pauli_error([(\"X\", p_err / 2), (\"Z\", p_err / 2), (\"I\", 1 - p_err)])\n    noise_model = NoiseModel()\n    noise_model.add_all_qubit_quantum_error(error_gate1, \"id\")\n    print(error_gate1)\n    return noise_model\n\nqc = QuantumCircuit(2, 2)\nqc.id(0)\nqc.measure([0, 1], [0, 1])\n\nresults = (execute(qc,Aer.get_backend(\"aer_simulator\"),noise_model=get_noise_model(0.2),shots=2048).result().get_counts())\n\nplot_histogram(results)\n\nHistogram:\n\nAnd changing to :\nnoise_model.add_all_qubit_quantum_error(error_gate1, \"measure\")\n\ngives that:\n\nWhy is that happening? If I perform noisy id gate\nimports needed:\nfrom qiskit.visualization import plot_histogram\nfrom qiskit.providers.aer.noise import NoiseModel\nfrom qiskit.providers.aer.noise.errors import pauli_error\nfrom qiskit import QuantumCircuit, execute , Aer\n\n", "answers": ["\nBy default execute function sets optimization_level value to 11 which leads to some optimizations such as removing ID gates.\nJust set optimization_level to 00 to override this behavior:\nresults = (execute(qc,Aer.get_backend(\"aer_simulator\"),noise_model=get_noise_model(0.2),optimization_level=0,shots=2048).result().get_counts())\n\nThe result should look like:\n\n"], "comments": ["Thank you so much! It worked"], "link": "https://quantumcomputing.stackexchange.com//questions/23771/error-model-on-id-gate-is-not-giving-any-error?r=SearchResults"}