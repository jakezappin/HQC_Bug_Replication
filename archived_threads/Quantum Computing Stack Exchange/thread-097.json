{"question": "\nSo I have successfully make simple input of n-bit classical register with just using 1-qubit register.\nHere is my program / cell code:\nfrom qiskit import QuantumCircuit\nfrom qiskit.providers.aer import AerSimulator\nfrom qiskit.visualization import plot_histogram\n\ndef toBin(val,size=8): return bin(val)[2:].rjust(size,'0') # return binary string of `val` with fixed size 8 (default)\n\ndef indexOf(s, ch): return [i for i, ltr in enumerate(s[::-1]) if ltr == ch] # return all index of `ch` in reversed `s` string.\n\n# the `value` must be unsigned integer.\nvalue = 123 #@param {\"type\":\"integer\"}\n\n# the 'bitSize' of classical register. (must be unsigned integer)\nbitSize = 8 #@param {\"type\":\"integer\"}\n\nwhile value > (2**bitSize)-1: bitSize +=1 # if `value` is overflow, keep increment bitSize\n\nqc =  QuantumCircuit(1, bitSize) # 1-bit quantum register, 8-bit classical register\n\nbinString = toBin(value, bitSize) # will convert 123 to `01111011` (binary string)\n\n# auto circuit\nqc.reset(0)\nfor i in indexOf(binString,'0'): qc.measure(0,i)\nqc.x(0)\nfor i in indexOf(binString,'1'): qc.measure(0,i)\nqc.reset(0)\n\ndisplay(qc.draw(output='mpl'))\ndisplay(plot_histogram(AerSimulator().run(qc).result().get_counts()))\n\nOutput:\n\nSo basically my program will set value of the n-bit classical register from 1-qubit register only. The problem is as you see, the circuit is too crowd. I expect I can abstract/encapsulate it with black box. This is not the problem if the classical register bit size is 8, how about 64-bit classical register? I can't imagine the crowd of quantum logic gates.\nI expect the circuit display will looks like this,\n\nwhere myCustomGate contain #auto circuit that I commented in my code. So now the circuit will not crowd anymore.\nBtw, I draw the circuit with mpl aka matplotlib.\nSo, can qiskit do it?\nYou can run the code in Google Colab: enter link description here\n", "answers": ["\nInorder to Encapsulate set of gate operations and Measurements we generally use [qiskit.circuit.QuantumCircuit.to_instruction][1] .\nmy_inst = qc.to_instruction()\nnew_circ = QuantumCircuit(1,8)\nnew_circ.append(my_inst,[0],range(8))\n\n# display(qc.draw(output='mpl'))\ndisplay(new_circ.draw(output='mpl'))\n\nEncapsulated Output using to_instruction:\n[![enter image description here][2]][2]\nHope this helps!\n[1]: https://qiskit.org/documentation/stable/0.19/stubs/qiskit.circuit.QuantumCircuit.to_instruction.html\n[2]: https://i.stack.imgur.com/PVej7.png\n"], "comments": ["This is okay, but why the circuit drawing tells explicitly the bus of classical register with 8 lines? Why not just one line bus?"], "link": "https://quantumcomputing.stackexchange.com//questions/28572/how-to-encapsulate-the-set-of-quantum-gates-qiskit-circuit-display-abstraction?r=SearchResults"}