{"question": "\nI have a simple circuit which I run for 10 shots:\nfrom qiskit.quantum_info import Statevector\n\nfrom qiskit import Aer, execute, QuantumCircuit\nfrom qiskit.quantum_info import Statevector\n\nbackend = Aer.get_backend(\"statevector_simulator\")\nqc2 = QuantumCircuit(2, 1)\nqc2.h(0)\nqc2.measure([0], [0])\nprint(qc2)\nresult = execute(qc2, backend=backend, shots=10).result()\n\n\nNow, when I print the state vector with:\nprint('State after measurement:', result.get_statevector())\n\nThe output is:\n\nState after measurement: Statevector([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],\ndims=(2, 2))\n\nThe question is that to which of the 10 shots does this state vector belong to? Depending on the measurement, the state vector should be different - when q0 is measured as 0 and when q0 is 1.\nAnd how do I get the statevector for each shot?\n", "answers": ["\nYou can use save_statevector simulator instruction.\nTo save the statevector for each shot, set pershot value to True:\nfrom qiskit import Aer, execute, QuantumCircuit\nfrom qiskit.providers.aer.library import save_statevector\n\nbackend = Aer.get_backend(\"statevector_simulator\")\nqc2 = QuantumCircuit(2, 1)\nqc2.h(0)\nqc2.measure([0], [0])\n\nqc2.save_statevector(label = 'test', pershot = True)\nresult = execute(qc2, backend = backend, shots = 10).result()\n\nprint(result.data(0)['test'])\n\n", "\nTo your first question, you see the statevector of the last shot performed. The answer by Egretta Thula will get you the statevecor for each shot. Just to make sure we are on the same page, it is crucial if you save your statevector before or after the measurement. After the measurement the superposition collapses and your staevector is either |0\u27e9 or |1\u27e9.\nIf you place save_statevecor() before the measurement, it will be the same for each shot, since H-Gate brings your system into state 1(\u221a2)(|0\u27e9+|1\u27e9).\nYou can also get the readouts for each shot with get_memory() method of the result. For that, you need to set the option memory=True.\nresult = backend.run(qc2, shots=10, memory=True).result()\nmemory = result.get_memory(qc2)\nprint(memory)\n\n"], "comments": [], "link": "https://quantumcomputing.stackexchange.com//questions/27088/qiskit-how-to-get-statevector-for-each-shot"}