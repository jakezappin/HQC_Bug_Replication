{"question": "\nI am playing around with adding noise to quantum circuit simulation using qiskit_aer.noise.NoiseModel(). My code creates a quantum circuit and simulates it with noise, as in this very simple example:\nimport matplotlib.pyplot as plt\nimport qiskit\nfrom qiskit import QuantumCircuit, transpile\nfrom qiskit_aer import AerSimulator\nfrom qiskit.tools.visualization import plot_histogram\nfrom qiskit_aer.noise import (NoiseModel, pauli_error, depolarizing_error)\n\n# make circuit\nmy_qubits = [0];\ncirc = QuantumCircuit(len(my_qubits));\ncirc.x(my_qubits);\ncirc.measure_all();\n\n# simulate with noise\nnoise_prob = 0.2;\nnoise_model = NoiseModel();\nerror = pauli_error([('X', noise_prob), ('I', 1 - noise_prob)])\nnoise_model.add_quantum_error(error, ['X'], my_qubits);\nsim = AerSimulator(noise_model=noise_model);\n\n# transpile and run\ncirc_trans = transpile(circ, sim);\nresult = sim.run(circ_trans).result();\ncounts = result.get_counts(circ_trans)\nplot_histogram(counts);\nplt.show();\n\nIn this example, the noise is in the bit-flip channel and the effect of the noise can be seen in the qubit measurement histogram.\nNow, I would like to make a similar routine with the noise in the depolarizing channel, i.e. call depolarizing_error instead of pauli_error. But when I do this, I can't think of a simple circuit where the measurement histogram is different with noise included than it is without noise. Generally, I think the problem is that as shown in Nielsen & Chuang Fig. 8.11, the depolarizing channel shrinks the qubit along all axes simultaneously, so it doesn't affect the measurement probabilities.\nThe depolarizing channel does make the state more mixed, so that would be the most obvious way to see its effects. I thought of calculating the purity of the density matrix after it evolves under the noisy circuit, but apparently AerSimulator does not calculate a final state vector.\nSo, is there a roundabout way to determine the purity of the final state vector using AerSimulator? Alternatively, is there a way that the effects of the depolarizing channel can be revealed in the measurement probabilities alone?\n", "answers": ["\nYou should start noticing the effect of depolarizing error with the current circuit. However, the issue with your code is that you are using X in uppercase in this line:\nnoise_model.add_quantum_error(error, ['X'], my_qubits)\n\nYou should use lowercase x instead\nnoise_model.add_quantum_error(error, ['x'], my_qubits)\n\nThe result:\n\nAnd if you start increasing the circuit depth:\ncirc = QuantumCircuit(len(my_qubits))\nfor n in range(100):\n    circ.x(my_qubits)\n    circ.barrier()\ncirc.measure_all()\n\nthe noise effect will increase (depending on depolarizing error parameter)\n\n"], "comments": ["Thanks for catching my mistake. Now I am getting the results I expect."], "link": "https://quantumcomputing.stackexchange.com//questions/33247/how-to-see-the-effects-of-the-depolarizing-channel-in-qiskit/33257?r=SearchResults#33257"}