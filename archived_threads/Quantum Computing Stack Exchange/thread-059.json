{"question": "\nQiskit Aqua raises the following exception:\nImportError: dlopen: cannot load any more object with static TLS\n\nI don't understand what might be causing this. I currently have a Ubuntu 14.04 Linux distribution and am using Anaconda Navigator, which I have downloaded with Conda. See code and full error log below.\n\nCode:\nfrom qiskit import *\nfrom numpy import *\nimport qiskit as q\nfrom math import pi\nimport numpy as np\nfrom numpy.fft import fft\nimport scipy.fftpack\nimport matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt1\nimport matplotlib.pyplot as plt2\nimport matplotlib.pyplot as circuit\nfrom qiskit.quantum_info import Statevector\nfrom qiskit.quantum_info import DensityMatrix\nfrom qiskit.visualization import plot_bloch_multivector, plot_histogram\nfrom qiskit.visualization import plot_state_city\nfrom typing import List, Union\nfrom qiskit.quantum_info import Pauli\nimport time\nfrom itertools import combinations\nfrom qiskit.compiler import assemble\nfrom qiskit.test.mock import FakeVigo\nfrom qiskit.circuit import Parameter\nfrom qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit\nfrom qiskit.tools.visualization import circuit_drawer\nfrom matplotlib import style \nfrom qiskit import execute, BasicAer\nfrom qiskit.compiler import transpile\nfrom qiskit.quantum_info.operators import Operator, Pauli\nfrom qiskit.quantum_info import process_fidelity\nfrom qiskit.extensions import RXGate, XGate, CXGate\nfrom qiskit import QuantumCircuit\nfrom qiskit.circuit import ParameterExpression\nfrom typing import Union, Set, List\nimport numpy as np\n\nfrom qiskit.circuit import ParameterExpression\nfrom qiskit.aqua.operators import PrimitiveOp\n\n\n\n%matplotlib inline\n#%matplotlib tk\n\n\n#style.use(\"classic\")\nCOLOR = 'white'\nCOLOR1 = 'black'\nplt.rcParams['text.color'] = COLOR1\nplt.rcParams['axes.labelcolor'] = COLOR\nplt.rcParams['xtick.color'] = COLOR\nplt.rcParams['ytick.color'] = COLOR\n\nplt1.rcParams['text.color'] = COLOR1\nplt1.rcParams['axes.labelcolor'] = COLOR\nplt1.rcParams['xtick.color'] = COLOR\nplt1.rcParams['ytick.color'] = COLOR\n\nplt2.rcParams['text.color'] = COLOR1\nplt2.rcParams['axes.labelcolor'] = COLOR\nplt2.rcParams['xtick.color'] = COLOR\nplt2.rcParams['ytick.color'] = COLOR\n\n\n#style.use(\"seaborn-whitegrid\")\n\n\n\nplt.rc('legend',fontsize=20) # using a size in points\nplt1.rc('legend',fontsize=20) # using a size in points\nplt2.rc('legend',fontsize=20) # using a size in points\n\n#Rotation Parameters:\n#N = .5\n\nError:\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-4-f30f52024441> in <module>\n     35 \n     36 from qiskit.circuit import ParameterExpression\n---> 37 from qiskit.aqua.operators import PrimitiveOp\n     38 \n     39 \n\n~/anaconda3/lib/python3.8/site-packages/qiskit/aqua/__init__.py in <module>\n     74 from .missing_optional_library_error import MissingOptionalLibraryError\n     75 from .aqua_globals import aqua_globals\n---> 76 from .quantum_instance import QuantumInstance\n     77 from .algorithms import QuantumAlgorithm\n     78 from ._logging import (QiskitLogDomains,\n\n~/anaconda3/lib/python3.8/site-packages/qiskit/aqua/quantum_instance.py in <module>\n     32 \n     33 from .aqua_error import AquaError\n---> 34 from .utils.backend_utils import (is_ibmq_provider,\n     35                                   is_statevector_backend,\n     36                                   is_simulator_backend,\n\n~/anaconda3/lib/python3.8/site-packages/qiskit/aqua/utils/__init__.py in <module>\n     58 from .subsystem import get_subsystem_density_matrix, get_subsystems_counts\n     59 from .entangler_map import get_entangler_map, validate_entangler_map\n---> 60 from .dataset_helper import (get_feature_dimension, get_num_classes,\n     61                              split_dataset_to_data_and_labels,\n     62                              map_label_to_class_name, reduce_dim_to_via_pca)\n\n~/anaconda3/lib/python3.8/site-packages/qiskit/aqua/utils/dataset_helper.py in <module>\n     16 from copy import deepcopy\n     17 import numpy as np\n---> 18 from sklearn.decomposition import PCA\n     19 \n     20 \n\n~/anaconda3/lib/python3.8/site-packages/sklearn/__init__.py in <module>\n     79     from . import __check_build  # noqa: F401\n     80     from .base import clone\n---> 81     from .utils._show_versions import show_versions\n     82 \n     83     __all__ = ['calibration', 'cluster', 'covariance', 'cross_decomposition',\n\n~/anaconda3/lib/python3.8/site-packages/sklearn/utils/_show_versions.py in <module>\n     10 import importlib\n     11 \n---> 12 from ._openmp_helpers import _openmp_parallelism_enabled\n     13 \n     14 \n\nImportError: dlopen: cannot load any more object with static TLS\n\n", "answers": ["\n@Adam Zalcman answer explains well why the issue happens.\nAccording to tensorforce/issues/303:\n\nLinux has a static limit on the number of shared libraries with TLS (Thread-Local Storage, to support C++'s __thread storage class) that can be loaded into a process. Gym itself doesn't use shared libraries, but OpenGL and Tensorflow both have several libraries. The limit is small, like 14 or 32 depending on OS version (it's the version of glibc that matters).\n\nThe issue was solved by upgrading from Ubuntu 14 to Ubuntu 16.\nThis could potentially solve the issue as upgrading the OS will likely also upgrade the glibc shipped with the OS. It seems like the version of glibc shipped with Ubuntu 16 increased the \"static limit on the number of shared libraries with TLS\".\n", "\nHypothesis\nOpenMP uses static Thread Local Storage which requires slots in a data structure called Dynamic Thread Vector. Unfortunately, DTV is allocated based on the needs of the libraries statically linked into the executable. The needs of dynamically loaded libraries are served from a fixed surplus of slots on the first come first served basis. If a library loaded using dlopen uses static TLS but no more DTV slots are available then dlopen fails the way you see.\nSee also here and here.\nPotential workaround\nYou may be able to work around the problem by forcing OpenMP to be loaded earlier, when DTV slots are still available. First, find out what OpenMP library you are using and where it is. A common OpenMP library is GOMP and the file is usually called libgomp.so etc. Next, set the LD_PRELOAD environment variable to its absolute path using\nexport LD_PRELOAD=\"/absolute/path/to/libgomp.so\"\n\nand then re-run your code.\n"], "comments": ["This issue seems to be related: github.com/scikit-learn/scikit-learn/issues/14485 maybe it helps", "Other related issues: github.com/pytorch/pytorch/issues/2575 and github.com/Kaggle/docker-python/issues/206 . Have you tried to move up the qiskit.aqua import? As a side note, a lot of your imports are either discouraged, duplicated or at least unordered. Cleaning a little bit those might help as well.", "@AdrienSuau I've tried to move up the qiskit.aqua import but it didn't help. I will be cleaning up my code, although I do have another code with all these imports (without the qiskit.aqua one) that works, so hopefully they're not causing a problem. Thank you for your help though, I'll check the answer submitted and hopefully it'll work.", "Going to do so and hopefully things will go well. Thank you for all the help.", "Keep us updated, and if it solved your issue remember to check the answer as the accepted one. It might help others with the same issue in the future.", "Just wanted to update you that it worked! Thanks for all the help.", "Unfortunately, this workaround hasn't worked in my case. I'm not really sure how to go about this from here now.", "Next, I would try setting LD_PRELOAD not to a path, but bare filename (i.e. no slashes in the name). IIRC, the shared object cache treats different paths as different objects, so dlopen may fail to find the preloaded OpenMP library if it was loaded under a different name than the one used in dlopen call. Note that if this prevents the dynamic linker from finding the library then you may also need to include the directory where OpenMP library resides in the LD_LIBRARY_PATH variable.", "If the above fails, upgrading to Ubuntu 16 should help, see @Adrien Suau's answer below.", "I'm going to upgrade to Ubuntu 16 as recommended. Hopefully that will work. Thank you for all the help.", "Good luck! Please do share whether it fixed the problem for you. This might help others who stumble on your question searching for a solution to the same issue.", "It thankfully did fix the problem! Thank you for all the help."], "link": "https://quantumcomputing.stackexchange.com//questions/15605/error-when-importing-from-qiskit-aqua?r=SearchResults"}