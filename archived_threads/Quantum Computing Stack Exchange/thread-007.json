{"question": "\nIf one has two qubits in arbitrary stats and wishes to apply a controlled version of some global phase gate P(\u03c6)=(ei\u03c600ei\u03c6)P(\u03c6)=(ei\u03c600ei\u03c6) one should obtain:\n|\u03c80\u27e9|\u03c81\u27e9=(c00|0\u27e9+c01|1\u27e9)(c10|0\u27e9+c11|1\u27e9)\u2212\u2192\u2212CP|\u03c80\u27e9|\u03c81\u27e9=(c00|0\u27e9+c01|1\u27e9)(c10|0\u27e9+c11|1\u27e9)\u2192CP\n\u2212\u2192\u2212CPc00|0\u27e9(c10|0\u27e9+c11|1\u27e9)+c01|1\u27e9(c10ei\u03c6|0\u27e9+c11ei\u03c6|1\u27e9),\u2192CPc00|0\u27e9(c10|0\u27e9+c11|1\u27e9)+c01|1\u27e9(c10ei\u03c6|0\u27e9+c11ei\u03c6|1\u27e9),\nThis example shows that in contrast to global phase gate PP which doesn't produce any measurable changes in a qubit state, the controlled version of it (CPCP) makes measurable changes in the state of a system of qubits. So it is ok if PP is ignored, but it is not ok if CPCP is ignored (what is happening in the presented code).\nHere is a code where I use qiskit.aqua.operators.common.evolution_instruction method, where because of (how I understand) ignoring the global phase gate, the CPCP gate wasn't obtained (the print(qc.qasm()) command shows no gate is added to the circuit):\nimport numpy as np\nfrom qiskit import *\nfrom qiskit.aqua.operators import WeightedPauliOperator\nfrom qiskit.aqua.operators.common import evolution_instruction\n\nphase = np.pi\npauli_dict = {'paulis': [{\"coeff\": {\"imag\": 0.0, \"real\": phase}, \"label\": \"I\"}]}\nidentity = WeightedPauliOperator.from_dict(pauli_dict)\n\npauli_list = identity.reorder_paulis()\ninstruction = evolution_instruction(pauli_list, evo_time=1, num_time_slices=1, controlled=True)\n\nq = QuantumRegister(2)\nqc_temp = QuantumCircuit(q)\nqc_temp.append(instruction, q)\nqc = qc_temp.decompose()\n\nprint(qc.qasm())\n\nPossible consequences: when I tried to implement IPEA algorithm for H=(E100E2)H=(E100E2) Hamiltonian I was estimating E2\u2212E1E2\u2212E1 instead of estimating E2E2 eigenvalue. This problem was reported here. Problems may arise also for other quantum algos that use PEA as a subroutine (like HHL algo).\nIs this a problem/bug? Are there alternatives to qiskit evolution_instruction method that don't ignore phase gates (or Pauli I operator)?\n", "answers": ["\nIt seems that this is not a problem/bug. In case the global phase gate PP is applied in non-controlled form, final matrix for two qubits (PP is acting on second qubit) is\nI\u2297P=(POOP)=ei\u03d5II\u2297P=(POOP)=ei\u03d5I\nSo, PP acts as global phase gate and the phase ei\u03d5ei\u03d5 can be ignored.\nHowever, matrix of controlled PP is as follows\nCP=(IOOP)CP=(IOOP)\nHence, CPCP is no longer global phase gate but it prepares entangled state.\n", "\nWhat does the print(qc.qasm()) yield for you?\nHere is what I get:\nOPENQASM 2.0;\ninclude \"qelib1.inc\";\nqreg q2[2];\nControlled-Evolution^1 q2[0],q2[1];\n\n", "\nI just copied and pasted your code above, and that is the output I get from the print() statement. What version of qiskit do you have?\nfrom qiskit import qiskit_version\nprint(qiskit_version)\n\n"], "comments": ["Thanks for your answer Martin :). My problem here is not about the uselessness of P gate and is not about the fact that CP isn't a global phase gate. You are right about CP and P, but my question is about qiskit's evolution_instruction method that doesn't create CP gate, when it should be created.", "@DavitKhachatryan: Sorry, I probably did not understand your question correctly.", "my output is:  OPENQASM 2.0; include \"qelib1.inc\"; qreg q2[2]; barrier q2[0];", "Did you do qc = qc_temp.decompose() part? It should be done how I understand before adding to the circuit in order to decompose \"evolution\" or \"Controlled-Evolution\" to qc gates", "maybe the problem is in qc = qc_temp.decompose()? This decompose method is used in WeightedPauliOperator.evolve method for the same purpose (for obtaining gates from \"evolutions\")", "{'qiskit-terra': '0.11.0',  'qiskit-aer': '0.3.4',  'qiskit-ignis': '0.2.0',  'qiskit-ibmq-provider': '0.4.4',  'qiskit-aqua': '0.6.1',  'qiskit': '0.14.0'}", "Also for example, when I am changing 'I' to 'Z' in pauli_dict I am obtaining gates, not \"evolutions\".", "You might try installing the latest development code which may explain the difference between your results and mine. Here's my version: {   'qiskit': '0.14.0',     'qiskit-aer': '0.4.0',     'qiskit-aqua': '0.7.0.dev0+6b00bb9',     'qiskit-ibmq-provider': '0.4.6rc1',     'qiskit-ignis': '0.3.0.dev0+59162f7',     'qiskit-terra': '0.12.0.dev0+8700dd2'}", "Thanks for your time Jack. I will try to work with qiskit's master branch and see the difference :)", "Hi Jack, I tried to run the code with the latest development code and obtained the same thing that you have obtained with Controlled-Evolution^1. Now I am trying to understand what is Controlled-Evolution^1 and why it is not decomposed to a set of gates."], "link": "https://quantumcomputing.stackexchange.com//questions/9389/pauli-i-in-eoh-procedure-doesnt-become-a-global-phase-gate-in-qiskit-evolution?r=SearchResults"}