{"question": "\nI'm trying to simulate the effect of a coherent unitary Z rotation at an arbitrary angle of a single qubit on the fidelity of a quantum circuit. I am using the qiskit Aer noisy simulator. More specifically, my goal is to quantify the loss of fidelity associated with the fact that when attempting to apply any gate with a unitary UU, I apply instead the gate\nV=R\u2020i,z(\u03f5)URi,z(\u03f5)V=R\u2020i,z(\u03f5)URi,z(\u03f5)\nwhere ii is an index of a single qubit.\nAs a sanity check, I am trying the single qubit case first, where I expect this error to not have any effect, since the initial state of the qubit is |0\u27e9|0\u27e9 and the measurement is in the Z basis. Thus, assuming that the coherent unitary channel acts on the state as E(\u03c1)=U\u03c1U\u2020E(\u03c1)=U\u03c1U\u2020, this error should get absorbed into the preperation and measurement and not have any effect on the fidelity.\nWhen I simulate this circuit however, I find that the fidelity does go below 1 as I increase the error. It seems like the qiskit method coherent_unitary_error function from qiskit does not return a QuantumError object which has the effect of applying E(\u03c1)E(\u03c1) as defined above. Does that make sense?\nI am including here a self-contained code sample which shows this behavior. One easy way to trigger this effect on and off is to change the optimization_level parameter in line 21 of the attached code. If it is 0, then the two Hadamards don't get merged into one and we see an error. If it is 1 or larger, they get merged and no error appears. Of course, manually adding the Z rotations to the circuit does not lead to an error.\nAny ideas? Did I misunderstand how the noise model works, or is there a more fundamental issue here?\nThanks a lot in advance!!\nimport qiskit\nfrom qiskit import QuantumCircuit, transpile\nfrom qiskit.providers.aer import AerSimulator\nfrom qiskit.providers.aer.noise import NoiseModel, coherent_unitary_error\n\nepsilon = 0.1\nz_rot = qiskit.circuit.library.U1Gate(epsilon)\nz_rot_dg = qiskit.circuit.library.U1Gate(-epsilon)\n\nnoise_model = NoiseModel()\nnoise_model.add_all_qubit_quantum_error(coherent_unitary_error(z_rot), 'u2')\nnoise_model.add_all_qubit_quantum_error(coherent_unitary_error(z_rot), 'u3')\nprint(noise_model)\nnoise_sim = AerSimulator(noise_model=noise_model)\n\ncirc = QuantumCircuit(1, 1)\ncirc.h(0)\ncirc.h(0)\ncirc.measure(0, 0)\n\n# change optimization level to 1 to turn off effect of channel\nct = transpile(circ, noise_sim, optimization_level=0) \nprint(ct.draw())\nnshots=10000\njob = noise_sim.run(ct, shots=nshots)\nprint(job.result().get_counts()['0']/nshots)\n```\n\n", "answers": ["\nafter finding this:\nWhat are examples of Kraus operators describing the process of control error?\nI think I understand the issue - I incorrectly assumed that the error operator is applied to the unitary and not to the state. Once I use the definition from the link above I get the correct result, here's an example:\nimport qiskit\nfrom qiskit import QuantumCircuit, transpile\nfrom qiskit.providers.aer import AerSimulator\nfrom qiskit.providers.aer.noise import NoiseModel, coherent_unitary_error\nimport qiskit.quantum_info as qi\nfrom qiskit.visualization import array_to_latex\n\nepsilon = 0.1\n\nerr_h = QuantumCircuit(1, 1)\nerr_h.h(0)\nerr_h.p(epsilon, 0)\nerr_h.h(0)\nerr_h.p(-epsilon, 0)\n\nu_err_h = qi.Operator(err_h)\n\nnoise_model = NoiseModel()\nnoise_model.add_all_qubit_quantum_error(coherent_unitary_error(u_err_h), 'h')\nprint(noise_model)\nnoise_sim = AerSimulator(noise_model=noise_model)\n\ncirc = QuantumCircuit(1, 1)\ncirc.h(0)\ncirc.h(0)\ncirc.measure(0, 0)\n\nnshots = 10000\njob = noise_sim.run(circ, shots=nshots)\n\njob.result().get_counts()['0']/nshots\n\n"], "comments": ["The hadamards prepare the superpostion state (|0\u27e9+|1\u27e9)/\u221a2(|0\u27e9+|1\u27e9)/2\u2013\u221a, which is sensitive to ZZ rotation error.", "that's correct, but if I apply two Hadamards in a row as I did here, I expect to see only 1's in my measurement. This would be true for any kind of benchmark or characterization sequence, even when performing a single Hadamard. Also, the result shouldn't depend on the optimization level of the transpiler"], "link": "https://quantumcomputing.stackexchange.com//questions/20786/unexpected-effect-of-coherent-unitary-error-in-qiskit?r=SearchResults"}