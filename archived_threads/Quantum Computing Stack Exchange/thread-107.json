{"question": "\nI used the following code. Can anyone say what that error is about?\nfrom qiskit.aqua.circuits.gates import mct\nq = QuantumRegister(32)\nc = ClassicalRegister(11)\nqc = QuantumCircuit(q,c)\nite = 5 #number of iteration\n\n#initialization\nqc.h(q[0:11])\nqc.x(q[22])\nqc.h(q[22])\nqc.barrier()\n\nfor i in range(ite):\n#oracle part\n    ccheck(0,1,11)\n    ccheck(0,2,12)\n    ccheck(0,3,13)\n    ccheck(0,4,14)\n    ccheck(0,5,15)\n    ccheck(0,6,16)\n    ccheck(0,7,17)\n    ccheck(0,8,18)\n    ccheck(0,9,19)\n    ccheck(0,10,20)\n    qc.mct([q[11],q[12],q[13], q[14],q[15],q[16], q[17],q[18],q[19], q[20]], q[29] , [q[21], q[22], q[23], q[24], q[25], q[26], q[27], q[28]], mode='basic') \n    iccheck(0,10,20)\n    iccheck(0,9,19)\n    iccheck(0,8,18)\n    iccheck(0,7,17)\n    iccheck(0,6,16)\n    iccheck(0,5,15)\n    iccheck(0,4,14)\n    iccheck(0,3,13)\n    iccheck(0,2,12)\n    iccheck(0,1,11)\n    qc.barrier()\n#diffusion part\n    qc.h(q[0:11])\n    qc.barrier()\n    qc.x(q[0:11])\n    qc.barrier()\n    qc.h(q[10])\n    qc.mct([q[0],q[1],q[2], q[3],q[4],q[5], q[6],q[7],q[8], q[9]], q[10] , [q[21], q[22], q[23], q[24], q[25], q[26], q[27], q[28]], mode='basic')\n    qc.h(q[10])\n    qc.barrier()\n    qc.x(q[0:11])\n    qc.barrier()\n    qc.h(q[0:11])\n    qc.barrier()\n\nqc.measure(q[0:11], c[0:11])\n\nbackend = Aer.get_backend('qasm_simulator')\njob = execute(qc, backend, shots=10000)\nresult = job.result()\ncount =result.get_counts()\nprint(count)\nqc.draw(output='mpl')\n\n```\n\n", "answers": [], "comments": ["Not sure if you need to run this on Aer or not, but I tested running it on the ibmq_qasm_simulator and it did not throw an error immediately like it does when running on Aer's qasm_simulator. It has not finished running yet, but looks like it is dodging that error", "Job finished running and I received a result, so I believe it should work on ibmq_qasm_simulator", "@MatthewStypulkoski can u please post the modified code here in the comments. It will useful.", "It will look a little weird in comments since you can't manually put new lines, but I'll do my best. from qiskit import IBMQ first. Then call IBMQ.load_account(). Then set provider = IBMQ.get_provider(). Then set backend = provider.get_backend('ibmq_qasm_simulator'). After that, you should be able to call the job execution part the same way. However, you may need to lower the amount of shots you use, as I think 8192 is the max for the IBMQ devices.", "The circuit creation and everything else can stay the same, it just involves changing the backend you're retrieving", "I used IBMQ.backend('ibmq_qasm_simulator'). but there was some other error related to result and it got resolved when I changed shots from 10000 to 1000.", "Yes, that error is related to the shots being 10000. The max amount of shots allowed is 8192 I believe.", "Yes, thats right.Thanks.Its gonna take an hour or so to execute and run.", "The max shots for the Aer qasm simulator is 100000."], "link": "https://quantumcomputing.stackexchange.com//questions/8460/error-qasmsimulator-circuit-cannot-be-run-using-available-methods?r=SearchResults"}