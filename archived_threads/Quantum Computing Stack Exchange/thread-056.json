{"question": "\nI'm having trouble getting the namespace Microsoft.Quantum.MachineLearning.\nHere is an example Q# code:\nnamespace Temp {\n    open Microsoft.Quantum.Math;\n    open Microsoft.Quantum.Canon;\n    open Microsoft.Quantum.Intrinsic;\n    open Microsoft.Quantum.MachineLearning;\n\n    operation Hello () : Unit{\n        Message(\"Hello\");\n    }\n}\n\nHere is the python script which drives the code:\nimport qsharp\nfrom qsharp import Result\nimport json\nimport os\nfrom Temp import Hello\nHello.simulate()\n\nHere's the error that the VSCode terminal shows:\nPreparing Q# environment...\nfail: Microsoft.Quantum.IQSharp.Workspace[0]\n      QS6104: No namespace with the name \"Microsoft.Quantum.MachineLearning\" exists.\nTraceback (most recent call last):\n  File \"Driver.py\", line 5, in <module>\n    from Temp import Hello\nModuleNotFoundError: No module named 'Temp'\n\nHere are my component versions:\n>>> qsharp.component_versions()\n{'iqsharp': LooseVersion ('0.11.2004.2825'), 'Jupyter Core': LooseVersion ('1.3.52077.0'), '.NET Runtime': LooseVersion ('.NETCoreApp,Version=v3.1'), 'qsharp': LooseVersion ('0.11.2004.2825')}\n\nI've tried adding the package manually into my conda environment:\n>>> qsharp.packages.add(\"Microsoft.Quantum.MachineLearning::0.11.2004.2825\")\nAdding package Microsoft.Quantum.MachineLearning::0.11.2004.2825.>>> qsharp.reload()\n\nBut that doesn't help.\nAlso, it's worth to note that there is no such problem when I try to do the same in a local Jupyter Notebook which is weird since they run in the same environment.\n", "answers": ["\nYou'll need to actually add these two lines into your Python script:\nqsharp.packages.add(\"Microsoft.Quantum.MachineLearning::0.11.2004.2825\")\nqsharp.reload()\n\nThis causes the packages to be loaded and available at runtime.\nYou need those two lines before you call from Temp import Hello, otherwise you will get the errors since you try to open the Microsoft.Quantum.MachineLearning namespace inside your Temp namespace.\nNotice that you may still see an error message that says No namespace with the name \"Microsoft.Quantum.MachineLearning\" exists due to the behavior of import qsharp (see this issue for more details), but your code should then compile and run successfully anyway, in which case you can ignore that error message.\n", "\nIn VS code, you have to manually add the package in the .csproj file under Item Group:\n<PackageReference Include=\"Microsoft.Quantum.MachineLearning\" Version=\"0.11.2006.403\" />\n\nor alternatively, you can also add it in the terminal:\ndotnet add [project_name].csproj package Microsoft.Quantum.MachineLearning\n\n"], "comments": ["This solves it, I tried adding those two lines in my script before but didn't regard the flow of program. Thank-you. But isn't there supposed to be a permanent solution to calling this package directly? I don't understand why there needs to be an explicit addition of this package for every script.", "It's not actually installing anything. It's just loading the package so that its contents are available. (Similar to an import statement in Python.) It's roughly the same behavior as in the Q# Jupyter notebook, where you would have to call %package for each package dependency each time you restart the kernel and re-execute the notebook."], "link": "https://quantumcomputing.stackexchange.com//questions/12520/q-error-no-namespace-with-the-name-microsoft-quantum-machinelearning-exists?r=SearchResults"}